/*! For license information please see LICENSES */
(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{436:function(t,e,n){"use strict";n.r(e),n.d(e,"ACESFilmicToneMapping",(function(){return ht})),n.d(e,"AddEquation",(function(){return D})),n.d(e,"AddOperation",(function(){return at})),n.d(e,"AdditiveAnimationBlendMode",(function(){return nn})),n.d(e,"AdditiveBlending",(function(){return L})),n.d(e,"AlphaFormat",(function(){return qt})),n.d(e,"AlwaysDepth",(function(){return Z})),n.d(e,"AlwaysStencilFunc",(function(){return In})),n.d(e,"AmbientLight",(function(){return Ed})),n.d(e,"AmbientLightProbe",(function(){return Vd})),n.d(e,"AnimationClip",(function(){return Yh})),n.d(e,"AnimationLoader",(function(){return rd})),n.d(e,"AnimationMixer",(function(){return wp})),n.d(e,"AnimationObjectGroup",(function(){return Mp})),n.d(e,"AnimationUtils",(function(){return Bh})),n.d(e,"ArcCurve",(function(){return gu})),n.d(e,"ArrayCamera",(function(){return Hl})),n.d(e,"ArrowHelper",(function(){return pf})),n.d(e,"Audio",(function(){return ep})),n.d(e,"AudioAnalyser",(function(){return lp})),n.d(e,"AudioContext",(function(){return Hd})),n.d(e,"AudioListener",(function(){return tp})),n.d(e,"AudioLoader",(function(){return Gd})),n.d(e,"AxesHelper",(function(){return ff})),n.d(e,"AxisHelper",(function(){return Vf})),n.d(e,"BackSide",(function(){return M})),n.d(e,"BasicDepthPacking",(function(){return fn})),n.d(e,"BasicShadowMap",(function(){return m})),n.d(e,"BinaryTextureLoader",(function(){return Jf})),n.d(e,"Bone",(function(){return Ec})),n.d(e,"BooleanKeyframeTrack",(function(){return kh})),n.d(e,"BoundingBoxHelper",(function(){return Wf})),n.d(e,"Box2",(function(){return Ip})),n.d(e,"Box3",(function(){return Ti})),n.d(e,"Box3Helper",(function(){return lf})),n.d(e,"BoxBufferGeometry",(function(){return zs})),n.d(e,"BoxGeometry",(function(){return zs})),n.d(e,"BoxHelper",(function(){return of})),n.d(e,"BufferAttribute",(function(){return Qr})),n.d(e,"BufferGeometry",(function(){return ms})),n.d(e,"BufferGeometryLoader",(function(){return Id})),n.d(e,"ByteType",(function(){return zt})),n.d(e,"Cache",(function(){return Qh})),n.d(e,"Camera",(function(){return Hs})),n.d(e,"CameraHelper",(function(){return rf})),n.d(e,"CanvasRenderer",(function(){return Zf})),n.d(e,"CanvasTexture",(function(){return iu})),n.d(e,"CatmullRomCurve3",(function(){return bu})),n.d(e,"CineonToneMapping",(function(){return ut})),n.d(e,"CircleBufferGeometry",(function(){return ru})),n.d(e,"CircleGeometry",(function(){return ru})),n.d(e,"ClampToEdgeWrapping",(function(){return bt})),n.d(e,"Clock",(function(){return Jd})),n.d(e,"Color",(function(){return Xr})),n.d(e,"ColorKeyframeTrack",(function(){return Vh})),n.d(e,"CompressedTexture",(function(){return nu})),n.d(e,"CompressedTextureLoader",(function(){return sd})),n.d(e,"ConeBufferGeometry",(function(){return au})),n.d(e,"ConeGeometry",(function(){return au})),n.d(e,"CubeCamera",(function(){return Vs})),n.d(e,"CubeReflectionMapping",(function(){return mt})),n.d(e,"CubeRefractionMapping",(function(){return gt})),n.d(e,"CubeTexture",(function(){return Ws})),n.d(e,"CubeTextureLoader",(function(){return od})),n.d(e,"CubeUVReflectionMapping",(function(){return xt})),n.d(e,"CubeUVRefractionMapping",(function(){return _t})),n.d(e,"CubicBezierCurve",(function(){return Eu})),n.d(e,"CubicBezierCurve3",(function(){return Au})),n.d(e,"CubicInterpolant",(function(){return Oh})),n.d(e,"CullFaceBack",(function(){return h})),n.d(e,"CullFaceFront",(function(){return d})),n.d(e,"CullFaceFrontBack",(function(){return f})),n.d(e,"CullFaceNone",(function(){return c})),n.d(e,"Curve",(function(){return fu})),n.d(e,"CurvePath",(function(){return Nu})),n.d(e,"CustomBlending",(function(){return P})),n.d(e,"CustomToneMapping",(function(){return pt})),n.d(e,"CylinderBufferGeometry",(function(){return su})),n.d(e,"CylinderGeometry",(function(){return su})),n.d(e,"Cylindrical",(function(){return Pp})),n.d(e,"DataTexture",(function(){return Ac})),n.d(e,"DataTexture2DArray",(function(){return Ga})),n.d(e,"DataTexture3D",(function(){return Xa})),n.d(e,"DataTextureLoader",(function(){return ld})),n.d(e,"DataUtils",(function(){return yf})),n.d(e,"DecrementStencilOp",(function(){return bn})),n.d(e,"DecrementWrapStencilOp",(function(){return Sn})),n.d(e,"DefaultLoadingManager",(function(){return $h})),n.d(e,"DepthFormat",(function(){return Kt})),n.d(e,"DepthStencilFormat",(function(){return $t})),n.d(e,"DepthTexture",(function(){return Wl})),n.d(e,"DirectionalLight",(function(){return Td})),n.d(e,"DirectionalLightHelper",(function(){return tf})),n.d(e,"DiscreteInterpolant",(function(){return Hh})),n.d(e,"DodecahedronBufferGeometry",(function(){return lu})),n.d(e,"DodecahedronGeometry",(function(){return lu})),n.d(e,"DoubleSide",(function(){return w})),n.d(e,"DstAlphaFactor",(function(){return V})),n.d(e,"DstColorFactor",(function(){return j})),n.d(e,"DynamicBufferAttribute",(function(){return If})),n.d(e,"DynamicCopyUsage",(function(){return Gn})),n.d(e,"DynamicDrawUsage",(function(){return zn})),n.d(e,"DynamicReadUsage",(function(){return On})),n.d(e,"EdgesGeometry",(function(){return pu})),n.d(e,"EdgesHelper",(function(){return jf})),n.d(e,"EllipseCurve",(function(){return mu})),n.d(e,"EqualDepth",(function(){return $})),n.d(e,"EqualStencilFunc",(function(){return Ln})),n.d(e,"EquirectangularReflectionMapping",(function(){return vt})),n.d(e,"EquirectangularRefractionMapping",(function(){return yt})),n.d(e,"Euler",(function(){return ur})),n.d(e,"EventDispatcher",(function(){return jn})),n.d(e,"ExtrudeBufferGeometry",(function(){return hh})),n.d(e,"ExtrudeGeometry",(function(){return hh})),n.d(e,"FaceColors",(function(){return bf})),n.d(e,"FileLoader",(function(){return id})),n.d(e,"FlatShading",(function(){return S})),n.d(e,"Float16BufferAttribute",(function(){return ss})),n.d(e,"Float32Attribute",(function(){return Gf})),n.d(e,"Float32BufferAttribute",(function(){return as})),n.d(e,"Float64Attribute",(function(){return kf})),n.d(e,"Float64BufferAttribute",(function(){return os})),n.d(e,"FloatType",(function(){return Ht})),n.d(e,"Fog",(function(){return Zl})),n.d(e,"FogExp2",(function(){return Yl})),n.d(e,"Font",(function(){return rm})),n.d(e,"FontLoader",(function(){return im})),n.d(e,"FrontSide",(function(){return _})),n.d(e,"Frustum",(function(){return Ks})),n.d(e,"GLBufferAttribute",(function(){return Ep})),n.d(e,"GLSL1",(function(){return Vn})),n.d(e,"GLSL3",(function(){return Wn})),n.d(e,"GammaEncoding",(function(){return cn})),n.d(e,"GreaterDepth",(function(){return et})),n.d(e,"GreaterEqualDepth",(function(){return tt})),n.d(e,"GreaterEqualStencilFunc",(function(){return Dn})),n.d(e,"GreaterStencilFunc",(function(){return Cn})),n.d(e,"GridHelper",(function(){return Yp})),n.d(e,"Group",(function(){return Gl})),n.d(e,"HalfFloatType",(function(){return Gt})),n.d(e,"HemisphereLight",(function(){return hd})),n.d(e,"HemisphereLightHelper",(function(){return Jp})),n.d(e,"HemisphereLightProbe",(function(){return kd})),n.d(e,"IcosahedronBufferGeometry",(function(){return ph})),n.d(e,"IcosahedronGeometry",(function(){return ph})),n.d(e,"ImageBitmapLoader",(function(){return Od})),n.d(e,"ImageLoader",(function(){return ad})),n.d(e,"ImageUtils",(function(){return pi})),n.d(e,"ImmediateRenderObject",(function(){return sm})),n.d(e,"IncrementStencilOp",(function(){return Mn})),n.d(e,"IncrementWrapStencilOp",(function(){return wn})),n.d(e,"InstancedBufferAttribute",(function(){return Pc})),n.d(e,"InstancedBufferGeometry",(function(){return Dd})),n.d(e,"InstancedInterleavedBuffer",(function(){return Tp})),n.d(e,"InstancedMesh",(function(){return Bc})),n.d(e,"Int16Attribute",(function(){return Ff})),n.d(e,"Int16BufferAttribute",(function(){return es})),n.d(e,"Int32Attribute",(function(){return Uf})),n.d(e,"Int32BufferAttribute",(function(){return is})),n.d(e,"Int8Attribute",(function(){return Nf})),n.d(e,"Int8BufferAttribute",(function(){return Kr})),n.d(e,"IntType",(function(){return Ot})),n.d(e,"InterleavedBuffer",(function(){return Kl})),n.d(e,"InterleavedBufferAttribute",(function(){return tc})),n.d(e,"Interpolant",(function(){return Fh})),n.d(e,"InterpolateDiscrete",(function(){return Ye})),n.d(e,"InterpolateLinear",(function(){return Ze})),n.d(e,"InterpolateSmooth",(function(){return Qe})),n.d(e,"InvertStencilOp",(function(){return Tn})),n.d(e,"JSONLoader",(function(){return Qf})),n.d(e,"KeepStencilOp",(function(){return xn})),n.d(e,"KeyframeTrack",(function(){return Gh})),n.d(e,"LOD",(function(){return xc})),n.d(e,"LatheBufferGeometry",(function(){return fh})),n.d(e,"LatheGeometry",(function(){return fh})),n.d(e,"Layers",(function(){return dr})),n.d(e,"LensFlare",(function(){return $f})),n.d(e,"LessDepth",(function(){return Q})),n.d(e,"LessEqualDepth",(function(){return K})),n.d(e,"LessEqualStencilFunc",(function(){return Rn})),n.d(e,"LessStencilFunc",(function(){return An})),n.d(e,"Light",(function(){return ud})),n.d(e,"LightProbe",(function(){return Rd})),n.d(e,"Line",(function(){return Vc})),n.d(e,"Line3",(function(){return Bp})),n.d(e,"LineBasicMaterial",(function(){return Fc})),n.d(e,"LineCurve",(function(){return Lu})),n.d(e,"LineCurve3",(function(){return Ru})),n.d(e,"LineDashedMaterial",(function(){return Nh})),n.d(e,"LineLoop",(function(){return Xc})),n.d(e,"LinePieces",(function(){return _f})),n.d(e,"LineSegments",(function(){return qc})),n.d(e,"LineStrip",(function(){return xf})),n.d(e,"LinearEncoding",(function(){return on})),n.d(e,"LinearFilter",(function(){return Rt})),n.d(e,"LinearInterpolant",(function(){return Uh})),n.d(e,"LinearMipMapLinearFilter",(function(){return It})),n.d(e,"LinearMipMapNearestFilter",(function(){return Pt})),n.d(e,"LinearMipmapLinearFilter",(function(){return Dt})),n.d(e,"LinearMipmapNearestFilter",(function(){return Ct})),n.d(e,"LinearToneMapping",(function(){return lt})),n.d(e,"Loader",(function(){return ed})),n.d(e,"LoaderUtils",(function(){return Pd})),n.d(e,"LoadingManager",(function(){return Kh})),n.d(e,"LoopOnce",(function(){return qe})),n.d(e,"LoopPingPong",(function(){return Je})),n.d(e,"LoopRepeat",(function(){return Xe})),n.d(e,"LuminanceAlphaFormat",(function(){return Zt})),n.d(e,"LuminanceFormat",(function(){return Yt})),n.d(e,"MOUSE",(function(){return o})),n.d(e,"Material",(function(){return Hr})),n.d(e,"MaterialLoader",(function(){return Cd})),n.d(e,"Math",(function(){return ii})),n.d(e,"MathUtils",(function(){return ii})),n.d(e,"Matrix3",(function(){return si})),n.d(e,"Matrix4",(function(){return $i})),n.d(e,"MaxEquation",(function(){return B})),n.d(e,"Mesh",(function(){return Is})),n.d(e,"MeshBasicMaterial",(function(){return Jr})),n.d(e,"MeshDepthMaterial",(function(){return Nl})),n.d(e,"MeshDistanceMaterial",(function(){return zl})),n.d(e,"MeshFaceMaterial",(function(){return Sf})),n.d(e,"MeshLambertMaterial",(function(){return Dh})),n.d(e,"MeshMatcapMaterial",(function(){return Ih})),n.d(e,"MeshNormalMaterial",(function(){return Ph})),n.d(e,"MeshPhongMaterial",(function(){return Rh})),n.d(e,"MeshPhysicalMaterial",(function(){return Lh})),n.d(e,"MeshStandardMaterial",(function(){return Ah})),n.d(e,"MeshToonMaterial",(function(){return Ch})),n.d(e,"MinEquation",(function(){return z})),n.d(e,"MirroredRepeatWrapping",(function(){return wt})),n.d(e,"MixOperation",(function(){return st})),n.d(e,"MultiMaterial",(function(){return Tf})),n.d(e,"MultiplyBlending",(function(){return C})),n.d(e,"MultiplyOperation",(function(){return it})),n.d(e,"NearestFilter",(function(){return St})),n.d(e,"NearestMipMapLinearFilter",(function(){return Lt})),n.d(e,"NearestMipMapNearestFilter",(function(){return Et})),n.d(e,"NearestMipmapLinearFilter",(function(){return At})),n.d(e,"NearestMipmapNearestFilter",(function(){return Tt})),n.d(e,"NeverDepth",(function(){return Y})),n.d(e,"NeverStencilFunc",(function(){return En})),n.d(e,"NoBlending",(function(){return E})),n.d(e,"NoColors",(function(){return Mf})),n.d(e,"NoToneMapping",(function(){return ot})),n.d(e,"NormalAnimationBlendMode",(function(){return en})),n.d(e,"NormalBlending",(function(){return A})),n.d(e,"NotEqualDepth",(function(){return nt})),n.d(e,"NotEqualStencilFunc",(function(){return Pn})),n.d(e,"NumberKeyframeTrack",(function(){return Wh})),n.d(e,"Object3D",(function(){return Ar})),n.d(e,"ObjectLoader",(function(){return Nd})),n.d(e,"ObjectSpaceNormalMap",(function(){return vn})),n.d(e,"OctahedronBufferGeometry",(function(){return mh})),n.d(e,"OctahedronGeometry",(function(){return mh})),n.d(e,"OneFactor",(function(){return O})),n.d(e,"OneMinusDstAlphaFactor",(function(){return W})),n.d(e,"OneMinusDstColorFactor",(function(){return X})),n.d(e,"OneMinusSrcAlphaFactor",(function(){return k})),n.d(e,"OneMinusSrcColorFactor",(function(){return H})),n.d(e,"OrthographicCamera",(function(){return ha})),n.d(e,"PCFShadowMap",(function(){return v})),n.d(e,"PCFSoftShadowMap",(function(){return y})),n.d(e,"PMREMGenerator",(function(){return Aa})),n.d(e,"ParametricGeometry",(function(){return tm})),n.d(e,"Particle",(function(){return Af})),n.d(e,"ParticleBasicMaterial",(function(){return Cf})),n.d(e,"ParticleSystem",(function(){return Lf})),n.d(e,"ParticleSystemMaterial",(function(){return Pf})),n.d(e,"Path",(function(){return zu})),n.d(e,"PerspectiveCamera",(function(){return Gs})),n.d(e,"Plane",(function(){return Ys})),n.d(e,"PlaneBufferGeometry",(function(){return ea})),n.d(e,"PlaneGeometry",(function(){return ea})),n.d(e,"PlaneHelper",(function(){return cf})),n.d(e,"PointCloud",(function(){return Ef})),n.d(e,"PointCloudMaterial",(function(){return Rf})),n.d(e,"PointLight",(function(){return wd})),n.d(e,"PointLightHelper",(function(){return Wp})),n.d(e,"Points",(function(){return $c})),n.d(e,"PointsMaterial",(function(){return Jc})),n.d(e,"PolarGridHelper",(function(){return Zp})),n.d(e,"PolyhedronBufferGeometry",(function(){return ou})),n.d(e,"PolyhedronGeometry",(function(){return ou})),n.d(e,"PositionalAudio",(function(){return op})),n.d(e,"PropertyBinding",(function(){return _p})),n.d(e,"PropertyMixer",(function(){return cp})),n.d(e,"QuadraticBezierCurve",(function(){return Cu})),n.d(e,"QuadraticBezierCurve3",(function(){return Pu})),n.d(e,"Quaternion",(function(){return Mi})),n.d(e,"QuaternionKeyframeTrack",(function(){return qh})),n.d(e,"QuaternionLinearInterpolant",(function(){return jh})),n.d(e,"REVISION",(function(){return r})),n.d(e,"RGBADepthPacking",(function(){return mn})),n.d(e,"RGBAFormat",(function(){return Jt})),n.d(e,"RGBAIntegerFormat",(function(){return se})),n.d(e,"RGBA_ASTC_10x10_Format",(function(){return Le})),n.d(e,"RGBA_ASTC_10x5_Format",(function(){return Te})),n.d(e,"RGBA_ASTC_10x6_Format",(function(){return Ee})),n.d(e,"RGBA_ASTC_10x8_Format",(function(){return Ae})),n.d(e,"RGBA_ASTC_12x10_Format",(function(){return Re})),n.d(e,"RGBA_ASTC_12x12_Format",(function(){return Ce})),n.d(e,"RGBA_ASTC_4x4_Format",(function(){return ve})),n.d(e,"RGBA_ASTC_5x4_Format",(function(){return ye})),n.d(e,"RGBA_ASTC_5x5_Format",(function(){return xe})),n.d(e,"RGBA_ASTC_6x5_Format",(function(){return _e})),n.d(e,"RGBA_ASTC_6x6_Format",(function(){return Me})),n.d(e,"RGBA_ASTC_8x5_Format",(function(){return be})),n.d(e,"RGBA_ASTC_8x6_Format",(function(){return we})),n.d(e,"RGBA_ASTC_8x8_Format",(function(){return Se})),n.d(e,"RGBA_BPTC_Format",(function(){return Pe})),n.d(e,"RGBA_ETC2_EAC_Format",(function(){return ge})),n.d(e,"RGBA_PVRTC_2BPPV1_Format",(function(){return pe})),n.d(e,"RGBA_PVRTC_4BPPV1_Format",(function(){return de})),n.d(e,"RGBA_S3TC_DXT1_Format",(function(){return oe})),n.d(e,"RGBA_S3TC_DXT3_Format",(function(){return le})),n.d(e,"RGBA_S3TC_DXT5_Format",(function(){return ce})),n.d(e,"RGBDEncoding",(function(){return pn})),n.d(e,"RGBEEncoding",(function(){return un})),n.d(e,"RGBEFormat",(function(){return Qt})),n.d(e,"RGBFormat",(function(){return Xt})),n.d(e,"RGBIntegerFormat",(function(){return re})),n.d(e,"RGBM16Encoding",(function(){return dn})),n.d(e,"RGBM7Encoding",(function(){return hn})),n.d(e,"RGB_ETC1_Format",(function(){return fe})),n.d(e,"RGB_ETC2_Format",(function(){return me})),n.d(e,"RGB_PVRTC_2BPPV1_Format",(function(){return he})),n.d(e,"RGB_PVRTC_4BPPV1_Format",(function(){return ue})),n.d(e,"RGB_S3TC_DXT1_Format",(function(){return ae})),n.d(e,"RGFormat",(function(){return ne})),n.d(e,"RGIntegerFormat",(function(){return ie})),n.d(e,"RawShaderMaterial",(function(){return da})),n.d(e,"Ray",(function(){return Ki})),n.d(e,"Raycaster",(function(){return Ap})),n.d(e,"RectAreaLight",(function(){return Ad})),n.d(e,"RedFormat",(function(){return te})),n.d(e,"RedIntegerFormat",(function(){return ee})),n.d(e,"ReinhardToneMapping",(function(){return ct})),n.d(e,"RepeatWrapping",(function(){return Mt})),n.d(e,"ReplaceStencilOp",(function(){return _n})),n.d(e,"ReverseSubtractEquation",(function(){return N})),n.d(e,"RingBufferGeometry",(function(){return gh})),n.d(e,"RingGeometry",(function(){return gh})),n.d(e,"SRGB8_ALPHA8_ASTC_10x10_Format",(function(){return Ve})),n.d(e,"SRGB8_ALPHA8_ASTC_10x5_Format",(function(){return He})),n.d(e,"SRGB8_ALPHA8_ASTC_10x6_Format",(function(){return Ge})),n.d(e,"SRGB8_ALPHA8_ASTC_10x8_Format",(function(){return ke})),n.d(e,"SRGB8_ALPHA8_ASTC_12x10_Format",(function(){return We})),n.d(e,"SRGB8_ALPHA8_ASTC_12x12_Format",(function(){return je})),n.d(e,"SRGB8_ALPHA8_ASTC_4x4_Format",(function(){return De})),n.d(e,"SRGB8_ALPHA8_ASTC_5x4_Format",(function(){return Ie})),n.d(e,"SRGB8_ALPHA8_ASTC_5x5_Format",(function(){return Ne})),n.d(e,"SRGB8_ALPHA8_ASTC_6x5_Format",(function(){return ze})),n.d(e,"SRGB8_ALPHA8_ASTC_6x6_Format",(function(){return Be})),n.d(e,"SRGB8_ALPHA8_ASTC_8x5_Format",(function(){return Fe})),n.d(e,"SRGB8_ALPHA8_ASTC_8x6_Format",(function(){return Oe})),n.d(e,"SRGB8_ALPHA8_ASTC_8x8_Format",(function(){return Ue})),n.d(e,"Scene",(function(){return Ql})),n.d(e,"SceneUtils",(function(){return Kf})),n.d(e,"ShaderChunk",(function(){return na})),n.d(e,"ShaderLib",(function(){return ra})),n.d(e,"ShaderMaterial",(function(){return Us})),n.d(e,"ShadowMaterial",(function(){return Eh})),n.d(e,"Shape",(function(){return Bu})),n.d(e,"ShapeBufferGeometry",(function(){return vh})),n.d(e,"ShapeGeometry",(function(){return vh})),n.d(e,"ShapePath",(function(){return mf})),n.d(e,"ShapeUtils",(function(){return lh})),n.d(e,"ShortType",(function(){return Bt})),n.d(e,"Skeleton",(function(){return Cc})),n.d(e,"SkeletonHelper",(function(){return kp})),n.d(e,"SkinnedMesh",(function(){return Tc})),n.d(e,"SmoothShading",(function(){return T})),n.d(e,"Sphere",(function(){return Wi})),n.d(e,"SphereBufferGeometry",(function(){return yh})),n.d(e,"SphereGeometry",(function(){return yh})),n.d(e,"Spherical",(function(){return Cp})),n.d(e,"SphericalHarmonics3",(function(){return Ld})),n.d(e,"SplineCurve",(function(){return Du})),n.d(e,"SpotLight",(function(){return yd})),n.d(e,"SpotLightHelper",(function(){return Op})),n.d(e,"Sprite",(function(){return mc})),n.d(e,"SpriteMaterial",(function(){return ec})),n.d(e,"SrcAlphaFactor",(function(){return G})),n.d(e,"SrcAlphaSaturateFactor",(function(){return J})),n.d(e,"SrcColorFactor",(function(){return U})),n.d(e,"StaticCopyUsage",(function(){return Hn})),n.d(e,"StaticDrawUsage",(function(){return Nn})),n.d(e,"StaticReadUsage",(function(){return Fn})),n.d(e,"StereoCamera",(function(){return Xd})),n.d(e,"StreamCopyUsage",(function(){return kn})),n.d(e,"StreamDrawUsage",(function(){return Bn})),n.d(e,"StreamReadUsage",(function(){return Un})),n.d(e,"StringKeyframeTrack",(function(){return Xh})),n.d(e,"SubtractEquation",(function(){return I})),n.d(e,"SubtractiveBlending",(function(){return R})),n.d(e,"TOUCH",(function(){return l})),n.d(e,"TangentSpaceNormalMap",(function(){return gn})),n.d(e,"TetrahedronBufferGeometry",(function(){return xh})),n.d(e,"TetrahedronGeometry",(function(){return xh})),n.d(e,"TextGeometry",(function(){return nm})),n.d(e,"Texture",(function(){return mi})),n.d(e,"TextureLoader",(function(){return cd})),n.d(e,"TorusBufferGeometry",(function(){return _h})),n.d(e,"TorusGeometry",(function(){return _h})),n.d(e,"TorusKnotBufferGeometry",(function(){return Mh})),n.d(e,"TorusKnotGeometry",(function(){return Mh})),n.d(e,"Triangle",(function(){return Or})),n.d(e,"TriangleFanDrawMode",(function(){return an})),n.d(e,"TriangleStripDrawMode",(function(){return sn})),n.d(e,"TrianglesDrawMode",(function(){return rn})),n.d(e,"TubeBufferGeometry",(function(){return bh})),n.d(e,"TubeGeometry",(function(){return bh})),n.d(e,"UVMapping",(function(){return ft})),n.d(e,"Uint16Attribute",(function(){return Of})),n.d(e,"Uint16BufferAttribute",(function(){return ns})),n.d(e,"Uint32Attribute",(function(){return Hf})),n.d(e,"Uint32BufferAttribute",(function(){return rs})),n.d(e,"Uint8Attribute",(function(){return zf})),n.d(e,"Uint8BufferAttribute",(function(){return $r})),n.d(e,"Uint8ClampedAttribute",(function(){return Bf})),n.d(e,"Uint8ClampedBufferAttribute",(function(){return ts})),n.d(e,"Uniform",(function(){return Sp})),n.d(e,"UniformsLib",(function(){return ia})),n.d(e,"UniformsUtils",(function(){return Os})),n.d(e,"UnsignedByteType",(function(){return Nt})),n.d(e,"UnsignedInt248Type",(function(){return jt})),n.d(e,"UnsignedIntType",(function(){return Ut})),n.d(e,"UnsignedShort4444Type",(function(){return kt})),n.d(e,"UnsignedShort5551Type",(function(){return Vt})),n.d(e,"UnsignedShort565Type",(function(){return Wt})),n.d(e,"UnsignedShortType",(function(){return Ft})),n.d(e,"VSMShadowMap",(function(){return x})),n.d(e,"Vector2",(function(){return ri})),n.d(e,"Vector3",(function(){return bi})),n.d(e,"Vector4",(function(){return vi})),n.d(e,"VectorKeyframeTrack",(function(){return Jh})),n.d(e,"Vertex",(function(){return Df})),n.d(e,"VertexColors",(function(){return wf})),n.d(e,"VideoTexture",(function(){return eu})),n.d(e,"WebGL1Renderer",(function(){return Jl})),n.d(e,"WebGLCubeRenderTarget",(function(){return js})),n.d(e,"WebGLMultipleRenderTargets",(function(){return xi})),n.d(e,"WebGLMultisampleRenderTarget",(function(){return _i})),n.d(e,"WebGLRenderTarget",(function(){return yi})),n.d(e,"WebGLRenderTargetCube",(function(){return Yf})),n.d(e,"WebGLRenderer",(function(){return Xl})),n.d(e,"WebGLUtils",(function(){return Ul})),n.d(e,"WireframeGeometry",(function(){return wh})),n.d(e,"WireframeHelper",(function(){return qf})),n.d(e,"WrapAroundEnding",(function(){return tn})),n.d(e,"XHRLoader",(function(){return Xf})),n.d(e,"ZeroCurvatureEnding",(function(){return Ke})),n.d(e,"ZeroFactor",(function(){return F})),n.d(e,"ZeroSlopeEnding",(function(){return $e})),n.d(e,"ZeroStencilOp",(function(){return yn})),n.d(e,"sRGBEncoding",(function(){return ln}));const r="135",o={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},l={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},c=0,h=1,d=2,f=3,m=0,v=1,y=2,x=3,_=0,M=1,w=2,S=1,T=2,E=0,A=1,L=2,R=3,C=4,P=5,D=100,I=101,N=102,z=103,B=104,F=200,O=201,U=202,H=203,G=204,k=205,V=206,W=207,j=208,X=209,J=210,Y=0,Z=1,Q=2,K=3,$=4,tt=5,et=6,nt=7,it=0,st=1,at=2,ot=0,lt=1,ct=2,ut=3,ht=4,pt=5,ft=300,mt=301,gt=302,vt=303,yt=304,xt=306,_t=307,Mt=1e3,bt=1001,wt=1002,St=1003,Tt=1004,Et=1004,At=1005,Lt=1005,Rt=1006,Ct=1007,Pt=1007,Dt=1008,It=1008,Nt=1009,zt=1010,Bt=1011,Ft=1012,Ot=1013,Ut=1014,Ht=1015,Gt=1016,kt=1017,Vt=1018,Wt=1019,jt=1020,qt=1021,Xt=1022,Jt=1023,Yt=1024,Zt=1025,Qt=Jt,Kt=1026,$t=1027,te=1028,ee=1029,ne=1030,ie=1031,re=1032,se=1033,ae=33776,oe=33777,le=33778,ce=33779,ue=35840,he=35841,de=35842,pe=35843,fe=36196,me=37492,ge=37496,ve=37808,ye=37809,xe=37810,_e=37811,Me=37812,be=37813,we=37814,Se=37815,Te=37816,Ee=37817,Ae=37818,Le=37819,Re=37820,Ce=37821,Pe=36492,De=37840,Ie=37841,Ne=37842,ze=37843,Be=37844,Fe=37845,Oe=37846,Ue=37847,He=37848,Ge=37849,ke=37850,Ve=37851,We=37852,je=37853,qe=2200,Xe=2201,Je=2202,Ye=2300,Ze=2301,Qe=2302,Ke=2400,$e=2401,tn=2402,en=2500,nn=2501,rn=0,sn=1,an=2,on=3e3,ln=3001,cn=3007,un=3002,hn=3004,dn=3005,pn=3006,fn=3200,mn=3201,gn=0,vn=1,yn=0,xn=7680,_n=7681,Mn=7682,bn=7683,wn=34055,Sn=34056,Tn=5386,En=512,An=513,Ln=514,Rn=515,Cn=516,Pn=517,Dn=518,In=519,Nn=35044,zn=35048,Bn=35040,Fn=35045,On=35049,Un=35041,Hn=35046,Gn=35050,kn=35042,Vn="100",Wn="300 es";class jn{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let i=0,e=n.length;i<e;i++)n[i].call(this,t);t.target=null}}}const qn=[];for(let i=0;i<256;i++)qn[i]=(i<16?"0":"")+i.toString(16);let Xn=1234567;const Jn=Math.PI/180,Yn=180/Math.PI;function Zn(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(qn[255&t]+qn[t>>8&255]+qn[t>>16&255]+qn[t>>24&255]+"-"+qn[255&e]+qn[e>>8&255]+"-"+qn[e>>16&15|64]+qn[e>>24&255]+"-"+qn[63&n|128]+qn[n>>8&255]+"-"+qn[n>>16&255]+qn[n>>24&255]+qn[255&r]+qn[r>>8&255]+qn[r>>16&255]+qn[r>>24&255]).toUpperCase()}function Qn(t,e,n){return Math.max(e,Math.min(n,t))}function Kn(t,e){return(t%e+e)%e}function $n(t,e,n){return(1-n)*t+n*e}function ti(t){return 0==(t&t-1)&&0!==t}function ei(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function ni(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var ii=Object.freeze({__proto__:null,DEG2RAD:Jn,RAD2DEG:Yn,generateUUID:Zn,clamp:Qn,euclideanModulo:Kn,mapLinear:function(t,e,n,r,o){return r+(t-e)*(o-r)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:$n,damp:function(t,e,n,dt){return $n(t,e,1-Math.exp(-n*dt))},pingpong:function(t,e=1){return e-Math.abs(Kn(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(s){return void 0!==s&&(Xn=s%2147483647),Xn=16807*Xn%2147483647,(Xn-1)/2147483646},degToRad:function(t){return t*Jn},radToDeg:function(t){return t*Yn},isPowerOfTwo:ti,ceilPowerOfTwo:ei,floorPowerOfTwo:ni,setQuaternionFromProperEuler:function(q,a,b,t,e){const n=Math.cos,r=Math.sin,o=n(b/2),l=r(b/2),c=n((a+t)/2),h=r((a+t)/2),d=n((a-t)/2),f=r((a-t)/2),m=n((t-a)/2),v=r((t-a)/2);switch(e){case"XYX":q.set(o*h,l*d,l*f,o*c);break;case"YZY":q.set(l*f,o*h,l*d,o*c);break;case"ZXZ":q.set(l*d,l*f,o*h,o*c);break;case"XZX":q.set(o*h,l*v,l*m,o*c);break;case"YXY":q.set(l*m,o*h,l*v,o*c);break;case"ZYZ":q.set(l*v,l*m,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+e)}}});class ri{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(s){return this.x+=s,this.y+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(s){return this.x-=s,this.y-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*s+t.x,this.y=r*s+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ri.prototype.isVector2=!0;class si{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,o,l,c,h,d){const f=this.elements;return f[0]=t,f[1]=r,f[2]=c,f[3]=e,f[4]=o,f[5]=h,f[6]=n,f[7]=l,f[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(a,b){const t=a.elements,e=b.elements,n=this.elements,r=t[0],o=t[3],l=t[6],c=t[1],h=t[4],d=t[7],f=t[2],m=t[5],v=t[8],y=e[0],x=e[3],_=e[6],M=e[1],w=e[4],S=e[7],T=e[2],E=e[5],A=e[8];return n[0]=r*y+o*M+l*T,n[3]=r*x+o*w+l*E,n[6]=r*_+o*S+l*A,n[1]=c*y+h*M+d*T,n[4]=c*x+h*w+d*E,n[7]=c*_+h*S+d*A,n[2]=f*y+m*M+v*T,n[5]=f*x+m*w+v*E,n[8]=f*_+m*S+v*A,this}multiplyScalar(s){const t=this.elements;return t[0]*=s,t[3]*=s,t[6]*=s,t[1]*=s,t[4]*=s,t[7]*=s,t[2]*=s,t[5]*=s,t[8]*=s,this}determinant(){const t=this.elements,a=t[0],b=t[1],e=t[2],n=t[3],r=t[4],o=t[5],g=t[6],l=t[7],i=t[8];return a*r*i-a*o*l-b*n*i+b*o*g+e*n*l-e*r*g}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],o=t[3],l=t[4],c=t[5],h=t[6],d=t[7],f=t[8],m=f*l-c*d,v=c*h-f*o,y=d*o-l*h,x=e*m+n*v+r*y;if(0===x)return this.set(0,0,0,0,0,0,0,0,0);const _=1/x;return t[0]=m*_,t[1]=(r*d-f*n)*_,t[2]=(c*n-r*l)*_,t[3]=v*_,t[4]=(f*e-r*h)*_,t[5]=(r*o-c*e)*_,t[6]=y*_,t[7]=(n*h-d*e)*_,t[8]=(l*e-n*o)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,o,l,c){const h=Math.cos(o),s=Math.sin(o);return this.set(n*h,n*s,-n*(h*l+s*c)+l+t,-r*s,r*h,-r*(-s*l+h*c)+c+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),s=Math.sin(t),n=this.elements,r=n[0],o=n[3],l=n[6],c=n[1],h=n[4],d=n[7];return n[0]=e*r+s*c,n[3]=e*o+s*h,n[6]=e*l+s*d,n[1]=-s*r+e*c,n[4]=-s*o+e*h,n[7]=-s*l+e*d,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function ai(t){if(0===t.length)return-1/0;let e=t[0];for(let i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}si.prototype.isMatrix3=!0;const oi={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ci(t,e){return new oi[t](e)}function ui(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function hi(t,e=0){let h1=3735928559^e,h2=1103547991^e;for(let e,i=0;i<t.length;i++)e=t.charCodeAt(i),h1=Math.imul(h1^e,2654435761),h2=Math.imul(h2^e,1597334677);return h1=Math.imul(h1^h1>>>16,2246822507)^Math.imul(h2^h2>>>13,3266489909),h2=Math.imul(h2^h2>>>16,2246822507)^Math.imul(h1^h1>>>13,3266489909),4294967296*(2097151&h2)+(h1>>>0)}let di;class pi{static getDataURL(image){if(/^data:/i.test(image.src))return image.src;if("undefined"==typeof HTMLCanvasElement)return image.src;let canvas;if(image instanceof HTMLCanvasElement)canvas=image;else{void 0===di&&(di=ui("canvas")),di.width=image.width,di.height=image.height;const t=di.getContext("2d");image instanceof ImageData?t.putImageData(image,0,0):t.drawImage(image,0,0,image.width,image.height),canvas=di}return canvas.width>2048||canvas.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",image),canvas.toDataURL("image/jpeg",.6)):canvas.toDataURL("image/png")}}let fi=0;class mi extends jn{constructor(image=mi.DEFAULT_IMAGE,t=mi.DEFAULT_MAPPING,e=bt,n=bt,r=Rt,o=Dt,l=Jt,c=Nt,h=1,d=on){super(),Object.defineProperty(this,"id",{value:fi++}),this.uuid=Zn(),this.name="",this.image=image,this.mipmaps=[],this.mapping=t,this.wrapS=e,this.wrapT=n,this.magFilter=r,this.minFilter=o,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=c,this.offset=new ri(0,0),this.repeat=new ri(1,1),this.center=new ri(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new si,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(source){return this.name=source.name,this.image=source.image,this.mipmaps=source.mipmaps.slice(0),this.mapping=source.mapping,this.wrapS=source.wrapS,this.wrapT=source.wrapT,this.magFilter=source.magFilter,this.minFilter=source.minFilter,this.anisotropy=source.anisotropy,this.format=source.format,this.internalFormat=source.internalFormat,this.type=source.type,this.offset.copy(source.offset),this.repeat.copy(source.repeat),this.center.copy(source.center),this.rotation=source.rotation,this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrix.copy(source.matrix),this.generateMipmaps=source.generateMipmaps,this.premultiplyAlpha=source.premultiplyAlpha,this.flipY=source.flipY,this.unpackAlignment=source.unpackAlignment,this.encoding=source.encoding,this.userData=JSON.parse(JSON.stringify(source.userData)),this}toJSON(meta){const t=void 0===meta||"string"==typeof meta;if(!t&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];const output={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const image=this.image;if(void 0===image.uuid&&(image.uuid=Zn()),!t&&void 0===meta.images[image.uuid]){let t;if(Array.isArray(image)){t=[];for(let i=0,e=image.length;i<e;i++)image[i].isDataTexture?t.push(gi(image[i].image)):t.push(gi(image[i]))}else t=gi(image);meta.images[image.uuid]={uuid:image.uuid,url:t}}output.image=image.uuid}return"{}"!==JSON.stringify(this.userData)&&(output.userData=this.userData),t||(meta.textures[this.uuid]=output),output}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ft)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Mt:t.x=t.x-Math.floor(t.x);break;case bt:t.x=t.x<0?0:1;break;case wt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Mt:t.y=t.y-Math.floor(t.y);break;case bt:t.y=t.y<0?0:1;break;case wt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function gi(image){return"undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap?pi.getDataURL(image):image.data?{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}mi.DEFAULT_IMAGE=void 0,mi.DEFAULT_MAPPING=ft,mi.prototype.isTexture=!0;class vi{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this.w+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this.w-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*r+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*r+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*r+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*r+l[15]*o,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(q){this.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s),this}setAxisAngleFromRotationMatrix(t){let e,n,r,o;const l=.01,c=.1,h=t.elements,d=h[0],f=h[4],m=h[8],v=h[1],y=h[5],x=h[9],_=h[2],M=h[6],w=h[10];if(Math.abs(f-v)<l&&Math.abs(m-_)<l&&Math.abs(x-M)<l){if(Math.abs(f+v)<c&&Math.abs(m+_)<c&&Math.abs(x+M)<c&&Math.abs(d+y+w-3)<c)return this.set(1,0,0,0),this;e=Math.PI;const t=(d+1)/2,h=(y+1)/2,S=(w+1)/2,T=(f+v)/4,E=(m+_)/4,A=(x+M)/4;return t>h&&t>S?t<l?(n=0,r=.707106781,o=.707106781):(n=Math.sqrt(t),r=T/n,o=E/n):h>S?h<l?(n=.707106781,r=0,o=.707106781):(r=Math.sqrt(h),n=T/r,o=A/r):S<l?(n=.707106781,r=.707106781,o=0):(o=Math.sqrt(S),n=E/o,r=A/o),this.set(n,r,o,e),this}let s=Math.sqrt((M-x)*(M-x)+(m-_)*(m-_)+(v-f)*(v-f));return Math.abs(s)<.001&&(s=1),this.x=(M-x)/s,this.y=(m-_)/s,this.z=(v-f)/s,this.w=Math.acos((d+y+w-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}vi.prototype.isVector4=!0;class yi extends jn{constructor(t,e,n={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new vi(0,0,t,e),this.scissorTest=!1,this.viewport=new vi(0,0,t,e),this.texture=new mi(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Rt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(source){return this.width=source.width,this.height=source.height,this.depth=source.depth,this.viewport.copy(source.viewport),this.texture=source.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=source.depthBuffer,this.stencilBuffer=source.stencilBuffer,this.depthTexture=source.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}yi.prototype.isWebGLRenderTarget=!0;class xi extends yi{constructor(t,e,n){super(t,e);const r=this.texture;this.texture=[];for(let i=0;i<n;i++)this.texture[i]=r.clone()}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=t,this.texture[i].image.height=e,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(source){this.dispose(),this.width=source.width,this.height=source.height,this.depth=source.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=source.depthBuffer,this.stencilBuffer=source.stencilBuffer,this.depthTexture=source.depthTexture,this.texture.length=0;for(let i=0,t=source.texture.length;i<t;i++)this.texture[i]=source.texture[i].clone();return this}}xi.prototype.isWebGLMultipleRenderTargets=!0;class _i extends yi{constructor(t,e,n={}){super(t,e,n),this.samples=4,this.ignoreDepthForMultisampleCopy=void 0===n.ignoreDepth||n.ignoreDepth,this.useRenderToTexture=void 0!==n.useRenderToTexture&&n.useRenderToTexture,this.useRenderbuffer=!1===this.useRenderToTexture}copy(source){return super.copy.call(this,source),this.samples=source.samples,this.useRenderToTexture=source.useRenderToTexture,this.useRenderbuffer=source.useRenderbuffer,this}}_i.prototype.isWebGLMultisampleRenderTarget=!0;class Mi{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,o,l,c){let h=n[r+0],d=n[r+1],f=n[r+2],m=n[r+3];const v=o[l+0],y=o[l+1],x=o[l+2],_=o[l+3];if(0===c)return t[e+0]=h,t[e+1]=d,t[e+2]=f,void(t[e+3]=m);if(1===c)return t[e+0]=v,t[e+1]=y,t[e+2]=x,void(t[e+3]=_);if(m!==_||h!==v||d!==y||f!==x){let s=1-c;const t=h*v+d*y+f*x+m*_,e=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const r=Math.sqrt(n),o=Math.atan2(r,t*e);s=Math.sin(s*o)/r,c=Math.sin(c*o)/r}const r=c*e;if(h=h*s+v*r,d=d*s+y*r,f=f*s+x*r,m=m*s+_*r,s===1-c){const t=1/Math.sqrt(h*h+d*d+f*f+m*m);h*=t,d*=t,f*=t,m*=t}}t[e]=h,t[e+1]=d,t[e+2]=f,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,r,o,l){const c=n[r],h=n[r+1],d=n[r+2],f=n[r+3],m=o[l],v=o[l+1],y=o[l+2],x=o[l+3];return t[e]=c*x+f*m+h*y-d*v,t[e+1]=h*x+f*v+d*m-c*y,t[e+2]=d*x+f*y+c*v-h*m,t[e+3]=f*x-c*m-h*v-d*y,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,d=c(n/2),f=c(r/2),m=c(o/2),v=h(n/2),y=h(r/2),x=h(o/2);switch(l){case"XYZ":this._x=v*f*m+d*y*x,this._y=d*y*m-v*f*x,this._z=d*f*x+v*y*m,this._w=d*f*m-v*y*x;break;case"YXZ":this._x=v*f*m+d*y*x,this._y=d*y*m-v*f*x,this._z=d*f*x-v*y*m,this._w=d*f*m+v*y*x;break;case"ZXY":this._x=v*f*m-d*y*x,this._y=d*y*m+v*f*x,this._z=d*f*x+v*y*m,this._w=d*f*m-v*y*x;break;case"ZYX":this._x=v*f*m-d*y*x,this._y=d*y*m+v*f*x,this._z=d*f*x-v*y*m,this._w=d*f*m+v*y*x;break;case"YZX":this._x=v*f*m+d*y*x,this._y=d*y*m+v*f*x,this._z=d*f*x-v*y*m,this._w=d*f*m-v*y*x;break;case"XZY":this._x=v*f*m-d*y*x,this._y=d*y*m-v*f*x,this._z=d*f*x+v*y*m,this._w=d*f*m+v*y*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],o=e[8],l=e[1],c=e[5],h=e[9],d=e[2],f=e[6],m=e[10],v=n+c+m;if(v>0){const s=.5/Math.sqrt(v+1);this._w=.25/s,this._x=(f-h)*s,this._y=(o-d)*s,this._z=(l-r)*s}else if(n>c&&n>m){const s=2*Math.sqrt(1+n-c-m);this._w=(f-h)/s,this._x=.25*s,this._y=(r+l)/s,this._z=(o+d)/s}else if(c>m){const s=2*Math.sqrt(1+c-n-m);this._w=(o-d)/s,this._x=(r+l)/s,this._y=.25*s,this._z=(h+f)/s}else{const s=2*Math.sqrt(1+m-n-c);this._w=(l-r)/s,this._x=(o+d)/s,this._y=(h+f)/s,this._z=.25*s}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(q){return 2*Math.acos(Math.abs(Qn(this.dot(q),-1,1)))}rotateTowards(q,t){const e=this.angleTo(q);if(0===e)return this;const n=Math.min(1,t/e);return this.slerp(q,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(q,p){return void 0!==p?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(q,p)):this.multiplyQuaternions(this,q)}premultiply(q){return this.multiplyQuaternions(q,this)}multiplyQuaternions(a,b){const t=a._x,e=a._y,n=a._z,r=a._w,o=b._x,l=b._y,c=b._z,h=b._w;return this._x=t*h+r*o+e*c-n*l,this._y=e*h+r*l+n*o-t*c,this._z=n*h+r*c+t*l-e*o,this._w=r*h-t*o-e*l-n*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+r*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=r,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const s=1-e;return this._w=s*l+e*this._w,this._x=s*n+e*this._x,this._y=s*r+e*this._y,this._z=s*o+e*this._z,this.normalize(),this._onChangeCallback(),this}const d=Math.sqrt(h),f=Math.atan2(d,c),m=Math.sin((1-e)*f)/d,v=Math.sin(e*f)/d;return this._w=l*m+this._w*v,this._x=n*m+this._x*v,this._y=r*m+this._y*v,this._z=o*m+this._z*v,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),r=2*Math.PI*Math.random(),o=2*Math.PI*Math.random();return this.set(e*Math.cos(r),n*Math.sin(o),n*Math.cos(o),e*Math.sin(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Mi.prototype.isQuaternion=!0;class bi{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Si.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Si.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*r,this.y=o[1]*e+o[4]*n+o[7]*r,this.z=o[2]*e+o[5]*n+o[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*r+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*r+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*r+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*r+o[14])*l,this}applyQuaternion(q){const t=this.x,e=this.y,n=this.z,r=q.x,o=q.y,l=q.z,c=q.w,h=c*t+o*n-l*e,d=c*e+l*t-r*n,f=c*n+r*e-o*t,m=-r*t-o*e-l*n;return this.x=h*c+m*-r+d*-l-f*-o,this.y=d*c+m*-o+f*-r-h*-l,this.z=f*c+m*-l+h*-o-d*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*r,this.y=o[1]*e+o[5]*n+o[9]*r,this.z=o[2]*e+o[6]*n+o[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(a,b){const t=a.x,e=a.y,n=a.z,r=b.x,o=b.y,l=b.z;return this.x=e*l-n*o,this.y=n*r-t*l,this.z=t*o-e*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return wi.copy(this).projectOnVector(t),this.sub(wi)}reflect(t){return this.sub(wi.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Qn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const u=2*(Math.random()-.5),t=Math.random()*Math.PI*2,e=Math.sqrt(1-u**2);return this.x=e*Math.cos(t),this.y=e*Math.sin(t),this.z=u,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}bi.prototype.isVector3=!0;const wi=new bi,Si=new Mi;class Ti{constructor(t=new bi(1/0,1/0,1/0),e=new bi(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,o=-1/0,l=-1/0,c=-1/0;for(let i=0,h=t.length;i<h;i+=3){const h=t[i],d=t[i+1],f=t[i+2];h<e&&(e=h),d<n&&(n=d),f<r&&(r=f),h>o&&(o=h),d>l&&(l=d),f>c&&(c=f)}return this.min.set(e,n,r),this.max.set(o,l,c),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,o=-1/0,l=-1/0,c=-1/0;for(let i=0,h=t.count;i<h;i++){const h=t.getX(i),d=t.getY(i),f=t.getZ(i);h<e&&(e=h),d<n&&(n=d),f<r&&(r=f),h>o&&(o=h),d>l&&(l=d),f>c&&(c=f)}return this.min.set(e,n,r),this.max.set(o,l,c),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,e){const n=Ai.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(object){return this.makeEmpty(),this.expandByObject(object)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(object){object.updateWorldMatrix(!1,!1);const t=object.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),Li.copy(t.boundingBox),Li.applyMatrix4(object.matrixWorld),this.union(Li));const e=object.children;for(let i=0,t=e.length;i<t;i++)this.expandByObject(e[i]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ai),Ai.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(zi),Bi.subVectors(this.max,zi),Ri.subVectors(t.a,zi),Ci.subVectors(t.b,zi),Pi.subVectors(t.c,zi),Di.subVectors(Ci,Ri),Ii.subVectors(Pi,Ci),Ni.subVectors(Ri,Pi);let e=[0,-Di.z,Di.y,0,-Ii.z,Ii.y,0,-Ni.z,Ni.y,Di.z,0,-Di.x,Ii.z,0,-Ii.x,Ni.z,0,-Ni.x,-Di.y,Di.x,0,-Ii.y,Ii.x,0,-Ni.y,Ni.x,0];return!!Ui(e,Ri,Ci,Pi,Bi)&&(e=[1,0,0,0,1,0,0,0,1],!!Ui(e,Ri,Ci,Pi,Bi)&&(Fi.crossVectors(Di,Ii),e=[Fi.x,Fi.y,Fi.z],Ui(e,Ri,Ci,Pi,Bi)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ai.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(Ai).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ei[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ei[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ei[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ei[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ei[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ei[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ei[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ei[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ei)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Ti.prototype.isBox3=!0;const Ei=[new bi,new bi,new bi,new bi,new bi,new bi,new bi,new bi],Ai=new bi,Li=new Ti,Ri=new bi,Ci=new bi,Pi=new bi,Di=new bi,Ii=new bi,Ni=new bi,zi=new bi,Bi=new bi,Fi=new bi,Oi=new bi;function Ui(t,e,n,r,o){for(let i=0,l=t.length-3;i<=l;i+=3){Oi.fromArray(t,i);const l=o.x*Math.abs(Oi.x)+o.y*Math.abs(Oi.y)+o.z*Math.abs(Oi.z),c=e.dot(Oi),h=n.dot(Oi),d=r.dot(Oi);if(Math.max(-Math.max(c,h,d),Math.min(c,h,d))>l)return!1}return!0}const Hi=new Ti,Gi=new bi,ki=new bi,Vi=new bi;class Wi{constructor(t=new bi,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Hi.setFromPoints(t).getCenter(n);let r=0;for(let i=0,e=t.length;i<e;i++)r=Math.max(r,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Vi.subVectors(t,this.center);const e=Vi.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(Vi.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return ki.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Gi.copy(t.center).add(ki)),this.expandByPoint(Gi.copy(t.center).sub(ki)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ji=new bi,qi=new bi,Xi=new bi,Ji=new bi,Yi=new bi,Zi=new bi,Qi=new bi;class Ki{constructor(t=new bi,e=new bi(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ji)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ji.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ji.copy(this.direction).multiplyScalar(e).add(this.origin),ji.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){qi.copy(t).add(e).multiplyScalar(.5),Xi.copy(e).sub(t).normalize(),Ji.copy(this.origin).sub(qi);const o=.5*t.distanceTo(e),l=-this.direction.dot(Xi),c=Ji.dot(this.direction),h=-Ji.dot(Xi),d=Ji.lengthSq(),f=Math.abs(1-l*l);let m,v,y,x;if(f>0)if(m=l*h-c,v=l*c-h,x=o*f,m>=0)if(v>=-x)if(v<=x){const t=1/f;m*=t,v*=t,y=m*(m+l*v+2*c)+v*(l*m+v+2*h)+d}else v=o,m=Math.max(0,-(l*v+c)),y=-m*m+v*(v+2*h)+d;else v=-o,m=Math.max(0,-(l*v+c)),y=-m*m+v*(v+2*h)+d;else v<=-x?(m=Math.max(0,-(-l*o+c)),v=m>0?-o:Math.min(Math.max(-o,-h),o),y=-m*m+v*(v+2*h)+d):v<=x?(m=0,v=Math.min(Math.max(-o,-h),o),y=v*(v+2*h)+d):(m=Math.max(0,-(l*o+c)),v=m>0?o:Math.min(Math.max(-o,-h),o),y=-m*m+v*(v+2*h)+d);else v=l>0?-o:o,m=Math.max(0,-(l*v+c)),y=-m*m+v*(v+2*h)+d;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),r&&r.copy(Xi).multiplyScalar(v).add(qi),y}intersectSphere(t,e){ji.subVectors(t.center,this.origin);const n=ji.dot(this.direction),r=ji.dot(ji)-n*n,o=t.radius*t.radius;if(r>o)return null;const l=Math.sqrt(o-r),c=n-l,h=n+l;return c<0&&h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,o,l,c,h;const d=1/this.direction.x,f=1/this.direction.y,m=1/this.direction.z,v=this.origin;return d>=0?(n=(t.min.x-v.x)*d,r=(t.max.x-v.x)*d):(n=(t.max.x-v.x)*d,r=(t.min.x-v.x)*d),f>=0?(o=(t.min.y-v.y)*f,l=(t.max.y-v.y)*f):(o=(t.max.y-v.y)*f,l=(t.min.y-v.y)*f),n>l||o>r?null:((o>n||n!=n)&&(n=o),(l<r||r!=r)&&(r=l),m>=0?(c=(t.min.z-v.z)*m,h=(t.max.z-v.z)*m):(c=(t.max.z-v.z)*m,h=(t.min.z-v.z)*m),n>h||c>r?null:((c>n||n!=n)&&(n=c),(h<r||r!=r)&&(r=h),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,ji)}intersectTriangle(a,b,t,e,n){Yi.subVectors(b,a),Zi.subVectors(t,a),Qi.crossVectors(Yi,Zi);let r,o=this.direction.dot(Qi);if(o>0){if(e)return null;r=1}else{if(!(o<0))return null;r=-1,o=-o}Ji.subVectors(this.origin,a);const l=r*this.direction.dot(Zi.crossVectors(Ji,Zi));if(l<0)return null;const c=r*this.direction.dot(Yi.cross(Ji));if(c<0)return null;if(l+c>o)return null;const h=-r*Ji.dot(Qi);return h<0?null:this.at(h/o,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class $i{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,o,l,c,h,d,f,m,v,y,x,_,M){const w=this.elements;return w[0]=t,w[4]=e,w[8]=n,w[12]=r,w[1]=o,w[5]=l,w[9]=c,w[13]=h,w[2]=d,w[6]=f,w[10]=m,w[14]=v,w[3]=y,w[7]=x,w[11]=_,w[15]=M,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new $i).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/er.setFromMatrixColumn(t,0).length(),o=1/er.setFromMatrixColumn(t,1).length(),l=1/er.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,o=t.z,a=Math.cos(n),b=Math.sin(n),l=Math.cos(r),c=Math.sin(r),h=Math.cos(o),d=Math.sin(o);if("XYZ"===t.order){const t=a*h,n=a*d,r=b*h,o=b*d;e[0]=l*h,e[4]=-l*d,e[8]=c,e[1]=n+r*c,e[5]=t-o*c,e[9]=-b*l,e[2]=o-t*c,e[6]=r+n*c,e[10]=a*l}else if("YXZ"===t.order){const t=l*h,n=l*d,r=c*h,o=c*d;e[0]=t+o*b,e[4]=r*b-n,e[8]=a*c,e[1]=a*d,e[5]=a*h,e[9]=-b,e[2]=n*b-r,e[6]=o+t*b,e[10]=a*l}else if("ZXY"===t.order){const t=l*h,n=l*d,r=c*h,o=c*d;e[0]=t-o*b,e[4]=-a*d,e[8]=r+n*b,e[1]=n+r*b,e[5]=a*h,e[9]=o-t*b,e[2]=-a*c,e[6]=b,e[10]=a*l}else if("ZYX"===t.order){const t=a*h,n=a*d,r=b*h,o=b*d;e[0]=l*h,e[4]=r*c-n,e[8]=t*c+o,e[1]=l*d,e[5]=o*c+t,e[9]=n*c-r,e[2]=-c,e[6]=b*l,e[10]=a*l}else if("YZX"===t.order){const t=a*l,n=a*c,r=b*l,o=b*c;e[0]=l*h,e[4]=o-t*d,e[8]=r*d+n,e[1]=d,e[5]=a*h,e[9]=-b*h,e[2]=-c*h,e[6]=n*d+r,e[10]=t-o*d}else if("XZY"===t.order){const t=a*l,n=a*c,r=b*l,o=b*c;e[0]=l*h,e[4]=-d,e[8]=c*h,e[1]=t*d+o,e[5]=a*h,e[9]=n*d-r,e[2]=r*d-n,e[6]=b*h,e[10]=o*d+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(q){return this.compose(ir,q,rr)}lookAt(t,e,n){const r=this.elements;return or.subVectors(t,e),0===or.lengthSq()&&(or.z=1),or.normalize(),sr.crossVectors(n,or),0===sr.lengthSq()&&(1===Math.abs(n.z)?or.x+=1e-4:or.z+=1e-4,or.normalize(),sr.crossVectors(n,or)),sr.normalize(),ar.crossVectors(or,sr),r[0]=sr.x,r[4]=ar.x,r[8]=or.x,r[1]=sr.y,r[5]=ar.y,r[9]=or.y,r[2]=sr.z,r[6]=ar.z,r[10]=or.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(a,b){const t=a.elements,e=b.elements,n=this.elements,r=t[0],o=t[4],l=t[8],c=t[12],h=t[1],d=t[5],f=t[9],m=t[13],v=t[2],y=t[6],x=t[10],_=t[14],M=t[3],w=t[7],S=t[11],T=t[15],E=e[0],A=e[4],L=e[8],R=e[12],C=e[1],P=e[5],D=e[9],I=e[13],N=e[2],z=e[6],B=e[10],F=e[14],O=e[3],U=e[7],H=e[11],G=e[15];return n[0]=r*E+o*C+l*N+c*O,n[4]=r*A+o*P+l*z+c*U,n[8]=r*L+o*D+l*B+c*H,n[12]=r*R+o*I+l*F+c*G,n[1]=h*E+d*C+f*N+m*O,n[5]=h*A+d*P+f*z+m*U,n[9]=h*L+d*D+f*B+m*H,n[13]=h*R+d*I+f*F+m*G,n[2]=v*E+y*C+x*N+_*O,n[6]=v*A+y*P+x*z+_*U,n[10]=v*L+y*D+x*B+_*H,n[14]=v*R+y*I+x*F+_*G,n[3]=M*E+w*C+S*N+T*O,n[7]=M*A+w*P+S*z+T*U,n[11]=M*L+w*D+S*B+T*H,n[15]=M*R+w*I+S*F+T*G,this}multiplyScalar(s){const t=this.elements;return t[0]*=s,t[4]*=s,t[8]*=s,t[12]*=s,t[1]*=s,t[5]*=s,t[9]*=s,t[13]*=s,t[2]*=s,t[6]*=s,t[10]*=s,t[14]*=s,t[3]*=s,t[7]*=s,t[11]*=s,t[15]*=s,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],o=t[12],l=t[1],c=t[5],h=t[9],d=t[13],f=t[2],m=t[6],v=t[10],y=t[14];return t[3]*(+o*h*m-r*d*m-o*c*v+n*d*v+r*c*y-n*h*y)+t[7]*(+e*h*y-e*d*v+o*l*v-r*l*y+r*d*f-o*h*f)+t[11]*(+e*d*m-e*c*y-o*l*m+n*l*y+o*c*f-n*d*f)+t[15]*(-r*c*f-e*h*m+e*c*v+r*l*m-n*l*v+n*h*f)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],o=t[3],l=t[4],c=t[5],h=t[6],d=t[7],f=t[8],m=t[9],v=t[10],y=t[11],x=t[12],_=t[13],M=t[14],w=t[15],S=m*M*d-_*v*d+_*h*y-c*M*y-m*h*w+c*v*w,T=x*v*d-f*M*d-x*h*y+l*M*y+f*h*w-l*v*w,E=f*_*d-x*m*d+x*c*y-l*_*y-f*c*w+l*m*w,A=x*m*h-f*_*h-x*c*v+l*_*v+f*c*M-l*m*M,L=e*S+n*T+r*E+o*A;if(0===L)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const R=1/L;return t[0]=S*R,t[1]=(_*v*o-m*M*o-_*r*y+n*M*y+m*r*w-n*v*w)*R,t[2]=(c*M*o-_*h*o+_*r*d-n*M*d-c*r*w+n*h*w)*R,t[3]=(m*h*o-c*v*o-m*r*d+n*v*d+c*r*y-n*h*y)*R,t[4]=T*R,t[5]=(f*M*o-x*v*o+x*r*y-e*M*y-f*r*w+e*v*w)*R,t[6]=(x*h*o-l*M*o-x*r*d+e*M*d+l*r*w-e*h*w)*R,t[7]=(l*v*o-f*h*o+f*r*d-e*v*d-l*r*y+e*h*y)*R,t[8]=E*R,t[9]=(x*m*o-f*_*o-x*n*y+e*_*y+f*n*w-e*m*w)*R,t[10]=(l*_*o-x*c*o+x*n*d-e*_*d-l*n*w+e*c*w)*R,t[11]=(f*c*o-l*m*o-f*n*d+e*m*d+l*n*y-e*c*y)*R,t[12]=A*R,t[13]=(f*_*r-x*m*r+x*n*v-e*_*v-f*n*M+e*m*M)*R,t[14]=(x*c*r-l*_*r-x*n*h+e*_*h+l*n*M-e*c*M)*R,t[15]=(l*m*r-f*c*r+f*n*h-e*m*h-l*n*v+e*c*v)*R,this}scale(t){const e=this.elements,n=t.x,r=t.y,o=t.z;return e[0]*=n,e[4]*=r,e[8]*=o,e[1]*=n,e[5]*=r,e[9]*=o,e[2]*=n,e[6]*=r,e[10]*=o,e[3]*=n,e[7]*=r,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,e,-s,0,0,s,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,0,s,0,0,1,0,0,-s,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,0,s,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),r=1-n,o=t.x,l=t.y,c=t.z,h=r*o,d=r*l;return this.set(h*o+n,h*l-s*c,h*c+s*l,0,h*l+s*c,d*l+n,d*c-s*o,0,h*c-s*l,d*c+s*o,r*c*c+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,r,o,l){return this.set(1,n,o,0,t,1,l,0,e,r,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,d=o+o,f=l+l,m=c+c,v=o*d,y=o*f,x=o*m,_=l*f,M=l*m,w=c*m,S=h*d,T=h*f,E=h*m,A=n.x,L=n.y,R=n.z;return r[0]=(1-(_+w))*A,r[1]=(y+E)*A,r[2]=(x-T)*A,r[3]=0,r[4]=(y-E)*L,r[5]=(1-(v+w))*L,r[6]=(M+S)*L,r[7]=0,r[8]=(x+T)*R,r[9]=(M-S)*R,r[10]=(1-(v+_))*R,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let o=er.set(r[0],r[1],r[2]).length();const l=er.set(r[4],r[5],r[6]).length(),c=er.set(r[8],r[9],r[10]).length();this.determinant()<0&&(o=-o),t.x=r[12],t.y=r[13],t.z=r[14],nr.copy(this);const h=1/o,d=1/l,f=1/c;return nr.elements[0]*=h,nr.elements[1]*=h,nr.elements[2]*=h,nr.elements[4]*=d,nr.elements[5]*=d,nr.elements[6]*=d,nr.elements[8]*=f,nr.elements[9]*=f,nr.elements[10]*=f,e.setFromRotationMatrix(nr),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,r,o,l){void 0===l&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const c=this.elements,h=2*o/(e-t),d=2*o/(n-r),a=(e+t)/(e-t),b=(n+r)/(n-r),f=-(l+o)/(l-o),m=-2*l*o/(l-o);return c[0]=h,c[4]=0,c[8]=a,c[12]=0,c[1]=0,c[5]=d,c[9]=b,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=m,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,r,o,l){const c=this.elements,h=1/(e-t),d=1/(n-r),p=1/(l-o),f=(e+t)*h,m=(n+r)*d,v=(l+o)*p;return c[0]=2*h,c[4]=0,c[8]=0,c[12]=-f,c[1]=0,c[5]=2*d,c[9]=0,c[13]=-m,c[2]=0,c[6]=0,c[10]=-2*p,c[14]=-v,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}$i.prototype.isMatrix4=!0;const er=new bi,nr=new $i,ir=new bi(0,0,0),rr=new bi(1,1,1),sr=new bi,ar=new bi,or=new bi,lr=new $i,cr=new Mi;class ur{constructor(t=0,e=0,n=0,r=ur.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r=this._order){return this._x=t,this._y=e,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const r=t.elements,o=r[0],l=r[4],c=r[8],h=r[1],d=r[5],f=r[9],m=r[2],v=r[6],y=r[10];switch(e){case"XYZ":this._y=Math.asin(Qn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,y),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(v,d),this._z=0);break;case"YXZ":this._x=Math.asin(-Qn(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,y),this._z=Math.atan2(h,d)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(Qn(v,-1,1)),Math.abs(v)<.9999999?(this._y=Math.atan2(-m,y),this._z=Math.atan2(-l,d)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-Qn(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(v,y),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,d));break;case"YZX":this._z=Math.asin(Qn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-f,d),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,y));break;case"XZY":this._z=Math.asin(-Qn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(v,d),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-f,y),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(q,t,e){return lr.makeRotationFromQuaternion(q),this.setFromRotationMatrix(lr,t,e)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return cr.setFromEuler(this),this.setFromQuaternion(cr,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new bi(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ur.prototype.isEuler=!0,ur.DefaultOrder="XYZ",ur.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class dr{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let pr=0;const fr=new bi,mr=new Mi,gr=new $i,vr=new bi,yr=new bi,xr=new bi,_r=new Mi,Mr=new bi(1,0,0),wr=new bi(0,1,0),Sr=new bi(0,0,1),Tr={type:"added"},Er={type:"removed"};class Ar extends jn{constructor(){super(),Object.defineProperty(this,"id",{value:pr++}),this.uuid=Zn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ar.DefaultUp.clone();const t=new bi,e=new ur,n=new Mi,r=new bi(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new $i},normalMatrix:{value:new si}}),this.matrix=new $i,this.matrixWorld=new $i,this.matrixAutoUpdate=Ar.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new dr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(q){return this.quaternion.premultiply(q),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(q){this.quaternion.copy(q)}rotateOnAxis(t,e){return mr.setFromAxisAngle(t,e),this.quaternion.multiply(mr),this}rotateOnWorldAxis(t,e){return mr.setFromAxisAngle(t,e),this.quaternion.premultiply(mr),this}rotateX(t){return this.rotateOnAxis(Mr,t)}rotateY(t){return this.rotateOnAxis(wr,t)}rotateZ(t){return this.rotateOnAxis(Sr,t)}translateOnAxis(t,e){return fr.copy(t).applyQuaternion(this.quaternion),this.position.add(fr.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Mr,t)}translateY(t){return this.translateOnAxis(wr,t)}translateZ(t){return this.translateOnAxis(Sr,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(gr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?vr.copy(t):vr.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),yr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?gr.lookAt(yr,vr,this.up):gr.lookAt(vr,yr,this.up),this.quaternion.setFromRotationMatrix(gr),r&&(gr.extractRotation(r.matrixWorld),mr.setFromRotationMatrix(gr),this.quaternion.premultiply(mr.invert()))}add(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return object===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this):(object&&object.isObject3D?(null!==object.parent&&object.parent.remove(object),object.parent=this,this.children.push(object),object.dispatchEvent(Tr)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object),this)}remove(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(object);return-1!==t&&(object.parent=null,this.children.splice(t,1),object.dispatchEvent(Er)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null,object.dispatchEvent(Er)}return this.children.length=0,this}attach(object){return this.updateWorldMatrix(!0,!1),gr.copy(this.matrixWorld).invert(),null!==object.parent&&(object.parent.updateWorldMatrix(!0,!1),gr.multiply(object.parent.matrixWorld)),object.applyMatrix4(gr),this.add(object),object.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const object=this.children[i].getObjectByProperty(t,e);if(void 0!==object)return object}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yr,t,xr),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yr,_r,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let i=0,e=t.length;i<e;i++)t[i].updateWorldMatrix(!1,!0)}}toJSON(meta){const t=void 0===meta||"string"==typeof meta,output={};t&&(meta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},output.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const object={};function e(t,element){return void 0===t[element.uuid]&&(t[element.uuid]=element.toJSON(meta)),element.uuid}if(object.uuid=this.uuid,object.type=this.type,""!==this.name&&(object.name=this.name),!0===this.castShadow&&(object.castShadow=!0),!0===this.receiveShadow&&(object.receiveShadow=!0),!1===this.visible&&(object.visible=!1),!1===this.frustumCulled&&(object.frustumCulled=!1),0!==this.renderOrder&&(object.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(object.userData=this.userData),object.layers=this.layers.mask,object.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(object.matrixAutoUpdate=!1),this.isInstancedMesh&&(object.type="InstancedMesh",object.count=this.count,object.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(object.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?object.background=this.background.toJSON():this.background.isTexture&&(object.background=this.background.toJSON(meta).uuid)),this.environment&&this.environment.isTexture&&(object.environment=this.environment.toJSON(meta).uuid);else if(this.isMesh||this.isLine||this.isPoints){object.geometry=e(meta.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let i=0,t=n.length;i<t;i++){const t=n[i];e(meta.shapes,t)}else e(meta.shapes,n)}}if(this.isSkinnedMesh&&(object.bindMode=this.bindMode,object.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(meta.skeletons,this.skeleton),object.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let i=0,n=this.material.length;i<n;i++)t.push(e(meta.materials,this.material[i]));object.material=t}else object.material=e(meta.materials,this.material);if(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++)object.children.push(this.children[i].toJSON(meta).object)}if(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const t=this.animations[i];object.animations.push(e(meta.animations,t))}}if(t){const t=n(meta.geometries),e=n(meta.materials),r=n(meta.textures),o=n(meta.images),l=n(meta.shapes),c=n(meta.skeletons),h=n(meta.animations);t.length>0&&(output.geometries=t),e.length>0&&(output.materials=e),r.length>0&&(output.textures=r),o.length>0&&(output.images=o),l.length>0&&(output.shapes=l),c.length>0&&(output.skeletons=c),h.length>0&&(output.animations=h)}return output.object=object,output;function n(t){const e=[];for(const n in t){const data=t[n];delete data.metadata,e.push(data)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(source,t=!0){if(this.name=source.name,this.up.copy(source.up),this.position.copy(source.position),this.rotation.order=source.rotation.order,this.quaternion.copy(source.quaternion),this.scale.copy(source.scale),this.matrix.copy(source.matrix),this.matrixWorld.copy(source.matrixWorld),this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate,this.layers.mask=source.layers.mask,this.visible=source.visible,this.castShadow=source.castShadow,this.receiveShadow=source.receiveShadow,this.frustumCulled=source.frustumCulled,this.renderOrder=source.renderOrder,this.userData=JSON.parse(JSON.stringify(source.userData)),!0===t)for(let i=0;i<source.children.length;i++){const t=source.children[i];this.add(t.clone())}return this}}Ar.DefaultUp=new bi(0,1,0),Ar.DefaultMatrixAutoUpdate=!0,Ar.prototype.isObject3D=!0;const Lr=new bi,Rr=new bi,Cr=new bi,Pr=new bi,Dr=new bi,Ir=new bi,Nr=new bi,zr=new bi,Br=new bi,Fr=new bi;class Or{constructor(a=new bi,b=new bi,t=new bi){this.a=a,this.b=b,this.c=t}static getNormal(a,b,t,e){e.subVectors(t,b),Lr.subVectors(a,b),e.cross(Lr);const n=e.lengthSq();return n>0?e.multiplyScalar(1/Math.sqrt(n)):e.set(0,0,0)}static getBarycoord(t,a,b,e,n){Lr.subVectors(e,a),Rr.subVectors(b,a),Cr.subVectors(t,a);const r=Lr.dot(Lr),o=Lr.dot(Rr),l=Lr.dot(Cr),c=Rr.dot(Rr),h=Rr.dot(Cr),d=r*c-o*o;if(0===d)return n.set(-2,-1,-1);const f=1/d,u=(c*l-o*h)*f,m=(r*h-o*l)*f;return n.set(1-u-m,m,u)}static containsPoint(t,a,b,e){return this.getBarycoord(t,a,b,e,Pr),Pr.x>=0&&Pr.y>=0&&Pr.x+Pr.y<=1}static getUV(t,e,n,r,o,l,c,h){return this.getBarycoord(t,e,n,r,Pr),h.set(0,0),h.addScaledVector(o,Pr.x),h.addScaledVector(l,Pr.y),h.addScaledVector(c,Pr.z),h}static isFrontFacing(a,b,t,e){return Lr.subVectors(t,b),Rr.subVectors(a,b),Lr.cross(Rr).dot(e)<0}set(a,b,t){return this.a.copy(a),this.b.copy(b),this.c.copy(t),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,n,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Lr.subVectors(this.c,this.b),Rr.subVectors(this.a,this.b),.5*Lr.cross(Rr).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Or.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Or.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,o){return Or.getUV(t,this.a,this.b,this.c,e,n,r,o)}containsPoint(t){return Or.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Or.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(p,t){const a=this.a,b=this.b,e=this.c;let n,r;Dr.subVectors(b,a),Ir.subVectors(e,a),zr.subVectors(p,a);const o=Dr.dot(zr),l=Ir.dot(zr);if(o<=0&&l<=0)return t.copy(a);Br.subVectors(p,b);const c=Dr.dot(Br),h=Ir.dot(Br);if(c>=0&&h<=c)return t.copy(b);const d=o*h-c*l;if(d<=0&&o>=0&&c<=0)return n=o/(o-c),t.copy(a).addScaledVector(Dr,n);Fr.subVectors(p,e);const f=Dr.dot(Fr),m=Ir.dot(Fr);if(m>=0&&f<=m)return t.copy(e);const v=f*l-o*m;if(v<=0&&l>=0&&m<=0)return r=l/(l-m),t.copy(a).addScaledVector(Ir,r);const y=c*m-f*h;if(y<=0&&h-c>=0&&f-m>=0)return Nr.subVectors(e,b),r=(h-c)/(h-c+(f-m)),t.copy(b).addScaledVector(Nr,r);const x=1/(y+v+d);return n=v*x,r=d*x,t.copy(a).addScaledVector(Dr,n).addScaledVector(Ir,r)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Ur=0;class Hr extends jn{constructor(){super(),Object.defineProperty(this,"id",{value:Ur++}),this.uuid=Zn(),this.name="",this.type="Material",this.fog=!0,this.blending=A,this.side=_,this.vertexColors=!1,this.opacity=1,this.format=Jt,this.transparent=!1,this.blendSrc=G,this.blendDst=k,this.blendEquation=D,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=K,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=In,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=xn,this.stencilZFail=xn,this.stencilZPass=xn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===S;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(meta){const t=void 0===meta||"string"==typeof meta;t&&(meta={textures:{},images:{}});const data={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function e(t){const e=[];for(const n in t){const data=t[n];delete data.metadata,e.push(data)}return e}if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),this.color&&this.color.isColor&&(data.color=this.color.getHex()),void 0!==this.roughness&&(data.roughness=this.roughness),void 0!==this.metalness&&(data.metalness=this.metalness),void 0!==this.sheen&&(data.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(data.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(data.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(data.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(data.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(data.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(data.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(data.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(data.shininess=this.shininess),void 0!==this.clearcoat&&(data.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(data.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid,data.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(data.map=this.map.toJSON(meta).uuid),this.matcap&&this.matcap.isTexture&&(data.matcap=this.matcap.toJSON(meta).uuid),this.alphaMap&&this.alphaMap.isTexture&&(data.alphaMap=this.alphaMap.toJSON(meta).uuid),this.lightMap&&this.lightMap.isTexture&&(data.lightMap=this.lightMap.toJSON(meta).uuid,data.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(data.aoMap=this.aoMap.toJSON(meta).uuid,data.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(data.bumpMap=this.bumpMap.toJSON(meta).uuid,data.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(data.normalMap=this.normalMap.toJSON(meta).uuid,data.normalMapType=this.normalMapType,data.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(data.displacementMap=this.displacementMap.toJSON(meta).uuid,data.displacementScale=this.displacementScale,data.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(data.roughnessMap=this.roughnessMap.toJSON(meta).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(data.metalnessMap=this.metalnessMap.toJSON(meta).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(data.emissiveMap=this.emissiveMap.toJSON(meta).uuid),this.specularMap&&this.specularMap.isTexture&&(data.specularMap=this.specularMap.toJSON(meta).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(data.specularIntensityMap=this.specularIntensityMap.toJSON(meta).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(data.specularColorMap=this.specularColorMap.toJSON(meta).uuid),this.envMap&&this.envMap.isTexture&&(data.envMap=this.envMap.toJSON(meta).uuid,void 0!==this.combine&&(data.combine=this.combine)),void 0!==this.envMapIntensity&&(data.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(data.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(data.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(data.gradientMap=this.gradientMap.toJSON(meta).uuid),void 0!==this.transmission&&(data.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(data.transmissionMap=this.transmissionMap.toJSON(meta).uuid),void 0!==this.thickness&&(data.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(data.thicknessMap=this.thicknessMap.toJSON(meta).uuid),void 0!==this.attenuationDistance&&(data.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(data.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(data.size=this.size),null!==this.shadowSide&&(data.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(data.sizeAttenuation=this.sizeAttenuation),this.blending!==A&&(data.blending=this.blending),this.side!==_&&(data.side=this.side),this.vertexColors&&(data.vertexColors=!0),this.opacity<1&&(data.opacity=this.opacity),this.format!==Jt&&(data.format=this.format),!0===this.transparent&&(data.transparent=this.transparent),data.depthFunc=this.depthFunc,data.depthTest=this.depthTest,data.depthWrite=this.depthWrite,data.colorWrite=this.colorWrite,data.stencilWrite=this.stencilWrite,data.stencilWriteMask=this.stencilWriteMask,data.stencilFunc=this.stencilFunc,data.stencilRef=this.stencilRef,data.stencilFuncMask=this.stencilFuncMask,data.stencilFail=this.stencilFail,data.stencilZFail=this.stencilZFail,data.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(data.rotation=this.rotation),!0===this.polygonOffset&&(data.polygonOffset=!0),0!==this.polygonOffsetFactor&&(data.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(data.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(data.linewidth=this.linewidth),void 0!==this.dashSize&&(data.dashSize=this.dashSize),void 0!==this.gapSize&&(data.gapSize=this.gapSize),void 0!==this.scale&&(data.scale=this.scale),!0===this.dithering&&(data.dithering=!0),this.alphaTest>0&&(data.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(data.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(data.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(data.wireframe=this.wireframe),this.wireframeLinewidth>1&&(data.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(data.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(data.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(data.flatShading=this.flatShading),!1===this.visible&&(data.visible=!1),!1===this.toneMapped&&(data.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(data.userData=this.userData),t){const t=e(meta.textures),n=e(meta.images);t.length>0&&(data.textures=t),n.length>0&&(data.images=n)}return data}clone(){return(new this.constructor).copy(this)}copy(source){this.name=source.name,this.fog=source.fog,this.blending=source.blending,this.side=source.side,this.vertexColors=source.vertexColors,this.opacity=source.opacity,this.format=source.format,this.transparent=source.transparent,this.blendSrc=source.blendSrc,this.blendDst=source.blendDst,this.blendEquation=source.blendEquation,this.blendSrcAlpha=source.blendSrcAlpha,this.blendDstAlpha=source.blendDstAlpha,this.blendEquationAlpha=source.blendEquationAlpha,this.depthFunc=source.depthFunc,this.depthTest=source.depthTest,this.depthWrite=source.depthWrite,this.stencilWriteMask=source.stencilWriteMask,this.stencilFunc=source.stencilFunc,this.stencilRef=source.stencilRef,this.stencilFuncMask=source.stencilFuncMask,this.stencilFail=source.stencilFail,this.stencilZFail=source.stencilZFail,this.stencilZPass=source.stencilZPass,this.stencilWrite=source.stencilWrite;const t=source.clippingPlanes;let e=null;if(null!==t){const n=t.length;e=new Array(n);for(let i=0;i!==n;++i)e[i]=t[i].clone()}return this.clippingPlanes=e,this.clipIntersection=source.clipIntersection,this.clipShadows=source.clipShadows,this.shadowSide=source.shadowSide,this.colorWrite=source.colorWrite,this.precision=source.precision,this.polygonOffset=source.polygonOffset,this.polygonOffsetFactor=source.polygonOffsetFactor,this.polygonOffsetUnits=source.polygonOffsetUnits,this.dithering=source.dithering,this.alphaTest=source.alphaTest,this.alphaToCoverage=source.alphaToCoverage,this.premultipliedAlpha=source.premultipliedAlpha,this.visible=source.visible,this.toneMapped=source.toneMapped,this.userData=JSON.parse(JSON.stringify(source.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}Hr.prototype.isMaterial=!0;const Gr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kr={h:0,s:0,l:0},Vr={h:0,s:0,l:0};function Wr(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+6*(q-p)*(2/3-t):p}function jr(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function qr(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Xr{constructor(t,g,b){return void 0===g&&void 0===b?this.set(t):this.setRGB(t,g,b)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,g,b){return this.r=t,this.g=g,this.b=b,this}setHSL(t,s,e){if(t=Kn(t,1),s=Qn(s,0,1),e=Qn(e,0,1),0===s)this.r=this.g=this.b=e;else{const p=e<=.5?e*(1+s):e+s-e*s,q=2*e-p;this.r=Wr(q,p,t+1/3),this.g=Wr(q,p,t),this.b=Wr(q,p,t-1/3)}return this}setStyle(style){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}let e;if(e=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(style)){let n;const r=e[1],o=e[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,t(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,t(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const e=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,r=parseInt(n[3],10)/100;return t(n[4]),this.setHSL(e,s,r)}}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(style)){const t=e[1],n=t.length;if(3===n)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===n)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return style&&style.length>0?this.setColorName(style):this}setColorName(style){const t=Gr[style.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+style),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=jr(t.r),this.g=jr(t.g),this.b=jr(t.b),this}copyLinearToSRGB(t){return this.r=qr(t.r),this.g=qr(t.g),this.b=qr(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,g=this.g,b=this.b,n=Math.max(e,g,b),r=Math.min(e,g,b);let o,l;const c=(r+n)/2;if(r===n)o=0,l=0;else{const t=n-r;switch(l=c<=.5?t/(n+r):t/(2-n-r),n){case e:o=(g-b)/t+(g<b?6:0);break;case g:o=(b-e)/t+2;break;case b:o=(e-g)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,s,e){return this.getHSL(kr),kr.h+=t,kr.s+=s,kr.l+=e,this.setHSL(kr.h,kr.s,kr.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(s){return this.r+=s,this.g+=s,this.b+=s,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(s){return this.r*=s,this.g*=s,this.b*=s,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(kr),t.getHSL(Vr);const n=$n(kr.h,Vr.h,e),s=$n(kr.s,Vr.s,e),r=$n(kr.l,Vr.l,e);return this.setHSL(n,s,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Xr.NAMES=Gr,Xr.prototype.isColor=!0,Xr.prototype.r=1,Xr.prototype.g=1,Xr.prototype.b=1;class Jr extends Hr{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Xr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=it,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this}}Jr.prototype.isMeshBasicMaterial=!0;const Yr=new bi,Zr=new ri;class Qr{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=Nn,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(source){return this.name=source.name,this.array=new source.array.constructor(source.array),this.itemSize=source.itemSize,this.count=source.count,this.normalized=source.normalized,this.usage=source.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new Xr),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new ri),e[n++]=r.x,e[n++]=r.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new bi),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new vi),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let i=0,e=this.count;i<e;i++)Zr.fromBufferAttribute(this,i),Zr.applyMatrix3(t),this.setXY(i,Zr.x,Zr.y);else if(3===this.itemSize)for(let i=0,e=this.count;i<e;i++)Yr.fromBufferAttribute(this,i),Yr.applyMatrix3(t),this.setXYZ(i,Yr.x,Yr.y,Yr.z);return this}applyMatrix4(t){for(let i=0,e=this.count;i<e;i++)Yr.x=this.getX(i),Yr.y=this.getY(i),Yr.z=this.getZ(i),Yr.applyMatrix4(t),this.setXYZ(i,Yr.x,Yr.y,Yr.z);return this}applyNormalMatrix(t){for(let i=0,e=this.count;i<e;i++)Yr.x=this.getX(i),Yr.y=this.getY(i),Yr.z=this.getZ(i),Yr.applyNormalMatrix(t),this.setXYZ(i,Yr.x,Yr.y,Yr.z);return this}transformDirection(t){for(let i=0,e=this.count;i<e;i++)Yr.x=this.getX(i),Yr.y=this.getY(i),Yr.z=this.getZ(i),Yr.transformDirection(t),this.setXYZ(i,Yr.x,Yr.y,Yr.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,o){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const data={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(data.name=this.name),this.usage!==Nn&&(data.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(data.updateRange=this.updateRange),data}}Qr.prototype.isBufferAttribute=!0;class Kr extends Qr{constructor(t,e,n){super(new Int8Array(t),e,n)}}class $r extends Qr{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class ts extends Qr{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class es extends Qr{constructor(t,e,n){super(new Int16Array(t),e,n)}}class ns extends Qr{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class is extends Qr{constructor(t,e,n){super(new Int32Array(t),e,n)}}class rs extends Qr{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class ss extends Qr{constructor(t,e,n){super(new Uint16Array(t),e,n)}}ss.prototype.isFloat16BufferAttribute=!0;class as extends Qr{constructor(t,e,n){super(new Float32Array(t),e,n)}}class os extends Qr{constructor(t,e,n){super(new Float64Array(t),e,n)}}let ls=0;const cs=new $i,us=new Ar,hs=new bi,ds=new Ti,ps=new Ti,fs=new bi;class ms extends jn{constructor(){super(),Object.defineProperty(this,"id",{value:ls++}),this.uuid=Zn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ai(t)>65535?rs:ns)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new si).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(q){return cs.makeRotationFromQuaternion(q),this.applyMatrix4(cs),this}rotateX(t){return cs.makeRotationX(t),this.applyMatrix4(cs),this}rotateY(t){return cs.makeRotationY(t),this.applyMatrix4(cs),this}rotateZ(t){return cs.makeRotationZ(t),this.applyMatrix4(cs),this}translate(t,e,n){return cs.makeTranslation(t,e,n),this.applyMatrix4(cs),this}scale(t,e,n){return cs.makeScale(t,e,n),this.applyMatrix4(cs),this}lookAt(t){return us.lookAt(t),us.updateMatrix(),this.applyMatrix4(us.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(hs).negate(),this.translate(hs.x,hs.y,hs.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new as(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ti);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new bi(-1/0,-1/0,-1/0),new bi(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,t=e.length;i<t;i++){const t=e[i];ds.setFromBufferAttribute(t),this.morphTargetsRelative?(fs.addVectors(this.boundingBox.min,ds.min),this.boundingBox.expandByPoint(fs),fs.addVectors(this.boundingBox.max,ds.max),this.boundingBox.expandByPoint(fs)):(this.boundingBox.expandByPoint(ds.min),this.boundingBox.expandByPoint(ds.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Wi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new bi,1/0);if(t){const n=this.boundingSphere.center;if(ds.setFromBufferAttribute(t),e)for(let i=0,t=e.length;i<t;i++){const t=e[i];ps.setFromBufferAttribute(t),this.morphTargetsRelative?(fs.addVectors(ds.min,ps.min),ds.expandByPoint(fs),fs.addVectors(ds.max,ps.max),ds.expandByPoint(fs)):(ds.expandByPoint(ps.min),ds.expandByPoint(ps.max))}ds.getCenter(n);let r=0;for(let i=0,e=t.count;i<e;i++)fs.fromBufferAttribute(t,i),r=Math.max(r,n.distanceToSquared(fs));if(e)for(let i=0,o=e.length;i<o;i++){const o=e[i],l=this.morphTargetsRelative;for(let e=0,c=o.count;e<c;e++)fs.fromBufferAttribute(o,e),l&&(hs.fromBufferAttribute(t,e),fs.add(hs)),r=Math.max(r,n.distanceToSquared(fs))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,o=e.normal.array,l=e.uv.array,c=r.length/3;void 0===e.tangent&&this.setAttribute("tangent",new Qr(new Float32Array(4*c),4));const h=e.tangent.array,d=[],f=[];for(let i=0;i<c;i++)d[i]=new bi,f[i]=new bi;const m=new bi,v=new bi,y=new bi,x=new ri,_=new ri,M=new ri,w=new bi,S=new bi;function T(a,b,t){m.fromArray(r,3*a),v.fromArray(r,3*b),y.fromArray(r,3*t),x.fromArray(l,2*a),_.fromArray(l,2*b),M.fromArray(l,2*t),v.sub(m),y.sub(m),_.sub(x),M.sub(x);const e=1/(_.x*M.y-M.x*_.y);isFinite(e)&&(w.copy(v).multiplyScalar(M.y).addScaledVector(y,-_.y).multiplyScalar(e),S.copy(y).multiplyScalar(_.x).addScaledVector(v,-M.x).multiplyScalar(e),d[a].add(w),d[b].add(w),d[t].add(w),f[a].add(S),f[b].add(S),f[t].add(S))}let E=this.groups;0===E.length&&(E=[{start:0,count:n.length}]);for(let i=0,t=E.length;i<t;++i){const t=E[i],e=t.start;for(let r=e,o=e+t.count;r<o;r+=3)T(n[r+0],n[r+1],n[r+2])}const A=new bi,L=new bi,R=new bi,C=new bi;function P(t){R.fromArray(o,3*t),C.copy(R);const e=d[t];A.copy(e),A.sub(R.multiplyScalar(R.dot(e))).normalize(),L.crossVectors(C,e);const n=L.dot(f[t])<0?-1:1;h[4*t]=A.x,h[4*t+1]=A.y,h[4*t+2]=A.z,h[4*t+3]=n}for(let i=0,t=E.length;i<t;++i){const t=E[i],e=t.start;for(let r=e,o=e+t.count;r<o;r+=3)P(n[r+0]),P(n[r+1]),P(n[r+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Qr(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let i=0,t=n.count;i<t;i++)n.setXYZ(i,0,0,0);const r=new bi,o=new bi,l=new bi,c=new bi,h=new bi,d=new bi,f=new bi,m=new bi;if(t)for(let i=0,v=t.count;i<v;i+=3){const v=t.getX(i+0),y=t.getX(i+1),x=t.getX(i+2);r.fromBufferAttribute(e,v),o.fromBufferAttribute(e,y),l.fromBufferAttribute(e,x),f.subVectors(l,o),m.subVectors(r,o),f.cross(m),c.fromBufferAttribute(n,v),h.fromBufferAttribute(n,y),d.fromBufferAttribute(n,x),c.add(f),h.add(f),d.add(f),n.setXYZ(v,c.x,c.y,c.z),n.setXYZ(y,h.x,h.y,h.z),n.setXYZ(x,d.x,d.y,d.z)}else for(let i=0,t=e.count;i<t;i+=3)r.fromBufferAttribute(e,i+0),o.fromBufferAttribute(e,i+1),l.fromBufferAttribute(e,i+2),f.subVectors(l,o),m.subVectors(r,o),f.cross(m),n.setXYZ(i+0,f.x,f.y,f.z),n.setXYZ(i+1,f.x,f.y,f.z),n.setXYZ(i+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const o=n[r].array,l=t.attributes[r],c=l.array,h=l.itemSize*e,d=Math.min(c.length,o.length-h);for(let i=0,t=h;i<d;i++,t++)o[t]=c[i]}return this}normalizeNormals(){const t=this.attributes.normal;for(let i=0,e=t.count;i<e;i++)fs.fromBufferAttribute(t,i),fs.normalize(),t.setXYZ(i,fs.x,fs.y,fs.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,o=t.normalized,l=new n.constructor(e.length*r);let c=0,h=0;for(let i=0,o=e.length;i<o;i++){c=t.isInterleavedBufferAttribute?e[i]*t.data.stride+t.offset:e[i]*r;for(let t=0;t<r;t++)l[h++]=n[c++]}return new Qr(l,r,o)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ms,n=this.index.array,r=this.attributes;for(const o in r){const l=t(r[o],n);e.setAttribute(o,l)}const o=this.morphAttributes;for(const r in o){const l=[],c=o[r];for(let i=0,e=c.length;i<e;i++){const e=t(c[i],n);l.push(e)}e.morphAttributes[r]=l}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let i=0,t=l.length;i<t;i++){const t=l[i];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const data={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),Object.keys(this.userData).length>0&&(data.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const e in t)void 0!==t[e]&&(data[e]=t[e]);return data}data.data={attributes:{}};const t=this.index;null!==t&&(data.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const e=this.attributes;for(const t in e){const n=e[t];data.data.attributes[t]=n.toJSON(data.data)}const n={};let r=!1;for(const t in this.morphAttributes){const e=this.morphAttributes[t],o=[];for(let i=0,t=e.length;i<t;i++){const t=e[i];o.push(t.toJSON(data.data))}o.length>0&&(n[t]=o,r=!0)}r&&(data.data.morphAttributes=n,data.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(data.data.groups=JSON.parse(JSON.stringify(o)));const l=this.boundingSphere;return null!==l&&(data.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),data}clone(){return(new this.constructor).copy(this)}copy(source){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const data={};this.name=source.name;const t=source.index;null!==t&&this.setIndex(t.clone(data));const e=source.attributes;for(const t in e){const n=e[t];this.setAttribute(t,n.clone(data))}const n=source.morphAttributes;for(const t in n){const e=[],r=n[t];for(let i=0,t=r.length;i<t;i++)e.push(r[i].clone(data));this.morphAttributes[t]=e}this.morphTargetsRelative=source.morphTargetsRelative;const r=source.groups;for(let i=0,t=r.length;i<t;i++){const t=r[i];this.addGroup(t.start,t.count,t.materialIndex)}const o=source.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=source.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=source.drawRange.start,this.drawRange.count=source.drawRange.count,this.userData=source.userData,void 0!==source.parameters&&(this.parameters=Object.assign({},source.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}ms.prototype.isBufferGeometry=!0;const gs=new $i,vs=new Ki,ys=new Wi,xs=new bi,_s=new bi,Ms=new bi,bs=new bi,ws=new bi,Ss=new bi,Ts=new bi,Es=new bi,As=new bi,Ls=new ri,Rs=new ri,Cs=new ri,Ps=new bi,Ds=new bi;class Is extends Ar{constructor(t=new ms,e=new Jr){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(source){return super.copy(source),void 0!==source.morphTargetInfluences&&(this.morphTargetInfluences=source.morphTargetInfluences.slice()),void 0!==source.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary)),this.material=source.material,this.geometry=source.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,o=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),ys.copy(n.boundingSphere),ys.applyMatrix4(o),!1===t.ray.intersectsSphere(ys))return;if(gs.copy(o).invert(),vs.copy(t.ray).applyMatrix4(gs),null!==n.boundingBox&&!1===vs.intersectsBox(n.boundingBox))return;let l;if(n.isBufferGeometry){const o=n.index,c=n.attributes.position,h=n.morphAttributes.position,d=n.morphTargetsRelative,f=n.attributes.uv,m=n.attributes.uv2,v=n.groups,y=n.drawRange;if(null!==o)if(Array.isArray(r))for(let i=0,n=v.length;i<n;i++){const n=v[i],x=r[n.materialIndex];for(let r=Math.max(n.start,y.start),v=Math.min(o.count,Math.min(n.start+n.count,y.start+y.count));r<v;r+=3){const a=o.getX(r),b=o.getX(r+1),v=o.getX(r+2);l=Ns(this,x,t,vs,c,h,d,f,m,a,b,v),l&&(l.faceIndex=Math.floor(r/3),l.face.materialIndex=n.materialIndex,e.push(l))}}else{for(let i=Math.max(0,y.start),n=Math.min(o.count,y.start+y.count);i<n;i+=3){const a=o.getX(i),b=o.getX(i+1),n=o.getX(i+2);l=Ns(this,r,t,vs,c,h,d,f,m,a,b,n),l&&(l.faceIndex=Math.floor(i/3),e.push(l))}}else if(void 0!==c)if(Array.isArray(r))for(let i=0,n=v.length;i<n;i++){const n=v[i],o=r[n.materialIndex];for(let r=Math.max(n.start,y.start),v=Math.min(c.count,Math.min(n.start+n.count,y.start+y.count));r<v;r+=3){l=Ns(this,o,t,vs,c,h,d,f,m,r,r+1,r+2),l&&(l.faceIndex=Math.floor(r/3),l.face.materialIndex=n.materialIndex,e.push(l))}}else{for(let i=Math.max(0,y.start),n=Math.min(c.count,y.start+y.count);i<n;i+=3){l=Ns(this,r,t,vs,c,h,d,f,m,i,i+1,i+2),l&&(l.faceIndex=Math.floor(i/3),e.push(l))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Ns(object,t,e,n,r,o,l,c,h,a,b,d){xs.fromBufferAttribute(r,a),_s.fromBufferAttribute(r,b),Ms.fromBufferAttribute(r,d);const f=object.morphTargetInfluences;if(o&&f){Ts.set(0,0,0),Es.set(0,0,0),As.set(0,0,0);for(let i=0,t=o.length;i<t;i++){const t=f[i],e=o[i];0!==t&&(bs.fromBufferAttribute(e,a),ws.fromBufferAttribute(e,b),Ss.fromBufferAttribute(e,d),l?(Ts.addScaledVector(bs,t),Es.addScaledVector(ws,t),As.addScaledVector(Ss,t)):(Ts.addScaledVector(bs.sub(xs),t),Es.addScaledVector(ws.sub(_s),t),As.addScaledVector(Ss.sub(Ms),t)))}xs.add(Ts),_s.add(Es),Ms.add(As)}object.isSkinnedMesh&&(object.boneTransform(a,xs),object.boneTransform(b,_s),object.boneTransform(d,Ms));const m=function(object,t,e,n,r,o,l,c){let h;if(h=t.side===M?n.intersectTriangle(l,o,r,!0,c):n.intersectTriangle(r,o,l,t.side!==w,c),null===h)return null;Ds.copy(c),Ds.applyMatrix4(object.matrixWorld);const d=e.ray.origin.distanceTo(Ds);return d<e.near||d>e.far?null:{distance:d,point:Ds.clone(),object:object}}(object,t,e,n,xs,_s,Ms,Ps);if(m){c&&(Ls.fromBufferAttribute(c,a),Rs.fromBufferAttribute(c,b),Cs.fromBufferAttribute(c,d),m.uv=Or.getUV(Ps,xs,_s,Ms,Ls,Rs,Cs,new ri)),h&&(Ls.fromBufferAttribute(h,a),Rs.fromBufferAttribute(h,b),Cs.fromBufferAttribute(h,d),m.uv2=Or.getUV(Ps,xs,_s,Ms,Ls,Rs,Cs,new ri));const t={a:a,b:b,c:d,normal:new bi,materialIndex:0};Or.getNormal(xs,_s,Ms,t.normal),m.face=t}return m}Is.prototype.isMesh=!0;class zs extends ms{constructor(t=1,e=1,n=1,r=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:o,depthSegments:l};const c=this;r=Math.floor(r),o=Math.floor(o),l=Math.floor(l);const h=[],d=[],f=[],m=[];let v=0,y=0;function x(u,t,e,n,r,o,l,x,_,M,w){const S=o/_,T=l/M,E=o/2,A=l/2,L=x/2,R=_+1,C=M+1;let P=0,D=0;const I=new bi;for(let o=0;o<C;o++){const l=o*T-A;for(let c=0;c<R;c++){const h=c*S-E;I[u]=h*n,I[t]=l*r,I[e]=L,d.push(I.x,I.y,I.z),I[u]=0,I[t]=0,I[e]=x>0?1:-1,f.push(I.x,I.y,I.z),m.push(c/_),m.push(1-o/M),P+=1}}for(let t=0;t<M;t++)for(let e=0;e<_;e++){const a=v+e+R*t,b=v+e+R*(t+1),n=v+(e+1)+R*(t+1),r=v+(e+1)+R*t;h.push(a,b,r),h.push(b,n,r),D+=6}c.addGroup(y,D,w),y+=D,v+=P}x("z","y","x",-1,-1,n,e,t,l,o,0),x("z","y","x",1,-1,n,e,-t,l,o,1),x("x","z","y",1,1,t,n,e,r,l,2),x("x","z","y",1,-1,t,n,-e,r,l,3),x("x","y","z",1,-1,t,e,n,r,o,4),x("x","y","z",-1,-1,t,e,-n,r,o,5),this.setIndex(h),this.setAttribute("position",new as(d,3)),this.setAttribute("normal",new as(f,3)),this.setAttribute("uv",new as(m,2))}static fromJSON(data){return new zs(data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments)}}function Bs(t){const e={};for(const u in t){e[u]={};for(const p in t[u]){const n=t[u][p];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?e[u][p]=n.clone():Array.isArray(n)?e[u][p]=n.slice():e[u][p]=n}}return e}function Fs(t){const e={};for(let u=0;u<t.length;u++){const n=Bs(t[u]);for(const p in n)e[p]=n[p]}return e}const Os={clone:Bs,merge:Fs};class Us extends Hr{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(source){return super.copy(source),this.fragmentShader=source.fragmentShader,this.vertexShader=source.vertexShader,this.uniforms=Bs(source.uniforms),this.defines=Object.assign({},source.defines),this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.lights=source.lights,this.clipping=source.clipping,this.extensions=Object.assign({},source.extensions),this.glslVersion=source.glslVersion,this}toJSON(meta){const data=super.toJSON(meta);data.glslVersion=this.glslVersion,data.uniforms={};for(const t in this.uniforms){const e=this.uniforms[t].value;e&&e.isTexture?data.uniforms[t]={type:"t",value:e.toJSON(meta).uuid}:e&&e.isColor?data.uniforms[t]={type:"c",value:e.getHex()}:e&&e.isVector2?data.uniforms[t]={type:"v2",value:e.toArray()}:e&&e.isVector3?data.uniforms[t]={type:"v3",value:e.toArray()}:e&&e.isVector4?data.uniforms[t]={type:"v4",value:e.toArray()}:e&&e.isMatrix3?data.uniforms[t]={type:"m3",value:e.toArray()}:e&&e.isMatrix4?data.uniforms[t]={type:"m4",value:e.toArray()}:data.uniforms[t]={value:e}}Object.keys(this.defines).length>0&&(data.defines=this.defines),data.vertexShader=this.vertexShader,data.fragmentShader=this.fragmentShader;const t={};for(const e in this.extensions)!0===this.extensions[e]&&(t[e]=!0);return Object.keys(t).length>0&&(data.extensions=t),data}}Us.prototype.isShaderMaterial=!0;class Hs extends Ar{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new $i,this.projectionMatrix=new $i,this.projectionMatrixInverse=new $i}copy(source,t){return super.copy(source,t),this.matrixWorldInverse.copy(source.matrixWorldInverse),this.projectionMatrix.copy(source.projectionMatrix),this.projectionMatrixInverse.copy(source.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Hs.prototype.isCamera=!0;class Gs extends Hs{constructor(t=50,e=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(source,t){return super.copy(source,t),this.fov=source.fov,this.zoom=source.zoom,this.near=source.near,this.far=source.far,this.focus=source.focus,this.aspect=source.aspect,this.view=null===source.view?null:Object.assign({},source.view),this.filmGauge=source.filmGauge,this.filmOffset=source.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Yn*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Jn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Yn*Math.atan(Math.tan(.5*Jn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,o,l){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Jn*this.fov)/this.zoom,n=2*e,r=this.aspect*n,o=-.5*r;const view=this.view;if(null!==this.view&&this.view.enabled){const t=view.fullWidth,l=view.fullHeight;o+=view.offsetX*r/t,e-=view.offsetY*n/l,r*=view.width/t,n*=view.height/l}const l=this.filmOffset;0!==l&&(o+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(meta){const data=super.toJSON(meta);return data.object.fov=this.fov,data.object.zoom=this.zoom,data.object.near=this.near,data.object.far=this.far,data.object.focus=this.focus,data.object.aspect=this.aspect,null!==this.view&&(data.object.view=Object.assign({},this.view)),data.object.filmGauge=this.filmGauge,data.object.filmOffset=this.filmOffset,data}}Gs.prototype.isPerspectiveCamera=!0;const ks=90;class Vs extends Ar{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new Gs(ks,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new bi(1,0,0)),this.add(r);const o=new Gs(ks,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new bi(-1,0,0)),this.add(o);const l=new Gs(ks,1,t,e);l.layers=this.layers,l.up.set(0,0,1),l.lookAt(new bi(0,1,0)),this.add(l);const c=new Gs(ks,1,t,e);c.layers=this.layers,c.up.set(0,0,-1),c.lookAt(new bi(0,-1,0)),this.add(c);const h=new Gs(ks,1,t,e);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new bi(0,0,1)),this.add(h);const d=new Gs(ks,1,t,e);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new bi(0,0,-1)),this.add(d)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,o,l,c,h,d]=this.children,f=t.xr.enabled,m=t.getRenderTarget();t.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,o),t.setRenderTarget(n,2),t.render(e,l),t.setRenderTarget(n,3),t.render(e,c),t.setRenderTarget(n,4),t.render(e,h),n.texture.generateMipmaps=v,t.setRenderTarget(n,5),t.render(e,d),t.setRenderTarget(m),t.xr.enabled=f}}class Ws extends mi{constructor(t,e,n,r,o,l,c,h,d,f){super(t=void 0!==t?t:[],e=void 0!==e?e:mt,n,r,o,l,c,h,d,f),this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Ws.prototype.isCubeTexture=!0;class js extends yi{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new Ws(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:Rt,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Jt,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},r=new zs(5,5,5),o=new Us({name:"CubemapFromEquirect",uniforms:Bs(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:M,blending:E});o.uniforms.tEquirect.value=e;const l=new Is(r,o),c=e.minFilter;e.minFilter===Dt&&(e.minFilter=Rt);return new Vs(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,n,r){const o=t.getRenderTarget();for(let i=0;i<6;i++)t.setRenderTarget(this,i),t.clear(e,n,r);t.setRenderTarget(o)}}js.prototype.isWebGLCubeRenderTarget=!0;const qs=new bi,Xs=new bi,Js=new si;class Ys{constructor(t=new bi(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(a,b,t){const e=qs.subVectors(t,b).cross(Xs.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(e,a),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(line,t){const e=line.delta(qs),n=this.normal.dot(e);if(0===n)return 0===this.distanceToPoint(line.start)?t.copy(line.start):null;const r=-(line.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e).multiplyScalar(r).add(line.start)}intersectsLine(line){const t=this.distanceToPoint(line.start),e=this.distanceToPoint(line.end);return t<0&&e>0||e<0&&t>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Js.getNormalMatrix(t),r=this.coplanarPoint(qs).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Ys.prototype.isPlane=!0;const Zs=new Wi,Qs=new bi;class Ks{constructor(t=new Ys,e=new Ys,n=new Ys,r=new Ys,o=new Ys,l=new Ys){this.planes=[t,e,n,r,o,l]}set(t,e,n,r,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(r),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],o=n[1],l=n[2],c=n[3],h=n[4],d=n[5],f=n[6],m=n[7],v=n[8],y=n[9],x=n[10],_=n[11],M=n[12],w=n[13],S=n[14],T=n[15];return e[0].setComponents(c-r,m-h,_-v,T-M).normalize(),e[1].setComponents(c+r,m+h,_+v,T+M).normalize(),e[2].setComponents(c+o,m+d,_+y,T+w).normalize(),e[3].setComponents(c-o,m-d,_-y,T-w).normalize(),e[4].setComponents(c-l,m-f,_-x,T-S).normalize(),e[5].setComponents(c+l,m+f,_+x,T+S).normalize(),this}intersectsObject(object){const t=object.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Zs.copy(t.boundingSphere).applyMatrix4(object.matrixWorld),this.intersectsSphere(Zs)}intersectsSprite(t){return Zs.center.set(0,0,0),Zs.radius=.7071067811865476,Zs.applyMatrix4(t.matrixWorld),this.intersectsSphere(Zs)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let i=0;i<6;i++){if(e[i].distanceToPoint(n)<r)return!1}return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(Qs.x=n.normal.x>0?t.max.x:t.min.x,Qs.y=n.normal.y>0?t.max.y:t.min.y,Qs.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(Qs)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function $s(){let t=null,e=!1,n=null,r=null;function o(time,e){n(time,e),r=t.requestAnimationFrame(o)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(o),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function ta(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const data=r.get(e);data&&(t.deleteBuffer(data.buffer),r.delete(e))},update:function(e,o){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const data=r.get(e);void 0===data?r.set(e,function(e,r){const o=e.array,l=e.usage,c=t.createBuffer();t.bindBuffer(r,c),t.bufferData(r,o,l),e.onUploadCallback();let h=5126;return o instanceof Float32Array?h=5126:o instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):o instanceof Uint16Array?e.isFloat16BufferAttribute?n?h=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):h=5123:o instanceof Int16Array?h=5122:o instanceof Uint32Array?h=5125:o instanceof Int32Array?h=5124:o instanceof Int8Array?h=5120:(o instanceof Uint8Array||o instanceof Uint8ClampedArray)&&(h=5121),{buffer:c,type:h,bytesPerElement:o.BYTES_PER_ELEMENT,version:e.version}}(e,o)):data.version<e.version&&(!function(e,r,o){const l=r.array,c=r.updateRange;t.bindBuffer(o,e),-1===c.count?t.bufferSubData(o,0,l):(n?t.bufferSubData(o,c.offset*l.BYTES_PER_ELEMENT,l,c.offset,c.count):t.bufferSubData(o,c.offset*l.BYTES_PER_ELEMENT,l.subarray(c.offset,c.offset+c.count)),c.count=-1)}(data.buffer,e,o),data.version=e.version)}}}class ea extends ms{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(r),d=c+1,f=h+1,m=t/c,v=e/h,y=[],x=[],_=[],M=[];for(let t=0;t<f;t++){const e=t*v-l;for(let n=0;n<d;n++){const r=n*m-o;x.push(r,-e,0),_.push(0,0,1),M.push(n/c),M.push(1-t/h)}}for(let t=0;t<h;t++)for(let e=0;e<c;e++){const a=e+d*t,b=e+d*(t+1),n=e+1+d*(t+1),r=e+1+d*t;y.push(a,b,r),y.push(b,n,r)}this.setIndex(y),this.setAttribute("position",new as(x,3)),this.setAttribute("normal",new as(_,3)),this.setAttribute("uv",new as(M,2))}static fromJSON(data){return new ea(data.width,data.height,data.widthSegments,data.heightSegments)}}const na={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},ia={common:{diffuse:{value:new Xr(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new si},uv2Transform:{value:new si},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ri(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Xr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Xr(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new si}},sprite:{diffuse:{value:new Xr(16777215)},opacity:{value:1},center:{value:new ri(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new si}}},ra={basic:{uniforms:Fs([ia.common,ia.specularmap,ia.envmap,ia.aomap,ia.lightmap,ia.fog]),vertexShader:na.meshbasic_vert,fragmentShader:na.meshbasic_frag},lambert:{uniforms:Fs([ia.common,ia.specularmap,ia.envmap,ia.aomap,ia.lightmap,ia.emissivemap,ia.fog,ia.lights,{emissive:{value:new Xr(0)}}]),vertexShader:na.meshlambert_vert,fragmentShader:na.meshlambert_frag},phong:{uniforms:Fs([ia.common,ia.specularmap,ia.envmap,ia.aomap,ia.lightmap,ia.emissivemap,ia.bumpmap,ia.normalmap,ia.displacementmap,ia.fog,ia.lights,{emissive:{value:new Xr(0)},specular:{value:new Xr(1118481)},shininess:{value:30}}]),vertexShader:na.meshphong_vert,fragmentShader:na.meshphong_frag},standard:{uniforms:Fs([ia.common,ia.envmap,ia.aomap,ia.lightmap,ia.emissivemap,ia.bumpmap,ia.normalmap,ia.displacementmap,ia.roughnessmap,ia.metalnessmap,ia.fog,ia.lights,{emissive:{value:new Xr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:na.meshphysical_vert,fragmentShader:na.meshphysical_frag},toon:{uniforms:Fs([ia.common,ia.aomap,ia.lightmap,ia.emissivemap,ia.bumpmap,ia.normalmap,ia.displacementmap,ia.gradientmap,ia.fog,ia.lights,{emissive:{value:new Xr(0)}}]),vertexShader:na.meshtoon_vert,fragmentShader:na.meshtoon_frag},matcap:{uniforms:Fs([ia.common,ia.bumpmap,ia.normalmap,ia.displacementmap,ia.fog,{matcap:{value:null}}]),vertexShader:na.meshmatcap_vert,fragmentShader:na.meshmatcap_frag},points:{uniforms:Fs([ia.points,ia.fog]),vertexShader:na.points_vert,fragmentShader:na.points_frag},dashed:{uniforms:Fs([ia.common,ia.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:na.linedashed_vert,fragmentShader:na.linedashed_frag},depth:{uniforms:Fs([ia.common,ia.displacementmap]),vertexShader:na.depth_vert,fragmentShader:na.depth_frag},normal:{uniforms:Fs([ia.common,ia.bumpmap,ia.normalmap,ia.displacementmap,{opacity:{value:1}}]),vertexShader:na.meshnormal_vert,fragmentShader:na.meshnormal_frag},sprite:{uniforms:Fs([ia.sprite,ia.fog]),vertexShader:na.sprite_vert,fragmentShader:na.sprite_frag},background:{uniforms:{uvTransform:{value:new si},t2D:{value:null}},vertexShader:na.background_vert,fragmentShader:na.background_frag},cube:{uniforms:Fs([ia.envmap,{opacity:{value:1}}]),vertexShader:na.cube_vert,fragmentShader:na.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:na.equirect_vert,fragmentShader:na.equirect_frag},distanceRGBA:{uniforms:Fs([ia.common,ia.displacementmap,{referencePosition:{value:new bi},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:na.distanceRGBA_vert,fragmentShader:na.distanceRGBA_frag},shadow:{uniforms:Fs([ia.lights,ia.fog,{color:{value:new Xr(0)},opacity:{value:1}}]),vertexShader:na.shadow_vert,fragmentShader:na.shadow_frag}};function sa(t,e,n,r,o){const l=new Xr(0);let c,h,d=0,f=null,m=0,v=null;function y(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,o)}return{getClearColor:function(){return l},setClearColor:function(t,e=1){l.set(t),d=e,y(l,d)},getClearAlpha:function(){return d},setClearAlpha:function(t){d=t,y(l,d)},render:function(n,o){let x=!1,w=!0===o.isScene?o.background:null;w&&w.isTexture&&(w=e.get(w));const S=t.xr,T=S.getSession&&S.getSession();T&&"additive"===T.environmentBlendMode&&(w=null),null===w?y(l,d):w&&w.isColor&&(y(w,1),x=!0),(t.autoClear||x)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),w&&(w.isCubeTexture||w.mapping===xt)?(void 0===h&&(h=new Is(new zs(1,1,1),new Us({name:"BackgroundCubeMaterial",uniforms:Bs(ra.cube.uniforms),vertexShader:ra.cube.vertexShader,fragmentShader:ra.cube.fragmentShader,side:M,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),h.material.uniforms.envMap.value=w,h.material.uniforms.flipEnvMap.value=w.isCubeTexture&&!1===w.isRenderTargetTexture?-1:1,f===w&&m===w.version&&v===t.toneMapping||(h.material.needsUpdate=!0,f=w,m=w.version,v=t.toneMapping),n.unshift(h,h.geometry,h.material,0,0,null)):w&&w.isTexture&&(void 0===c&&(c=new Is(new ea(2,2),new Us({name:"BackgroundMaterial",uniforms:Bs(ra.background.uniforms),vertexShader:ra.background.vertexShader,fragmentShader:ra.background.fragmentShader,side:_,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=w,!0===w.matrixAutoUpdate&&w.updateMatrix(),c.material.uniforms.uvTransform.value.copy(w.matrix),f===w&&m===w.version&&v===t.toneMapping||(c.material.needsUpdate=!0,f=w,m=w.version,v=t.toneMapping),n.unshift(c,c.geometry,c.material,0,0,null))}}}function aa(t,e,n,r){const o=t.getParameter(34921),l=r.isWebGL2?null:e.get("OES_vertex_array_object"),c=r.isWebGL2||null!==l,h={},d=y(null);let f=d;function m(e){return r.isWebGL2?t.bindVertexArray(e):l.bindVertexArrayOES(e)}function v(e){return r.isWebGL2?t.deleteVertexArray(e):l.deleteVertexArrayOES(e)}function y(t){const e=[],n=[],r=[];for(let i=0;i<o;i++)e[i]=0,n[i]=0,r[i]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function x(){const t=f.newAttributes;for(let i=0,e=t.length;i<e;i++)t[i]=0}function _(t){M(t,0)}function M(n,o){const l=f.newAttributes,c=f.enabledAttributes,h=f.attributeDivisors;if(l[n]=1,0===c[n]&&(t.enableVertexAttribArray(n),c[n]=1),h[n]!==o){(r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,o),h[n]=o}}function w(){const e=f.newAttributes,n=f.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function S(e,n,o,l,c,h){!0!==r.isWebGL2||5124!==o&&5125!==o?t.vertexAttribPointer(e,n,o,l,c,h):t.vertexAttribIPointer(e,n,o,c,h)}function T(){E(),f!==d&&(f=d,m(f.object))}function E(){d.geometry=null,d.program=null,d.wireframe=!1}return{setup:function(object,o,d,v,T){let E=!1;if(c){const e=function(e,n,o){const c=!0===o.wireframe;let d=h[e.id];void 0===d&&(d={},h[e.id]=d);let f=d[n.id];void 0===f&&(f={},d[n.id]=f);let m=f[c];void 0===m&&(m=y(r.isWebGL2?t.createVertexArray():l.createVertexArrayOES()),f[c]=m);return m}(v,d,o);f!==e&&(f=e,m(f.object)),E=function(t,e){const n=f.attributes,r=t.attributes;let o=0;for(const t in r){const e=n[t],l=r[t];if(void 0===e)return!0;if(e.attribute!==l)return!0;if(e.data!==l.data)return!0;o++}return f.attributesNum!==o||f.index!==e}(v,T),E&&function(t,e){const n={},r=t.attributes;let o=0;for(const t in r){const e=r[t],data={};data.attribute=e,e.data&&(data.data=e.data),n[t]=data,o++}f.attributes=n,f.attributesNum=o,f.index=e}(v,T)}else{const t=!0===o.wireframe;f.geometry===v.id&&f.program===d.id&&f.wireframe===t||(f.geometry=v.id,f.program=d.id,f.wireframe=t,E=!0)}!0===object.isInstancedMesh&&(E=!0),null!==T&&n.update(T,34963),E&&(!function(object,o,l,c){if(!1===r.isWebGL2&&(object.isInstancedMesh||c.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;x();const h=c.attributes,d=l.getAttributes(),f=o.defaultAttributeValues;for(const e in d){const r=d[e];if(r.location>=0){let o=h[e];if(void 0===o&&("instanceMatrix"===e&&object.instanceMatrix&&(o=object.instanceMatrix),"instanceColor"===e&&object.instanceColor&&(o=object.instanceColor)),void 0!==o){const e=o.normalized,l=o.itemSize,h=n.get(o);if(void 0===h)continue;const d=h.buffer,f=h.type,m=h.bytesPerElement;if(o.isInterleavedBufferAttribute){const data=o.data,n=data.stride,h=o.offset;if(data&&data.isInstancedInterleavedBuffer){for(let i=0;i<r.locationSize;i++)M(r.location+i,data.meshPerAttribute);!0!==object.isInstancedMesh&&void 0===c._maxInstanceCount&&(c._maxInstanceCount=data.meshPerAttribute*data.count)}else for(let i=0;i<r.locationSize;i++)_(r.location+i);t.bindBuffer(34962,d);for(let i=0;i<r.locationSize;i++)S(r.location+i,l/r.locationSize,f,e,n*m,(h+l/r.locationSize*i)*m)}else{if(o.isInstancedBufferAttribute){for(let i=0;i<r.locationSize;i++)M(r.location+i,o.meshPerAttribute);!0!==object.isInstancedMesh&&void 0===c._maxInstanceCount&&(c._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let i=0;i<r.locationSize;i++)_(r.location+i);t.bindBuffer(34962,d);for(let i=0;i<r.locationSize;i++)S(r.location+i,l/r.locationSize,f,e,l*m,l/r.locationSize*i*m)}}else if(void 0!==f){const n=f[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r.location,n);break;case 3:t.vertexAttrib3fv(r.location,n);break;case 4:t.vertexAttrib4fv(r.location,n);break;default:t.vertexAttrib1fv(r.location,n)}}}}w()}(object,o,d,v),null!==T&&t.bindBuffer(34963,n.get(T).buffer))},reset:T,resetDefaultState:E,dispose:function(){T();for(const t in h){const e=h[t];for(const t in e){const n=e[t];for(const t in n)v(n[t].object),delete n[t];delete e[t]}delete h[t]}},releaseStatesOfGeometry:function(t){if(void 0===h[t.id])return;const e=h[t.id];for(const t in e){const n=e[t];for(const t in n)v(n[t].object),delete n[t];delete e[t]}delete h[t.id]},releaseStatesOfProgram:function(t){for(const e in h){const n=h[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)v(r[t].object),delete r[t];delete n[t.id]}},initAttributes:x,enableAttribute:_,disableUnusedAttributes:w}}function oa(t,e,n,r){const o=r.isWebGL2;let l;this.setMode=function(t){l=t},this.render=function(e,r){t.drawArrays(l,e,r),n.update(r,l,1)},this.renderInstances=function(r,c,h){if(0===h)return;let d,f;if(o)d=t,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[f](l,r,c,h),n.update(c,l,h)}}function la(t,e,n){let r;function o(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const l="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let c=void 0!==n.precision?n.precision:"highp";const h=o(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const d=l||e.has("WEBGL_draw_buffers"),f=!0===n.logarithmicDepthBuffer,m=t.getParameter(34930),v=t.getParameter(35660),y=t.getParameter(3379),x=t.getParameter(34076),_=t.getParameter(34921),M=t.getParameter(36347),w=t.getParameter(36348),S=t.getParameter(36349),T=v>0,E=l||e.has("OES_texture_float");return{isWebGL2:l,drawBuffers:d,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:o,precision:c,logarithmicDepthBuffer:f,maxTextures:m,maxVertexTextures:v,maxTextureSize:y,maxCubemapSize:x,maxAttributes:_,maxVertexUniforms:M,maxVaryings:w,maxFragmentUniforms:S,vertexTextures:T,floatFragmentTextures:E,floatVertexTextures:T&&E,maxSamples:l?t.getParameter(36183):0}}function ca(t){const e=this;let n=null,r=0,o=!1,l=!1;const c=new Ys,h=new si,d={value:null,needsUpdate:!1};function f(){d.value!==n&&(d.value=n,d.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function m(t,n,r,o){const l=null!==t?t.length:0;let f=null;if(0!==l){if(f=d.value,!0!==o||null===f){const e=r+4*l,o=n.matrixWorldInverse;h.getNormalMatrix(o),(null===f||f.length<e)&&(f=new Float32Array(e));for(let i=0,e=r;i!==l;++i,e+=4)c.copy(t[i]).applyMatrix4(o,h),c.normal.toArray(f,e),f[e+3]=c.constant}d.value=f,d.needsUpdate=!0}return e.numPlanes=l,e.numIntersection=0,f}this.uniform=d,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,l){const c=0!==t.length||e||0!==r||o;return o=e,n=m(t,l,0),r=t.length,c},this.beginShadows=function(){l=!0,m(null)},this.endShadows=function(){l=!1,f()},this.setState=function(e,c,h){const v=e.clippingPlanes,y=e.clipIntersection,x=e.clipShadows,_=t.get(e);if(!o||null===v||0===v.length||l&&!x)l?m(null):f();else{const t=l?0:r,e=4*t;let o=_.clippingState||null;d.value=o,o=m(v,c,e,h);for(let i=0;i!==e;++i)o[i]=n[i];_.clippingState=o,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=t}}}function ua(t){let e=new WeakMap;function n(t,e){return e===vt?t.mapping=mt:e===yt&&(t.mapping=gt),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const o=e.get(n);void 0!==o&&(e.delete(n),o.dispose())}return{get:function(o){if(o&&o.isTexture&&!1===o.isRenderTargetTexture){const l=o.mapping;if(l===vt||l===yt){if(e.has(o)){return n(e.get(o).texture,o.mapping)}{const image=o.image;if(image&&image.height>0){const l=t.getRenderTarget(),c=new js(image.height/2);return c.fromEquirectangularTexture(t,o),e.set(o,c),t.setRenderTarget(l),o.addEventListener("dispose",r),n(c.texture,o.mapping)}return null}}}return o},dispose:function(){e=new WeakMap}}}ra.physical={uniforms:Fs([ra.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ri(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Xr(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ri},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Xr(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new Xr(1,1,1)},specularColorMap:{value:null}}]),vertexShader:na.meshphysical_vert,fragmentShader:na.meshphysical_frag};class ha extends Hs{constructor(t=-1,e=1,n=1,r=-1,o=.1,l=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(source,t){return super.copy(source,t),this.left=source.left,this.right=source.right,this.top=source.top,this.bottom=source.bottom,this.near=source.near,this.far=source.far,this.zoom=source.zoom,this.view=null===source.view?null:Object.assign({},source.view),this}setViewOffset(t,e,n,r,o,l){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=r+e,h=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=t*this.view.offsetX,l=o+t*this.view.width,c-=e*this.view.offsetY,h=c-e*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(meta){const data=super.toJSON(meta);return data.object.zoom=this.zoom,data.object.left=this.left,data.object.right=this.right,data.object.top=this.top,data.object.bottom=this.bottom,data.object.near=this.near,data.object.far=this.far,null!==this.view&&(data.object.view=Object.assign({},this.view)),data}}ha.prototype.isOrthographicCamera=!0;class da extends Us{constructor(t){super(t),this.type="RawShaderMaterial"}}da.prototype.isRawShaderMaterial=!0;const pa=Math.pow(2,8),fa=[.125,.215,.35,.446,.526,.582],ma=5+fa.length,ga=20,va={[on]:0,[ln]:1,[un]:2,[hn]:3,[dn]:4,[pn]:5,[cn]:6},ya=new ha,{_lodPlanes:xa,_sizeLods:_a,_sigmas:Ma}=Ra(),ba=new Xr;let wa=null;const Sa=(1+Math.sqrt(5))/2,Ta=1/Sa,Ea=[new bi(1,1,1),new bi(-1,1,1),new bi(1,1,-1),new bi(-1,1,-1),new bi(0,Sa,Ta),new bi(0,Sa,-Ta),new bi(Ta,0,Sa),new bi(-Ta,0,Sa),new bi(Sa,Ta,0),new bi(-Sa,Ta,0)];class Aa{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(t),n=new bi(0,1,0);return new da({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:va[on]},outputEncoding:{value:va[on]}},vertexShader:Na(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${za()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:E,depthTest:!1,depthWrite:!1})}(ga),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100){wa=this._renderer.getRenderTarget();const o=this._allocateTargets();return this._sceneToCubeUV(t,n,r,o),e>0&&this._blur(o,0,0,e),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Ia(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Da(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let i=0;i<xa.length;i++)xa[i].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(wa),t.scissorTest=!1,Pa(t,0,0,t.width,t.height)}_fromTexture(t){wa=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:St,minFilter:St,generateMipmaps:!1,type:Nt,format:Qt,encoding:La(t)?t.encoding:un,depthBuffer:!1},n=Ca(e);return n.depthBuffer=!t,this._pingPongRenderTarget=Ca(e),n}_compileMaterial(t){const e=new Is(xa[0],t);this._renderer.compile(e,ya)}_sceneToCubeUV(t,e,n,r){const o=new Gs(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.outputEncoding,m=h.toneMapping;h.getClearColor(ba),h.toneMapping=ot,h.outputEncoding=on,h.autoClear=!1;const v=new Jr({name:"PMREM.Background",side:M,depthWrite:!1,depthTest:!1}),y=new Is(new zs,v);let x=!1;const _=t.background;_?_.isColor&&(v.color.copy(_),t.background=null,x=!0):(v.color.copy(ba),x=!0);for(let i=0;i<6;i++){const col=i%3;0==col?(o.up.set(0,l[i],0),o.lookAt(c[i],0,0)):1==col?(o.up.set(0,0,l[i]),o.lookAt(0,c[i],0)):(o.up.set(0,l[i],0),o.lookAt(0,0,c[i])),Pa(r,col*pa,i>2?pa:0,pa,pa),h.setRenderTarget(r),x&&h.render(y,o),h.render(t,o)}y.geometry.dispose(),y.material.dispose(),h.toneMapping=m,h.outputEncoding=f,h.autoClear=d,t.background=_}_setEncoding(t,e){t.value=va[e.encoding]}_textureToCubeUV(t,e){const n=this._renderer,r=t.mapping===mt||t.mapping===gt;r?null==this._cubemapShader&&(this._cubemapShader=Ia()):null==this._equirectShader&&(this._equirectShader=Da());const o=r?this._cubemapShader:this._equirectShader,l=new Is(xa[0],o),c=o.uniforms;c.envMap.value=t,r||c.texelSize.value.set(1/t.image.width,1/t.image.height),this._setEncoding(c.inputEncoding,t),this._setEncoding(c.outputEncoding,e.texture),Pa(e,0,0,3*pa,2*pa),n.setRenderTarget(e),n.render(l,ya)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<ma;i++){const e=Math.sqrt(Ma[i]*Ma[i]-Ma[i-1]*Ma[i-1]),n=Ea[(i-1)%Ea.length];this._blur(t,i-1,i,e,n)}e.autoClear=n}_blur(t,e,n,r,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,r,"latitudinal",o),this._halfBlur(l,t,n,n,r,"longitudinal",o)}_halfBlur(t,e,n,r,o,l,c){const h=this._renderer,d=this._blurMaterial;"latitudinal"!==l&&"longitudinal"!==l&&console.error("blur direction must be either latitudinal or longitudinal!");const f=new Is(xa[r],d),m=d.uniforms,v=_a[n]-1,y=isFinite(o)?Math.PI/(2*v):2*Math.PI/39,x=o/y,_=isFinite(o)?1+Math.floor(3*x):ga;_>ga&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${_} samples when the maximum is set to 20`);const M=[];let w=0;for(let i=0;i<ga;++i){const t=i/x,e=Math.exp(-t*t/2);M.push(e),0==i?w+=e:i<_&&(w+=2*e)}for(let i=0;i<M.length;i++)M[i]=M[i]/w;m.envMap.value=t.texture,m.samples.value=_,m.weights.value=M,m.latitudinal.value="latitudinal"===l,c&&(m.poleAxis.value=c),m.dTheta.value=y,m.mipInt.value=8-n,this._setEncoding(m.inputEncoding,t.texture),this._setEncoding(m.outputEncoding,t.texture);const S=_a[r];Pa(e,3*Math.max(0,pa-2*S),(0===r?0:2*pa)+2*S*(r>4?r-8+4:0),3*S,2*S),h.setRenderTarget(e),h.render(f,ya)}}function La(t){return void 0!==t&&t.type===Nt&&(t.encoding===on||t.encoding===ln||t.encoding===cn)}function Ra(){const t=[],e=[],n=[];let r=8;for(let i=0;i<ma;i++){const o=Math.pow(2,r);e.push(o);let l=1/o;i>4?l=fa[i-8+4-1]:0==i&&(l=0),n.push(l);const c=1/(o-1),h=-c/2,d=1+c/2,f=[h,h,d,h,d,d,h,h,d,d,h,d],m=6,v=6,y=3,x=2,_=1,M=new Float32Array(y*v*m),w=new Float32Array(x*v*m),S=new Float32Array(_*v*m);for(let t=0;t<m;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];M.set(r,y*v*t),w.set(f,x*v*t);const o=[t,t,t,t,t,t];S.set(o,_*v*t)}const T=new ms;T.setAttribute("position",new Qr(M,y)),T.setAttribute("uv",new Qr(w,x)),T.setAttribute("faceIndex",new Qr(S,_)),t.push(T),r>4&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function Ca(t){const e=new yi(3*pa,3*pa,t);return e.texture.mapping=xt,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Pa(t,e,n,r,o){t.viewport.set(e,n,r,o),t.scissor.set(e,n,r,o)}function Da(){const t=new ri(1,1);return new da({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:va[on]},outputEncoding:{value:va[on]}},vertexShader:Na(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${za()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:E,depthTest:!1,depthWrite:!1})}function Ia(){return new da({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:va[on]},outputEncoding:{value:va[on]}},vertexShader:Na(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${za()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:E,depthTest:!1,depthWrite:!1})}function Na(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function za(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}function Ba(t){let e=new WeakMap,n=null;function r(t){const n=t.target;n.removeEventListener("dispose",r);const o=e.get(n);void 0!==o&&(e.delete(n),o.dispose())}return{get:function(o){if(o&&o.isTexture&&!1===o.isRenderTargetTexture){const l=o.mapping,c=l===vt||l===yt,h=l===mt||l===gt;if(c||h){if(e.has(o))return e.get(o).texture;{const image=o.image;if(c&&image&&image.height>0||h&&image&&function(image){let t=0;const e=6;for(let i=0;i<e;i++)void 0!==image[i]&&t++;return t===e}(image)){const l=t.getRenderTarget();null===n&&(n=new Aa(t));const h=c?n.fromEquirectangular(o):n.fromCubemap(o);return e.set(o,h),t.setRenderTarget(l),o.addEventListener("dispose",r),h.texture}return null}}}return o},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Fa(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Oa(t,e,n,r){const o={},l=new WeakMap;function c(t){const h=t.target;null!==h.index&&e.remove(h.index);for(const t in h.attributes)e.remove(h.attributes[t]);h.removeEventListener("dispose",c),delete o[h.id];const d=l.get(h);d&&(e.remove(d),l.delete(h)),r.releaseStatesOfGeometry(h),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,n.memory.geometries--}function h(t){const n=[],r=t.index,o=t.attributes.position;let c=0;if(null!==r){const t=r.array;c=r.version;for(let i=0,e=t.length;i<e;i+=3){const a=t[i+0],b=t[i+1],e=t[i+2];n.push(a,b,b,e,e,a)}}else{const t=o.array;c=o.version;for(let i=0,e=t.length/3-1;i<e;i+=3){const a=i+0,b=i+1,t=i+2;n.push(a,b,b,t,t,a)}}const h=new(ai(n)>65535?rs:ns)(n,1);h.version=c;const d=l.get(t);d&&e.remove(d),l.set(t,h)}return{get:function(object,t){return!0===o[t.id]||(t.addEventListener("dispose",c),o[t.id]=!0,n.memory.geometries++),t},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const r=t.morphAttributes;for(const t in r){const n=r[t];for(let i=0,t=n.length;i<t;i++)e.update(n[i],34962)}},getWireframeAttribute:function(t){const e=l.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&h(t)}else h(t);return l.get(t)}}}function Ua(t,e,n,r){const o=r.isWebGL2;let l,c,h;this.setMode=function(t){l=t},this.setIndex=function(t){c=t.type,h=t.bytesPerElement},this.render=function(e,r){t.drawElements(l,r,c,e*h),n.update(r,l,1)},this.renderInstances=function(r,d,f){if(0===f)return;let m,v;if(o)m=t,v="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",null===m)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");m[v](l,d,c,r*h,f),n.update(d,l,f)}}function Ha(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}class Ga extends mi{constructor(data=null,t=1,e=1,n=1){super(null),this.image={data:data,width:t,height:e,depth:n},this.magFilter=St,this.minFilter=St,this.wrapR=bt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}function ka(a,b){return a[0]-b[0]}function Va(a,b){return Math.abs(b[1])-Math.abs(a[1])}function Wa(t,e){let n=1;const r=e.isInterleavedBufferAttribute?e.data.array:e.array;r instanceof Int8Array?n=127:r instanceof Int16Array?n=32767:r instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),t.divideScalar(n)}function ja(t,e,n){const r={},o=new Float32Array(8),l=new WeakMap,c=new bi,h=[];for(let i=0;i<8;i++)h[i]=[i,0];return{update:function(object,d,f,m){const v=object.morphTargetInfluences;if(!0===e.isWebGL2){const r=d.morphAttributes.position.length;let o=l.get(d);if(void 0===o||o.count!==r){void 0!==o&&o.texture.dispose();const t=void 0!==d.morphAttributes.normal,n=d.morphAttributes.position,h=d.morphAttributes.normal||[],f=!0===t?2:1;let m=d.attributes.position.count*f,v=1;m>e.maxTextureSize&&(v=Math.ceil(m/e.maxTextureSize),m=e.maxTextureSize);const y=new Float32Array(m*v*4*r),x=new Ga(y,m,v,r);x.format=Jt,x.type=Ht;const _=4*f;for(let i=0;i<r;i++){const e=n[i],r=h[i],o=m*v*4*i;for(let n=0;n<e.count;n++){c.fromBufferAttribute(e,n),!0===e.normalized&&Wa(c,e);const l=n*_;y[o+l+0]=c.x,y[o+l+1]=c.y,y[o+l+2]=c.z,y[o+l+3]=0,!0===t&&(c.fromBufferAttribute(r,n),!0===r.normalized&&Wa(c,r),y[o+l+4]=c.x,y[o+l+5]=c.y,y[o+l+6]=c.z,y[o+l+7]=0)}}o={count:r,texture:x,size:new ri(m,v)},l.set(d,o)}let h=0;for(let i=0;i<v.length;i++)h+=v[i];const f=d.morphTargetsRelative?1:1-h;m.getUniforms().setValue(t,"morphTargetBaseInfluence",f),m.getUniforms().setValue(t,"morphTargetInfluences",v),m.getUniforms().setValue(t,"morphTargetsTexture",o.texture,n),m.getUniforms().setValue(t,"morphTargetsTextureSize",o.size)}else{const e=void 0===v?0:v.length;let n=r[d.id];if(void 0===n||n.length!==e){n=[];for(let i=0;i<e;i++)n[i]=[i,0];r[d.id]=n}for(let i=0;i<e;i++){const t=n[i];t[0]=i,t[1]=v[i]}n.sort(Va);for(let i=0;i<8;i++)i<e&&n[i][1]?(h[i][0]=n[i][0],h[i][1]=n[i][1]):(h[i][0]=Number.MAX_SAFE_INTEGER,h[i][1]=0);h.sort(ka);const l=d.morphAttributes.position,c=d.morphAttributes.normal;let f=0;for(let i=0;i<8;i++){const t=h[i],e=t[0],n=t[1];e!==Number.MAX_SAFE_INTEGER&&n?(l&&d.getAttribute("morphTarget"+i)!==l[e]&&d.setAttribute("morphTarget"+i,l[e]),c&&d.getAttribute("morphNormal"+i)!==c[e]&&d.setAttribute("morphNormal"+i,c[e]),o[i]=n,f+=n):(l&&!0===d.hasAttribute("morphTarget"+i)&&d.deleteAttribute("morphTarget"+i),c&&!0===d.hasAttribute("morphNormal"+i)&&d.deleteAttribute("morphNormal"+i),o[i]=0)}const y=d.morphTargetsRelative?1:1-f;m.getUniforms().setValue(t,"morphTargetBaseInfluence",y),m.getUniforms().setValue(t,"morphTargetInfluences",o)}}}}function qa(t,e,n,r){let o=new WeakMap;function l(t){const e=t.target;e.removeEventListener("dispose",l),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(object){const t=r.render.frame,c=object.geometry,h=e.get(object,c);return o.get(h)!==t&&(e.update(h),o.set(h,t)),object.isInstancedMesh&&(!1===object.hasEventListener("dispose",l)&&object.addEventListener("dispose",l),n.update(object.instanceMatrix,34962),null!==object.instanceColor&&n.update(object.instanceColor,34962)),h},dispose:function(){o=new WeakMap}}}Ga.prototype.isDataTexture2DArray=!0;class Xa extends mi{constructor(data=null,t=1,e=1,n=1){super(null),this.image={data:data,width:t,height:e,depth:n},this.magFilter=St,this.minFilter=St,this.wrapR=bt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Xa.prototype.isDataTexture3D=!0;const Ja=new mi,Ya=new Ga,Za=new Xa,Qa=new Ws,Ka=[],$a=[],to=new Float32Array(16),eo=new Float32Array(9),no=new Float32Array(4);function io(t,e,n){const r=t[0];if(r<=0||r>0)return t;const o=e*n;let l=Ka[o];if(void 0===l&&(l=new Float32Array(o),Ka[o]=l),0!==e){r.toArray(l,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(l,r)}return l}function ro(a,b){if(a.length!==b.length)return!1;for(let i=0,t=a.length;i<t;i++)if(a[i]!==b[i])return!1;return!0}function so(a,b){for(let i=0,t=b.length;i<t;i++)a[i]=b[i]}function ao(t,e){let n=$a[e];void 0===n&&(n=new Int32Array(e),$a[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function oo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function lo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(ro(n,e))return;t.uniform2fv(this.addr,e),so(n,e)}}function co(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(ro(n,e))return;t.uniform3fv(this.addr,e),so(n,e)}}function uo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(ro(n,e))return;t.uniform4fv(this.addr,e),so(n,e)}}function ho(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(ro(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),so(n,e)}else{if(ro(n,r))return;no.set(r),t.uniformMatrix2fv(this.addr,!1,no),so(n,r)}}function po(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(ro(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),so(n,e)}else{if(ro(n,r))return;eo.set(r),t.uniformMatrix3fv(this.addr,!1,eo),so(n,r)}}function fo(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(ro(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),so(n,e)}else{if(ro(n,r))return;to.set(r),t.uniformMatrix4fv(this.addr,!1,to),so(n,r)}}function mo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function go(t,e){const n=this.cache;ro(n,e)||(t.uniform2iv(this.addr,e),so(n,e))}function vo(t,e){const n=this.cache;ro(n,e)||(t.uniform3iv(this.addr,e),so(n,e))}function yo(t,e){const n=this.cache;ro(n,e)||(t.uniform4iv(this.addr,e),so(n,e))}function xo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function _o(t,e){const n=this.cache;ro(n,e)||(t.uniform2uiv(this.addr,e),so(n,e))}function Mo(t,e){const n=this.cache;ro(n,e)||(t.uniform3uiv(this.addr,e),so(n,e))}function bo(t,e){const n=this.cache;ro(n,e)||(t.uniform4uiv(this.addr,e),so(n,e))}function wo(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.safeSetTexture2D(e||Ja,o)}function So(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.setTexture3D(e||Za,o)}function To(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.safeSetTextureCube(e||Qa,o)}function Eo(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.setTexture2DArray(e||Ya,o)}function Ao(t,e){t.uniform1fv(this.addr,e)}function Lo(t,e){const data=io(e,this.size,2);t.uniform2fv(this.addr,data)}function Ro(t,e){const data=io(e,this.size,3);t.uniform3fv(this.addr,data)}function Co(t,e){const data=io(e,this.size,4);t.uniform4fv(this.addr,data)}function Po(t,e){const data=io(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,data)}function Do(t,e){const data=io(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,data)}function Io(t,e){const data=io(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,data)}function No(t,e){t.uniform1iv(this.addr,e)}function zo(t,e){t.uniform2iv(this.addr,e)}function Bo(t,e){t.uniform3iv(this.addr,e)}function Fo(t,e){t.uniform4iv(this.addr,e)}function Oo(t,e){t.uniform1uiv(this.addr,e)}function Uo(t,e){t.uniform2uiv(this.addr,e)}function Ho(t,e){t.uniform3uiv(this.addr,e)}function Go(t,e){t.uniform4uiv(this.addr,e)}function ko(t,e,n){const r=e.length,o=ao(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.safeSetTexture2D(e[i]||Ja,o[i])}function Vo(t,e,n){const r=e.length,o=ao(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.setTexture3D(e[i]||Za,o[i])}function Wo(t,e,n){const r=e.length,o=ao(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.safeSetTextureCube(e[i]||Qa,o[i])}function jo(t,e,n){const r=e.length,o=ao(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.setTexture2DArray(e[i]||Ya,o[i])}function qo(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return oo;case 35664:return lo;case 35665:return co;case 35666:return uo;case 35674:return ho;case 35675:return po;case 35676:return fo;case 5124:case 35670:return mo;case 35667:case 35671:return go;case 35668:case 35672:return vo;case 35669:case 35673:return yo;case 5125:return xo;case 36294:return _o;case 36295:return Mo;case 36296:return bo;case 35678:case 36198:case 36298:case 36306:case 35682:return wo;case 35679:case 36299:case 36307:return So;case 35680:case 36300:case 36308:case 36293:return To;case 36289:case 36303:case 36311:case 36292:return Eo}}(e.type)}function Xo(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Ao;case 35664:return Lo;case 35665:return Ro;case 35666:return Co;case 35674:return Po;case 35675:return Do;case 35676:return Io;case 5124:case 35670:return No;case 35667:case 35671:return zo;case 35668:case 35672:return Bo;case 35669:case 35673:return Fo;case 5125:return Oo;case 36294:return Uo;case 36295:return Ho;case 36296:return Go;case 35678:case 36198:case 36298:case 36306:case 35682:return ko;case 35679:case 36299:case 36307:return Vo;case 35680:case 36300:case 36308:case 36293:return Wo;case 36289:case 36303:case 36311:case 36292:return jo}}(e.type)}function Jo(t){this.id=t,this.seq=[],this.map={}}Xo.prototype.updateCache=function(data){const t=this.cache;data instanceof Float32Array&&t.length!==data.length&&(this.cache=new Float32Array(data.length)),so(t,data)},Jo.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,o=r.length;i!==o;++i){const u=r[i];u.setValue(t,e[u.id],n)}};const Yo=/(\w+)(\])?(\[|\.)?/g;function Zo(t,e){t.seq.push(e),t.map[e.id]=e}function Qo(t,e,n){const path=t.name,r=path.length;for(Yo.lastIndex=0;;){const o=Yo.exec(path),l=Yo.lastIndex;let c=o[1];const h="]"===o[2],d=o[3];if(h&&(c|=0),void 0===d||"["===d&&l+2===r){Zo(n,void 0===d?new qo(c,t,e):new Xo(c,t,e));break}{let t=n.map[c];void 0===t&&(t=new Jo(c),Zo(n,t)),n=t}}}function Ko(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);Qo(n,t.getUniformLocation(e,n.name),this)}}function $o(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}Ko.prototype.setValue=function(t,e,n,r){const u=this.map[e];void 0!==u&&u.setValue(t,n,r)},Ko.prototype.setOptional=function(t,object,e){const n=object[e];void 0!==n&&this.setValue(t,e,n)},Ko.upload=function(t,e,n,r){for(let i=0,o=e.length;i!==o;++i){const u=e[i],o=n[u.id];!1!==o.needsUpdate&&u.setValue(t,o.value,r)}},Ko.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const u=t[i];u.id in e&&n.push(u)}return n};let tl=0;function el(t){switch(t){case on:return["Linear","( value )"];case ln:return["sRGB","( value )"];case un:return["RGBE","( value )"];case hn:return["RGBM","( value, 7.0 )"];case dn:return["RGBM","( value, 16.0 )"];case pn:return["RGBD","( value, 256.0 )"];case cn:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function nl(t,e,n){const r=t.getShaderParameter(e,35713),o=t.getShaderInfoLog(e).trim();return r&&""===o?"":n.toUpperCase()+"\n\n"+o+"\n\n"+function(t){const e=t.split("\n");for(let i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")}(t.getShaderSource(e))}function il(t,e){const n=el(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function rl(t,e){const n=el(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function sl(t,e){let n;switch(e){case lt:n="Linear";break;case ct:n="Reinhard";break;case ut:n="OptimizedCineon";break;case ht:n="ACESFilmic";break;case pt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function al(t){return""!==t}function ll(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function cl(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hl=/^[ \t]*#include +<([\w\d./]+)>/gm;function pl(t){return t.replace(hl,fl)}function fl(t,e){const n=na[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return pl(n)}const ml=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,gl=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function vl(t){return t.replace(gl,xl).replace(ml,yl)}function yl(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),xl(t,e,n,r)}function xl(t,e,n,r){let o="";for(let i=parseInt(e);i<parseInt(n);i++)o+=r.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return o}function _l(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Ml(t,e,n,r){const o=t.getContext(),l=n.defines;let c=n.vertexShader,h=n.fragmentShader;const d=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===v?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===y?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===x&&(e="SHADOWMAP_TYPE_VSM"),e}(n),f=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case mt:case gt:e="ENVMAP_TYPE_CUBE";break;case xt:case _t:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),m=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case gt:case _t:e="ENVMAP_MODE_REFRACTION"}return e}(n),_=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case it:e="ENVMAP_BLENDING_MULTIPLY";break;case st:e="ENVMAP_BLENDING_MIX";break;case at:e="ENVMAP_BLENDING_ADD"}return e}(n),M=t.gammaFactor>0?t.gammaFactor:1,w=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(al).join("\n")}(n),S=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(l),T=o.createProgram();let E,A,L=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(E=[S].filter(al).join("\n"),E.length>0&&(E+="\n"),A=[w,S].filter(al).join("\n"),A.length>0&&(A+="\n")):(E=[_l(n),"#define SHADER_NAME "+n.shaderName,S,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+M,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+m:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+d:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(al).join("\n"),A=[w,_l(n),"#define SHADER_NAME "+n.shaderName,S,"#define GAMMA_FACTOR "+M,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+f:"",n.envMap?"#define "+m:"",n.envMap?"#define "+_:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+d:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ot?"#define TONE_MAPPING":"",n.toneMapping!==ot?na.tonemapping_pars_fragment:"",n.toneMapping!==ot?sl("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.format===Xt?"#define OPAQUE":"",na.encodings_pars_fragment,n.map?il("mapTexelToLinear",n.mapEncoding):"",n.matcap?il("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?il("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?il("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.specularColorMap?il("specularColorMapTexelToLinear",n.specularColorMapEncoding):"",n.sheenColorMap?il("sheenColorMapTexelToLinear",n.sheenColorMapEncoding):"",n.lightMap?il("lightMapTexelToLinear",n.lightMapEncoding):"",rl("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(al).join("\n")),c=pl(c),c=ll(c,n),c=cl(c,n),h=pl(h),h=ll(h,n),h=cl(h,n),c=vl(c),h=vl(h),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(L="#version 300 es\n",E=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+E,A=["#define varying in",n.glslVersion===Wn?"":"out highp vec4 pc_fragColor;",n.glslVersion===Wn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+A);const R=L+A+h,C=$o(o,35633,L+E+c),P=$o(o,35632,R);if(o.attachShader(T,C),o.attachShader(T,P),void 0!==n.index0AttributeName?o.bindAttribLocation(T,0,n.index0AttributeName):!0===n.morphTargets&&o.bindAttribLocation(T,0,"position"),o.linkProgram(T),t.debug.checkShaderErrors){const t=o.getProgramInfoLog(T).trim(),e=o.getShaderInfoLog(C).trim(),n=o.getShaderInfoLog(P).trim();let r=!0,l=!0;if(!1===o.getProgramParameter(T,35714)){r=!1;const e=nl(o,C,"vertex"),n=nl(o,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(T,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==n||(l=!1);l&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:E},fragmentShader:{log:n,prefix:A}})}let D,I;return o.deleteShader(C),o.deleteShader(P),this.getUniforms=function(){return void 0===D&&(D=new Ko(o,T)),D},this.getAttributes=function(){return void 0===I&&(I=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i),o=r.name;let l=1;35674===r.type&&(l=2),35675===r.type&&(l=3),35676===r.type&&(l=4),n[o]={type:r.type,location:t.getAttribLocation(e,o),locationSize:l}}return n}(o,T)),I},this.destroy=function(){r.releaseStatesOfProgram(this),o.deleteProgram(T),this.program=void 0},this.name=n.shaderName,this.id=tl++,this.cacheKey=e,this.usedTimes=1,this.program=T,this.vertexShader=C,this.fragmentShader=P,this}function bl(t,e,n,r,o,l,c){const h=[],d=o.isWebGL2,f=o.logarithmicDepthBuffer,m=o.floatVertexTextures,v=o.maxVertexUniforms,y=o.vertexTextures;let x=o.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},S=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap",,"roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","specularIntensityMap","specularColorMap","specularColorMapEncoding","transmission","transmissionMap","thicknessMap","sheen","sheenColorMap","sheenColorMapEncoding","sheenRoughnessMap"];function T(map){let t;return map&&map.isTexture?t=map.encoding:map&&map.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=map.texture.encoding):t=on,t}return{getParameters:function(l,h,S,E,object){const A=E.fog,L=l.isMeshStandardMaterial?E.environment:null,R=(l.isMeshStandardMaterial?n:e).get(l.envMap||L),C=_[l.type],P=object.isSkinnedMesh?function(object){const t=object.skeleton.bones;if(m)return 1024;{const e=v,n=Math.floor((e-20)/4),r=Math.min(n,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}}(object):0;let D,I;if(null!==l.precision&&(x=o.getMaxPrecision(l.precision),x!==l.precision&&console.warn("THREE.WebGLProgram.getParameters:",l.precision,"not supported, using",x,"instead.")),C){const t=ra[C];D=t.vertexShader,I=t.fragmentShader}else D=l.vertexShader,I=l.fragmentShader;const N=t.getRenderTarget(),z=l.alphaTest>0,B=l.clearcoat>0;return{isWebGL2:d,shaderID:C,shaderName:l.type,vertexShader:D,fragmentShader:I,defines:l.defines,isRawShaderMaterial:!0===l.isRawShaderMaterial,glslVersion:l.glslVersion,precision:x,instancing:!0===object.isInstancedMesh,instancingColor:!0===object.isInstancedMesh&&null!==object.instanceColor,supportsVertexTextures:y,outputEncoding:null!==N?T(N.texture):t.outputEncoding,map:!!l.map,mapEncoding:T(l.map),matcap:!!l.matcap,matcapEncoding:T(l.matcap),envMap:!!R,envMapMode:R&&R.mapping,envMapEncoding:T(R),envMapCubeUV:!!R&&(R.mapping===xt||R.mapping===_t),lightMap:!!l.lightMap,lightMapEncoding:T(l.lightMap),aoMap:!!l.aoMap,emissiveMap:!!l.emissiveMap,emissiveMapEncoding:T(l.emissiveMap),bumpMap:!!l.bumpMap,normalMap:!!l.normalMap,objectSpaceNormalMap:l.normalMapType===vn,tangentSpaceNormalMap:l.normalMapType===gn,clearcoat:B,clearcoatMap:B&&!!l.clearcoatMap,clearcoatRoughnessMap:B&&!!l.clearcoatRoughnessMap,clearcoatNormalMap:B&&!!l.clearcoatNormalMap,displacementMap:!!l.displacementMap,roughnessMap:!!l.roughnessMap,metalnessMap:!!l.metalnessMap,specularMap:!!l.specularMap,specularIntensityMap:!!l.specularIntensityMap,specularColorMap:!!l.specularColorMap,specularColorMapEncoding:T(l.specularColorMap),alphaMap:!!l.alphaMap,alphaTest:z,gradientMap:!!l.gradientMap,sheen:l.sheen>0,sheenColorMap:!!l.sheenColorMap,sheenColorMapEncoding:T(l.sheenColorMap),sheenRoughnessMap:!!l.sheenRoughnessMap,transmission:l.transmission>0,transmissionMap:!!l.transmissionMap,thicknessMap:!!l.thicknessMap,combine:l.combine,vertexTangents:!!l.normalMap&&!!object.geometry&&!!object.geometry.attributes.tangent,vertexColors:l.vertexColors,vertexAlphas:!0===l.vertexColors&&!!object.geometry&&!!object.geometry.attributes.color&&4===object.geometry.attributes.color.itemSize,vertexUvs:!!l.map||!!l.bumpMap||!!l.normalMap||!!l.specularMap||!!l.alphaMap||!!l.emissiveMap||!!l.roughnessMap||!!l.metalnessMap||!!l.clearcoatMap||!!l.clearcoatRoughnessMap||!!l.clearcoatNormalMap||!!l.displacementMap||!!l.transmissionMap||!!l.thicknessMap||!!l.specularIntensityMap||!!l.specularColorMap||!!l.sheenColorMap||l.sheenRoughnessMap,uvsVertexOnly:!(l.map||l.bumpMap||l.normalMap||l.specularMap||l.alphaMap||l.emissiveMap||l.roughnessMap||l.metalnessMap||l.clearcoatNormalMap||l.transmission>0||l.transmissionMap||l.thicknessMap||l.specularIntensityMap||l.specularColorMap||l.sheen>0||l.sheenColorMap||l.sheenRoughnessMap||!l.displacementMap),fog:!!A,useFog:l.fog,fogExp2:A&&A.isFogExp2,flatShading:!!l.flatShading,sizeAttenuation:l.sizeAttenuation,logarithmicDepthBuffer:f,skinning:!0===object.isSkinnedMesh&&P>0,maxBones:P,useVertexTexture:m,morphTargets:!!object.geometry&&!!object.geometry.morphAttributes.position,morphNormals:!!object.geometry&&!!object.geometry.morphAttributes.normal,morphTargetsCount:object.geometry&&object.geometry.morphAttributes.position?object.geometry.morphAttributes.position.length:0,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numDirLightShadows:h.directionalShadowMap.length,numPointLightShadows:h.pointShadowMap.length,numSpotLightShadows:h.spotShadowMap.length,numClippingPlanes:c.numPlanes,numClipIntersection:c.numIntersection,format:l.format,dithering:l.dithering,shadowMapEnabled:t.shadowMap.enabled&&S.length>0,shadowMapType:t.shadowMap.type,toneMapping:l.toneMapped?t.toneMapping:ot,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:l.premultipliedAlpha,doubleSided:l.side===w,flipSided:l.side===M,depthPacking:void 0!==l.depthPacking&&l.depthPacking,index0AttributeName:l.index0AttributeName,extensionDerivatives:l.extensions&&l.extensions.derivatives,extensionFragDepth:l.extensions&&l.extensions.fragDepth,extensionDrawBuffers:l.extensions&&l.extensions.drawBuffers,extensionShaderTextureLOD:l.extensions&&l.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||r.has("EXT_shader_texture_lod"),customProgramCacheKey:l.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(hi(e.fragmentShader)),n.push(hi(e.vertexShader))),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let i=0;i<S.length;i++)n.push(e[S[i]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=_[t.type];let n;if(e){const t=ra[e];n=Os.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let p=0,t=h.length;p<t;p++){const t=h[p];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new Ml(t,n,e,l),h.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const i=h.indexOf(t);h[i]=h[h.length-1],h.pop(),t.destroy()}},programs:h}}function wl(){let t=new WeakMap;return{get:function(object){let map=t.get(object);return void 0===map&&(map={},t.set(object,map)),map},remove:function(object){t.delete(object)},update:function(object,e,n){t.get(object)[e]=n},dispose:function(){t=new WeakMap}}}function Sl(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function Tl(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function El(t){const e=[];let n=0;const r=[],o=[],l=[],c={id:-1};function h(object,r,o,l,h,d){let f=e[n];const m=t.get(o);return void 0===f?(f={id:object.id,object:object,geometry:r,material:o,program:m.program||c,groupOrder:l,renderOrder:object.renderOrder,z:h,group:d},e[n]=f):(f.id=object.id,f.object=object,f.geometry=r,f.material=o,f.program=m.program||c,f.groupOrder=l,f.renderOrder=object.renderOrder,f.z=h,f.group=d),n++,f}return{opaque:r,transmissive:o,transparent:l,init:function(){n=0,r.length=0,o.length=0,l.length=0},push:function(object,t,e,n,c,d){const f=h(object,t,e,n,c,d);e.transmission>0?o.push(f):!0===e.transparent?l.push(f):r.push(f)},unshift:function(object,t,e,n,c,d){const f=h(object,t,e,n,c,d);e.transmission>0?o.unshift(f):!0===e.transparent?l.unshift(f):r.unshift(f)},finish:function(){for(let i=n,t=e.length;i<t;i++){const t=e[i];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.program=null,t.group=null}},sort:function(t,e){r.length>1&&r.sort(t||Sl),o.length>1&&o.sort(e||Tl),l.length>1&&l.sort(e||Tl)}}}function Al(t){let e=new WeakMap;return{get:function(n,r){let o;return!1===e.has(n)?(o=new El(t),e.set(n,[o])):r>=e.get(n).length?(o=new El(t),e.get(n).push(o)):o=e.get(n)[r],o},dispose:function(){e=new WeakMap}}}function Ll(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new bi,color:new Xr};break;case"SpotLight":n={position:new bi,direction:new bi,color:new Xr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new bi,color:new Xr,distance:0,decay:0};break;case"HemisphereLight":n={direction:new bi,skyColor:new Xr,groundColor:new Xr};break;case"RectAreaLight":n={color:new Xr,position:new bi,halfWidth:new bi,halfHeight:new bi}}return t[e.id]=n,n}}}let Rl=0;function Cl(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Pl(t,e){const n=new Ll,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ri};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ri,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),o={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let i=0;i<9;i++)o.probe.push(new bi);const l=new bi,c=new $i,h=new $i;return{setup:function(l,c){let h=0,g=0,b=0;for(let i=0;i<9;i++)o.probe[i].set(0,0,0);let d=0,f=0,m=0,v=0,y=0,x=0,_=0,M=0;l.sort(Cl);const w=!0!==c?Math.PI:1;for(let i=0,t=l.length;i<t;i++){const t=l[i],e=t.color,c=t.intensity,S=t.distance,T=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)h+=e.r*c*w,g+=e.g*c*w,b+=e.b*c*w;else if(t.isLightProbe)for(let e=0;e<9;e++)o.probe[e].addScaledVector(t.sh.coefficients[e],c);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*w),t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,o.directionalShadow[d]=e,o.directionalShadowMap[d]=T,o.directionalShadowMatrix[d]=t.shadow.matrix,x++}o.directional[d]=e,d++}else if(t.isSpotLight){const l=n.get(t);if(l.position.setFromMatrixPosition(t.matrixWorld),l.color.copy(e).multiplyScalar(c*w),l.distance=S,l.coneCos=Math.cos(t.angle),l.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),l.decay=t.decay,t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,o.spotShadow[m]=e,o.spotShadowMap[m]=T,o.spotShadowMatrix[m]=t.shadow.matrix,M++}o.spot[m]=l,m++}else if(t.isRectAreaLight){const r=n.get(t);r.color.copy(e).multiplyScalar(c),r.halfWidth.set(.5*t.width,0,0),r.halfHeight.set(0,.5*t.height,0),o.rectArea[v]=r,v++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*w),e.distance=t.distance,e.decay=t.decay,t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,e.shadowCameraNear=shadow.camera.near,e.shadowCameraFar=shadow.camera.far,o.pointShadow[f]=e,o.pointShadowMap[f]=T,o.pointShadowMatrix[f]=t.shadow.matrix,_++}o.point[f]=e,f++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(c*w),e.groundColor.copy(t.groundColor).multiplyScalar(c*w),o.hemi[y]=e,y++}}v>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(o.rectAreaLTC1=ia.LTC_FLOAT_1,o.rectAreaLTC2=ia.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(o.rectAreaLTC1=ia.LTC_HALF_1,o.rectAreaLTC2=ia.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),o.ambient[0]=h,o.ambient[1]=g,o.ambient[2]=b;const S=o.hash;S.directionalLength===d&&S.pointLength===f&&S.spotLength===m&&S.rectAreaLength===v&&S.hemiLength===y&&S.numDirectionalShadows===x&&S.numPointShadows===_&&S.numSpotShadows===M||(o.directional.length=d,o.spot.length=m,o.rectArea.length=v,o.point.length=f,o.hemi.length=y,o.directionalShadow.length=x,o.directionalShadowMap.length=x,o.pointShadow.length=_,o.pointShadowMap.length=_,o.spotShadow.length=M,o.spotShadowMap.length=M,o.directionalShadowMatrix.length=x,o.pointShadowMatrix.length=_,o.spotShadowMatrix.length=M,S.directionalLength=d,S.pointLength=f,S.spotLength=m,S.rectAreaLength=v,S.hemiLength=y,S.numDirectionalShadows=x,S.numPointShadows=_,S.numSpotShadows=M,o.version=Rl++)},setupView:function(t,e){let n=0,r=0,d=0,f=0,m=0;const v=e.matrixWorldInverse;for(let i=0,e=t.length;i<e;i++){const e=t[i];if(e.isDirectionalLight){const t=o.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),l.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(l),t.direction.transformDirection(v),n++}else if(e.isSpotLight){const t=o.spot[d];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(v),t.direction.setFromMatrixPosition(e.matrixWorld),l.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(l),t.direction.transformDirection(v),d++}else if(e.isRectAreaLight){const t=o.rectArea[f];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(v),h.identity(),c.copy(e.matrixWorld),c.premultiply(v),h.extractRotation(c),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(h),t.halfHeight.applyMatrix4(h),f++}else if(e.isPointLight){const t=o.point[r];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(v),r++}else if(e.isHemisphereLight){const t=o.hemi[m];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(v),t.direction.normalize(),m++}}},state:o}}function Dl(t,e){const n=new Pl(t,e),r=[],o=[];return{init:function(){r.length=0,o.length=0},state:{lightsArray:r,shadowsArray:o,lights:n},setupLights:function(t){n.setup(r,t)},setupLightsView:function(t){n.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){o.push(t)}}}function Il(t,e){let n=new WeakMap;return{get:function(r,o=0){let l;return!1===n.has(r)?(l=new Dl(t,e),n.set(r,[l])):o>=n.get(r).length?(l=new Dl(t,e),n.get(r).push(l)):l=n.get(r)[o],l},dispose:function(){n=new WeakMap}}}class Nl extends Hr{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=fn,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(source){return super.copy(source),this.depthPacking=source.depthPacking,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this}}Nl.prototype.isMeshDepthMaterial=!0;class zl extends Hr{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new bi,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(source){return super.copy(source),this.referencePosition.copy(source.referencePosition),this.nearDistance=source.nearDistance,this.farDistance=source.farDistance,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this}}zl.prototype.isMeshDistanceMaterial=!0;function Bl(t,e,n){let r=new Ks;const o=new ri,l=new ri,c=new vi,h=new Nl({depthPacking:mn}),d=new zl,f={},m=n.maxTextureSize,y={0:M,1:_,2:w},S=new Us({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ri},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),T=S.clone();T.defines.HORIZONTAL_PASS=1;const A=new ms;A.setAttribute("position",new Qr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const L=new Is(A,S),R=this;function C(shadow,n){const r=e.update(L);S.defines.VSM_SAMPLES!==shadow.blurSamples&&(S.defines.VSM_SAMPLES=shadow.blurSamples,T.defines.VSM_SAMPLES=shadow.blurSamples,S.needsUpdate=!0,T.needsUpdate=!0),S.uniforms.shadow_pass.value=shadow.map.texture,S.uniforms.resolution.value=shadow.mapSize,S.uniforms.radius.value=shadow.radius,t.setRenderTarget(shadow.mapPass),t.clear(),t.renderBufferDirect(n,null,r,S,L,null),T.uniforms.shadow_pass.value=shadow.mapPass.texture,T.uniforms.resolution.value=shadow.mapSize,T.uniforms.radius.value=shadow.radius,t.setRenderTarget(shadow.map),t.clear(),t.renderBufferDirect(n,null,r,T,L,null)}function P(object,e,n,r,o,l,c){let m=null;const v=!0===r.isPointLight?object.customDistanceMaterial:object.customDepthMaterial;if(m=void 0!==v?v:!0===r.isPointLight?d:h,t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){const t=m.uuid,e=n.uuid;let r=f[t];void 0===r&&(r={},f[t]=r);let o=r[e];void 0===o&&(o=m.clone(),r[e]=o),m=o}return m.visible=n.visible,m.wireframe=n.wireframe,m.side=c===x?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:y[n.side],m.alphaMap=n.alphaMap,m.alphaTest=n.alphaTest,m.clipShadows=n.clipShadows,m.clippingPlanes=n.clippingPlanes,m.clipIntersection=n.clipIntersection,m.displacementMap=n.displacementMap,m.displacementScale=n.displacementScale,m.displacementBias=n.displacementBias,m.wireframeLinewidth=n.wireframeLinewidth,m.linewidth=n.linewidth,!0===r.isPointLight&&!0===m.isMeshDistanceMaterial&&(m.referencePosition.setFromMatrixPosition(r.matrixWorld),m.nearDistance=o,m.farDistance=l),m}function D(object,n,o,l,c){if(!1===object.visible)return;if(object.layers.test(n.layers)&&(object.isMesh||object.isLine||object.isPoints)&&(object.castShadow||object.receiveShadow&&c===x)&&(!object.frustumCulled||r.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,object.matrixWorld);const n=e.update(object),r=object.material;if(Array.isArray(r)){const e=n.groups;for(let h=0,d=e.length;h<d;h++){const d=e[h],f=r[d.materialIndex];if(f&&f.visible){const e=P(object,0,f,l,o.near,o.far,c);t.renderBufferDirect(o,null,n,e,object,d)}}}else if(r.visible){const e=P(object,0,r,l,o.near,o.far,c);t.renderBufferDirect(o,null,n,e,object,null)}}const h=object.children;for(let i=0,t=h.length;i<t;i++)D(h[i],n,o,l,c)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=v,this.render=function(e,n,h){if(!1===R.enabled)return;if(!1===R.autoUpdate&&!1===R.needsUpdate)return;if(0===e.length)return;const d=t.getRenderTarget(),f=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),y=t.state;y.setBlending(E),y.buffers.color.setClear(1,1,1,1),y.buffers.depth.setTest(!0),y.setScissorTest(!1);for(let i=0,d=e.length;i<d;i++){const d=e[i],shadow=d.shadow;if(void 0===shadow){console.warn("THREE.WebGLShadowMap:",d,"has no shadow.");continue}if(!1===shadow.autoUpdate&&!1===shadow.needsUpdate)continue;o.copy(shadow.mapSize);const f=shadow.getFrameExtents();if(o.multiply(f),l.copy(shadow.mapSize),(o.x>m||o.y>m)&&(o.x>m&&(l.x=Math.floor(m/f.x),o.x=l.x*f.x,shadow.mapSize.x=l.x),o.y>m&&(l.y=Math.floor(m/f.y),o.y=l.y*f.y,shadow.mapSize.y=l.y)),null===shadow.map&&!shadow.isPointLightShadow&&this.type===x){const t={minFilter:Rt,magFilter:Rt,format:Jt};shadow.map=new yi(o.x,o.y,t),shadow.map.texture.name=d.name+".shadowMap",shadow.mapPass=new yi(o.x,o.y,t),shadow.camera.updateProjectionMatrix()}if(null===shadow.map){const t={minFilter:St,magFilter:St,format:Jt};shadow.map=new yi(o.x,o.y,t),shadow.map.texture.name=d.name+".shadowMap",shadow.camera.updateProjectionMatrix()}t.setRenderTarget(shadow.map),t.clear();const v=shadow.getViewportCount();for(let t=0;t<v;t++){const e=shadow.getViewport(t);c.set(l.x*e.x,l.y*e.y,l.x*e.z,l.y*e.w),y.viewport(c),shadow.updateMatrices(d,t),r=shadow.getFrustum(),D(n,h,shadow.camera,d,this.type)}shadow.isPointLightShadow||this.type!==x||C(shadow,h),shadow.needsUpdate=!1}R.needsUpdate=!1,t.setRenderTarget(d,f,v)}}function Fl(t,e,n){const r=n.isWebGL2;const o=new function(){let e=!1;const n=new vi;let r=null;const o=new vi(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,g,b,a,r){!0===r&&(e*=a,g*=a,b*=a),n.set(e,g,b,a),!1===o.equals(n)&&(t.clearColor(e,g,b,a),o.copy(n))},reset:function(){e=!1,r=null,o.set(-1,0,0,0)}}},l=new function(){let e=!1,n=null,r=null,o=null;return{setTest:function(t){t?At(2929):Lt(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case Y:t.depthFunc(512);break;case Z:t.depthFunc(519);break;case Q:t.depthFunc(513);break;default:t.depthFunc(515);break;case $:t.depthFunc(514);break;case tt:t.depthFunc(518);break;case et:t.depthFunc(516);break;case nt:t.depthFunc(517)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){o!==e&&(t.clearDepth(e),o=e)},reset:function(){e=!1,n=null,r=null,o=null}}},f=new function(){let e=!1,n=null,r=null,o=null,l=null,c=null,h=null,d=null,f=null;return{setTest:function(t){e||(t?At(2960):Lt(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,c){r===e&&o===n&&l===c||(t.stencilFunc(e,n,c),r=e,o=n,l=c)},setOp:function(e,n,r){c===e&&h===n&&d===r||(t.stencilOp(e,n,r),c=e,h=n,d=r)},setLocked:function(t){e=t},setClear:function(e){f!==e&&(t.clearStencil(e),f=e)},reset:function(){e=!1,n=null,r=null,o=null,l=null,c=null,h=null,d=null,f=null}}};let m={},v={},y=null,x=!1,_=null,S=null,T=null,it=null,st=null,at=null,ot=null,lt=!1,ct=null,ut=null,ht=null,pt=null,ft=null;const mt=t.getParameter(35661);let gt=!1,vt=0;const yt=t.getParameter(7938);-1!==yt.indexOf("WebGL")?(vt=parseFloat(/^WebGL (\d)/.exec(yt)[1]),gt=vt>=1):-1!==yt.indexOf("OpenGL ES")&&(vt=parseFloat(/^OpenGL ES (\d)/.exec(yt)[1]),gt=vt>=2);let xt=null,_t={};const Mt=t.getParameter(3088),bt=t.getParameter(2978),wt=(new vi).fromArray(Mt),St=(new vi).fromArray(bt);function Tt(e,n,r){const data=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let i=0;i<r;i++)t.texImage2D(n+i,0,6408,1,1,0,6408,5121,data);return o}const Et={};function At(e){!0!==m[e]&&(t.enable(e),m[e]=!0)}function Lt(e){!1!==m[e]&&(t.disable(e),m[e]=!1)}Et[3553]=Tt(3553,3553,1),Et[34067]=Tt(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),f.setClear(0),At(2929),l.setFunc(K),Dt(!1),It(h),At(2884),Pt(E);const Rt={[D]:32774,[I]:32778,[N]:32779};if(r)Rt[z]=32775,Rt[B]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(Rt[z]=t.MIN_EXT,Rt[B]=t.MAX_EXT)}const Ct={[F]:0,[O]:1,[U]:768,[G]:770,[J]:776,[j]:774,[V]:772,[H]:769,[k]:771,[X]:775,[W]:773};function Pt(e,n,r,o,l,c,h,d){if(e!==E){if(!1===x&&(At(3042),x=!0),e===P)l=l||n,c=c||r,h=h||o,n===S&&l===st||(t.blendEquationSeparate(Rt[n],Rt[l]),S=n,st=l),r===T&&o===it&&c===at&&h===ot||(t.blendFuncSeparate(Ct[r],Ct[o],Ct[c],Ct[h]),T=r,it=o,at=c,ot=h),_=e,lt=null;else if(e!==_||d!==lt){if(S===D&&st===D||(t.blendEquation(32774),S=D,st=D),d)switch(e){case A:t.blendFuncSeparate(1,771,1,771);break;case L:t.blendFunc(1,1);break;case R:t.blendFuncSeparate(0,0,769,771);break;case C:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case A:t.blendFuncSeparate(770,771,1,771);break;case L:t.blendFunc(770,1);break;case R:t.blendFunc(0,769);break;case C:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}T=null,it=null,at=null,ot=null,_=e,lt=d}}else!0===x&&(Lt(3042),x=!1)}function Dt(e){ct!==e&&(e?t.frontFace(2304):t.frontFace(2305),ct=e)}function It(e){e!==c?(At(2884),e!==ut&&(e===h?t.cullFace(1029):e===d?t.cullFace(1028):t.cullFace(1032))):Lt(2884),ut=e}function Nt(e,n,r){e?(At(32823),pt===n&&ft===r||(t.polygonOffset(n,r),pt=n,ft=r)):Lt(32823)}function zt(e){void 0===e&&(e=33984+mt-1),xt!==e&&(t.activeTexture(e),xt=e)}return{buffers:{color:o,depth:l,stencil:f},enable:At,disable:Lt,bindFramebuffer:function(e,n){return v[e]!==n&&(t.bindFramebuffer(e,n),v[e]=n,r&&(36009===e&&(v[36160]=n),36160===e&&(v[36009]=n)),!0)},useProgram:function(e){return y!==e&&(t.useProgram(e),y=e,!0)},setBlending:Pt,setMaterial:function(t,e){t.side===w?Lt(2884):At(2884);let n=t.side===M;e&&(n=!n),Dt(n),t.blending===A&&!1===t.transparent?Pt(E):Pt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),l.setFunc(t.depthFunc),l.setTest(t.depthTest),l.setMask(t.depthWrite),o.setMask(t.colorWrite);const r=t.stencilWrite;f.setTest(r),r&&(f.setMask(t.stencilWriteMask),f.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),f.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Nt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?At(32926):Lt(32926)},setFlipSided:Dt,setCullFace:It,setLineWidth:function(e){e!==ht&&(gt&&t.lineWidth(e),ht=e)},setPolygonOffset:Nt,setScissorTest:function(t){t?At(3089):Lt(3089)},activeTexture:zt,bindTexture:function(e,n){null===xt&&zt();let r=_t[xt];void 0===r&&(r={type:void 0,texture:void 0},_t[xt]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||Et[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=_t[xt];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===wt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),wt.copy(e))},viewport:function(e){!1===St.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),St.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),m={},xt=null,_t={},v={},y=null,x=!1,_=null,S=null,T=null,it=null,st=null,at=null,ot=null,lt=!1,ct=null,ut=null,ht=null,pt=null,ft=null,wt.set(0,0,t.canvas.width,t.canvas.height),St.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),f.reset()}}}function Ol(t,e,n,r,o,l,c){const h=o.isWebGL2,d=o.maxTextures,f=o.maxCubemapSize,m=o.maxTextureSize,v=o.maxSamples,y=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):void 0,x=new WeakMap;let _,M=!1;try{M="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function w(t,e){return M?new OffscreenCanvas(t,e):ui("canvas")}function S(image,t,e,n){let r=1;if((image.width>n||image.height>n)&&(r=n/Math.max(image.width,image.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap){const n=t?ni:Math.floor,o=n(r*image.width),l=n(r*image.height);void 0===_&&(_=w(o,l));const canvas=e?w(o,l):_;canvas.width=o,canvas.height=l;return canvas.getContext("2d").drawImage(image,0,0,o,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+image.width+"x"+image.height+") to ("+o+"x"+l+")."),canvas}return"data"in image&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+image.width+"x"+image.height+")."),image}return image}function T(image){return ti(image.width)&&ti(image.height)}function E(t,e){return t.generateMipmaps&&e&&t.minFilter!==St&&t.minFilter!==Rt}function A(e){t.generateMipmap(e)}function L(n,r,o){if(!1===h)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=r;return 6403===r&&(5126===o&&(l=33326),5131===o&&(l=33325),5121===o&&(l=33321)),6407===r&&(5126===o&&(l=34837),5131===o&&(l=34843),5121===o&&(l=32849)),6408===r&&(5126===o&&(l=34836),5131===o&&(l=34842),5121===o&&(l=32856)),33325!==l&&33326!==l&&34842!==l&&34836!==l||e.get("EXT_color_buffer_float"),l}function R(t){return t===St||t===Tt||t===At?9728:9729}function C(e){const n=e.target;n.removeEventListener("dispose",C),function(e){const n=r.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),r.remove(e)}(n),n.isVideoTexture&&x.delete(n),c.memory.textures--}function P(e){const n=e.target;n.removeEventListener("dispose",P),function(e){const n=e.texture,o=r.get(e),l=r.get(n);if(!e)return;void 0!==l.__webglTexture&&(t.deleteTexture(l.__webglTexture),c.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let i=0;i<6;i++)t.deleteFramebuffer(o.__webglFramebuffer[i]),o.__webglDepthbuffer&&t.deleteRenderbuffer(o.__webglDepthbuffer[i]);else t.deleteFramebuffer(o.__webglFramebuffer),o.__webglDepthbuffer&&t.deleteRenderbuffer(o.__webglDepthbuffer),o.__webglMultisampledFramebuffer&&t.deleteFramebuffer(o.__webglMultisampledFramebuffer),o.__webglColorRenderbuffer&&t.deleteRenderbuffer(o.__webglColorRenderbuffer),o.__webglDepthRenderbuffer&&t.deleteRenderbuffer(o.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let i=0,e=n.length;i<e;i++){const e=r.get(n[i]);e.__webglTexture&&(t.deleteTexture(e.__webglTexture),c.memory.textures--),r.remove(n[i])}r.remove(n),r.remove(e)}(n)}let D=0;function I(t,slot){const e=r.get(t);if(t.isVideoTexture&&function(t){const e=c.render.frame;x.get(t)!==e&&(x.set(t,e),t.update())}(t),t.version>0&&e.__version!==t.version){const image=t.image;if(void 0===image)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==image.complete)return void U(e,t,slot);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+slot),n.bindTexture(3553,e.__webglTexture)}function N(e,slot){const o=r.get(e);e.version>0&&o.__version!==e.version?function(e,r,slot){if(6!==r.image.length)return;O(e,r),n.activeTexture(33984+slot),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const o=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),c=r.image[0]&&r.image[0].isDataTexture,d=[];for(let i=0;i<6;i++)d[i]=o||c?c?r.image[i].image:r.image[i]:S(r.image[i],!1,!0,f);const m=T(d[0])||h,v=l.convert(r.format),y=l.convert(r.type),x=L(r.internalFormat,v,y,r.encoding);let _;if(F(34067,r,m),o)for(let i=0;i<6;i++){_=d[i].mipmaps;for(let t=0;t<_.length;t++){const e=_[t];r.format!==Jt&&r.format!==Xt?null!==v?n.compressedTexImage2D(34069+i,t,x,e.width,e.height,0,e.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+i,t,x,e.width,e.height,0,v,y,e.data)}}else{_=r.mipmaps;for(let i=0;i<6;i++)if(c){n.texImage2D(34069+i,0,x,d[i].width,d[i].height,0,v,y,d[i].data);for(let t=0;t<_.length;t++){const e=_[t].image[i].image;n.texImage2D(34069+i,t+1,x,e.width,e.height,0,v,y,e.data)}}else{n.texImage2D(34069+i,0,x,v,y,d[i]);for(let t=0;t<_.length;t++){const e=_[t];n.texImage2D(34069+i,t+1,x,v,y,e.image[i])}}}E(r,m)&&A(34067);e.__version=r.version,r.onUpdate&&r.onUpdate(r)}(o,e,slot):(n.activeTexture(33984+slot),n.bindTexture(34067,o.__webglTexture))}const z={[Mt]:10497,[bt]:33071,[wt]:33648},B={[St]:9728,[Tt]:9984,[At]:9986,[Rt]:9729,[Ct]:9985,[Dt]:9987};function F(n,l,c){if(c?(t.texParameteri(n,10242,z[l.wrapS]),t.texParameteri(n,10243,z[l.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,z[l.wrapR]),t.texParameteri(n,10240,B[l.magFilter]),t.texParameteri(n,10241,B[l.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),l.wrapS===bt&&l.wrapT===bt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,R(l.magFilter)),t.texParameteri(n,10241,R(l.minFilter)),l.minFilter!==St&&l.minFilter!==Rt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const c=e.get("EXT_texture_filter_anisotropic");if(l.type===Ht&&!1===e.has("OES_texture_float_linear"))return;if(!1===h&&l.type===Gt&&!1===e.has("OES_texture_half_float_linear"))return;(l.anisotropy>1||r.get(l).__currentAnisotropy)&&(t.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(l.anisotropy,o.getMaxAnisotropy())),r.get(l).__currentAnisotropy=l.anisotropy)}}function O(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",C),e.__webglTexture=t.createTexture(),c.memory.textures++)}function U(e,r,slot){let o=3553;r.isDataTexture2DArray&&(o=35866),r.isDataTexture3D&&(o=32879),O(e,r),n.activeTexture(33984+slot),n.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const c=function(t){return!h&&(t.wrapS!==bt||t.wrapT!==bt||t.minFilter!==St&&t.minFilter!==Rt)}(r)&&!1===T(r.image),image=S(r.image,c,!1,m),d=T(image)||h,f=l.convert(r.format);let v,y=l.convert(r.type),x=L(r.internalFormat,f,y,r.encoding);F(o,r,d);const _=r.mipmaps;if(r.isDepthTexture)x=6402,h?x=r.type===Ht?36012:r.type===Ut?33190:r.type===jt?35056:33189:r.type===Ht&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===Kt&&6402===x&&r.type!==Ft&&r.type!==Ut&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Ft,y=l.convert(r.type)),r.format===$t&&6402===x&&(x=34041,r.type!==jt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=jt,y=l.convert(r.type))),n.texImage2D(3553,0,x,image.width,image.height,0,f,y,null);else if(r.isDataTexture)if(_.length>0&&d){for(let i=0,t=_.length;i<t;i++)v=_[i],n.texImage2D(3553,i,x,v.width,v.height,0,f,y,v.data);r.generateMipmaps=!1}else n.texImage2D(3553,0,x,image.width,image.height,0,f,y,image.data);else if(r.isCompressedTexture)for(let i=0,t=_.length;i<t;i++)v=_[i],r.format!==Jt&&r.format!==Xt?null!==f?n.compressedTexImage2D(3553,i,x,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,i,x,v.width,v.height,0,f,y,v.data);else if(r.isDataTexture2DArray)n.texImage3D(35866,0,x,image.width,image.height,image.depth,0,f,y,image.data);else if(r.isDataTexture3D)n.texImage3D(32879,0,x,image.width,image.height,image.depth,0,f,y,image.data);else{const t=function(t,image,e){return!0===E(t,e)?Math.log2(Math.max(image.width,image.height))+1:t.mipmaps.length>0?t.mipmaps.length:1}(r,image,d),o=h&&!0!==r.isVideoTexture,l=void 0===e.__version;if(_.length>0&&d){o&&l&&n.texStorage2D(3553,t,x,_[0].width,_[0].height);for(let i=0,t=_.length;i<t;i++)v=_[i],o?n.texSubImage2D(3553,i,0,0,f,y,v):n.texImage2D(3553,i,x,f,y,v);r.generateMipmaps=!1}else o?(l&&n.texStorage2D(3553,t,x,image.width,image.height),n.texSubImage2D(3553,0,0,0,f,y,image)):n.texImage2D(3553,0,x,f,y,image)}E(r,d)&&A(o),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function H(e,o,c,h,d){const f=l.convert(c.format),m=l.convert(c.type),v=L(c.internalFormat,f,m,c.encoding);r.get(o).__hasExternalTextures||(32879===d||35866===d?n.texImage3D(d,0,v,o.width,o.height,o.depth,0,f,m,null):n.texImage2D(d,0,v,o.width,o.height,0,f,m,null)),n.bindFramebuffer(36160,e),o.useRenderToTexture?y.framebufferTexture2DMultisampleEXT(36160,h,d,r.get(c).__webglTexture,0,V(o)):t.framebufferTexture2D(36160,h,d,r.get(c).__webglTexture,0),n.bindFramebuffer(36160,null)}function G(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let o=33189;if(r||n.useRenderToTexture){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Ht?o=36012:e.type===Ut&&(o=33190));const r=V(n);n.useRenderToTexture?y.renderbufferStorageMultisampleEXT(36161,r,o,n.width,n.height):t.renderbufferStorageMultisample(36161,r,o,n.width,n.height)}else t.renderbufferStorage(36161,o,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){const o=V(n);r&&n.useRenderbuffer?t.renderbufferStorageMultisample(36161,o,35056,n.width,n.height):n.useRenderToTexture?y.renderbufferStorageMultisampleEXT(36161,o,35056,n.width,n.height):t.renderbufferStorage(36161,34041,n.width,n.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,o=l.convert(e.format),c=l.convert(e.type),h=L(e.internalFormat,o,c,e.encoding),d=V(n);r&&n.useRenderbuffer?t.renderbufferStorageMultisample(36161,d,h,n.width,n.height):n.useRenderToTexture?y.renderbufferStorageMultisampleEXT(36161,d,h,n.width,n.height):t.renderbufferStorage(36161,h,n.width,n.height)}t.bindRenderbuffer(36161,null)}function k(e){const o=r.get(e),l=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!o.__autoAllocateDepthBuffer){if(l)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,o){if(o&&o.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!o.depthTexture||!o.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(o.depthTexture).__webglTexture&&o.depthTexture.image.width===o.width&&o.depthTexture.image.height===o.height||(o.depthTexture.image.width=o.width,o.depthTexture.image.height=o.height,o.depthTexture.needsUpdate=!0),I(o.depthTexture,0);const l=r.get(o.depthTexture).__webglTexture,c=V(o);if(o.depthTexture.format===Kt)o.useRenderToTexture?y.framebufferTexture2DMultisampleEXT(36160,36096,3553,l,0,c):t.framebufferTexture2D(36160,36096,3553,l,0);else{if(o.depthTexture.format!==$t)throw new Error("Unknown depthTexture format");o.useRenderToTexture?y.framebufferTexture2DMultisampleEXT(36160,33306,3553,l,0,c):t.framebufferTexture2D(36160,33306,3553,l,0)}}(o.__webglFramebuffer,e)}else if(l){o.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,o.__webglFramebuffer[i]),o.__webglDepthbuffer[i]=t.createRenderbuffer(),G(o.__webglDepthbuffer[i],e,!1)}else n.bindFramebuffer(36160,o.__webglFramebuffer),o.__webglDepthbuffer=t.createRenderbuffer(),G(o.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function V(t){return h&&(t.useRenderbuffer||t.useRenderToTexture)?Math.min(v,t.samples):0}let W=!1,j=!1;this.allocateTextureUnit=function(){const t=D;return t>=d&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+d),D+=1,t},this.resetTextureUnits=function(){D=0},this.setTexture2D=I,this.setTexture2DArray=function(t,slot){const e=r.get(t);t.version>0&&e.__version!==t.version?U(e,t,slot):(n.activeTexture(33984+slot),n.bindTexture(35866,e.__webglTexture))},this.setTexture3D=function(t,slot){const e=r.get(t);t.version>0&&e.__version!==t.version?U(e,t,slot):(n.activeTexture(33984+slot),n.bindTexture(32879,e.__webglTexture))},this.setTextureCube=N,this.rebindTextures=function(t,e,n){const o=r.get(t);void 0!==e&&H(o.__webglFramebuffer,t,t.texture,36064,3553),void 0!==n&&k(t)},this.setupRenderTarget=function(e){const d=e.texture,f=r.get(e),m=r.get(d);e.addEventListener("dispose",P),!0!==e.isWebGLMultipleRenderTargets&&(void 0===m.__webglTexture&&(m.__webglTexture=t.createTexture()),m.__version=d.version,c.memory.textures++);const v=!0===e.isWebGLCubeRenderTarget,y=!0===e.isWebGLMultipleRenderTargets,x=d.isDataTexture3D||d.isDataTexture2DArray,_=T(e)||h;if(!h||d.format!==Xt||d.type!==Ht&&d.type!==Gt||(d.format=Jt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),v){f.__webglFramebuffer=[];for(let i=0;i<6;i++)f.__webglFramebuffer[i]=t.createFramebuffer()}else if(f.__webglFramebuffer=t.createFramebuffer(),y)if(o.drawBuffers){const n=e.texture;for(let i=0,e=n.length;i<e;i++){const e=r.get(n[i]);void 0===e.__webglTexture&&(e.__webglTexture=t.createTexture(),c.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(e.useRenderbuffer)if(h){f.__webglMultisampledFramebuffer=t.createFramebuffer(),f.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,f.__webglColorRenderbuffer);const r=l.convert(d.format),o=l.convert(d.type),c=L(d.internalFormat,r,o,d.encoding),h=V(e);t.renderbufferStorageMultisample(36161,h,c,e.width,e.height),n.bindFramebuffer(36160,f.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,f.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(f.__webglDepthRenderbuffer=t.createRenderbuffer(),G(f.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(v){n.bindTexture(34067,m.__webglTexture),F(34067,d,_);for(let i=0;i<6;i++)H(f.__webglFramebuffer[i],e,d,36064,34069+i);E(d,_)&&A(34067),n.unbindTexture()}else if(y){const t=e.texture;for(let i=0,o=t.length;i<o;i++){const o=t[i],l=r.get(o);n.bindTexture(3553,l.__webglTexture),F(3553,o,_),H(f.__webglFramebuffer,e,o,36064+i,3553),E(o,_)&&A(3553)}n.unbindTexture()}else{let t=3553;if(x)if(h){t=d.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(t,m.__webglTexture),F(t,d,_),H(f.__webglFramebuffer,e,d,36064,t),E(d,_)&&A(t),n.unbindTexture()}e.depthBuffer&&k(e)},this.updateRenderTargetMipmap=function(t){const e=T(t)||h,o=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let i=0,l=o.length;i<l;i++){const l=o[i];if(E(l,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,o=r.get(l).__webglTexture;n.bindTexture(e,o),A(e),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.useRenderbuffer)if(h){const o=e.width,l=e.height;let mask=16384;const c=[36064],h=e.stencilBuffer?33306:36096;e.depthBuffer&&c.push(h),e.ignoreDepthForMultisampleCopy||(e.depthBuffer&&(mask|=256),e.stencilBuffer&&(mask|=1024));const d=r.get(e);n.bindFramebuffer(36008,d.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,d.__webglFramebuffer),e.ignoreDepthForMultisampleCopy&&(t.invalidateFramebuffer(36008,[h]),t.invalidateFramebuffer(36009,[h])),t.blitFramebuffer(0,0,o,l,0,0,o,l,mask,9728),t.invalidateFramebuffer(36008,c),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,d.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.setupDepthRenderbuffer=k,this.setupFrameBufferTexture=H,this.safeSetTexture2D=function(t,slot){t&&t.isWebGLRenderTarget&&(!1===W&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),W=!0),t=t.texture),I(t,slot)},this.safeSetTextureCube=function(t,slot){t&&t.isWebGLCubeRenderTarget&&(!1===j&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),j=!0),t=t.texture),N(t,slot)}}function Ul(t,e,n){const r=n.isWebGL2;return{convert:function(p){let t;if(p===Nt)return 5121;if(p===kt)return 32819;if(p===Vt)return 32820;if(p===Wt)return 33635;if(p===zt)return 5120;if(p===Bt)return 5122;if(p===Ft)return 5123;if(p===Ot)return 5124;if(p===Ut)return 5125;if(p===Ht)return 5126;if(p===Gt)return r?5131:(t=e.get("OES_texture_half_float"),null!==t?t.HALF_FLOAT_OES:null);if(p===qt)return 6406;if(p===Xt)return 6407;if(p===Jt)return 6408;if(p===Yt)return 6409;if(p===Zt)return 6410;if(p===Kt)return 6402;if(p===$t)return 34041;if(p===te)return 6403;if(p===ee)return 36244;if(p===ne)return 33319;if(p===ie)return 33320;if(p===re)return 36248;if(p===se)return 36249;if(p===ae||p===oe||p===le||p===ce){if(t=e.get("WEBGL_compressed_texture_s3tc"),null===t)return null;if(p===ae)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===oe)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===le)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===ce)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(p===ue||p===he||p===de||p===pe){if(t=e.get("WEBGL_compressed_texture_pvrtc"),null===t)return null;if(p===ue)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===he)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===de)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===pe)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(p===fe)return t=e.get("WEBGL_compressed_texture_etc1"),null!==t?t.COMPRESSED_RGB_ETC1_WEBGL:null;if((p===me||p===ge)&&(t=e.get("WEBGL_compressed_texture_etc"),null!==t)){if(p===me)return t.COMPRESSED_RGB8_ETC2;if(p===ge)return t.COMPRESSED_RGBA8_ETC2_EAC}return p===ve||p===ye||p===xe||p===_e||p===Me||p===be||p===we||p===Se||p===Te||p===Ee||p===Ae||p===Le||p===Re||p===Ce||p===De||p===Ie||p===Ne||p===ze||p===Be||p===Fe||p===Oe||p===Ue||p===He||p===Ge||p===ke||p===Ve||p===We||p===je?(t=e.get("WEBGL_compressed_texture_astc"),null!==t?p:null):p===Pe?(t=e.get("EXT_texture_compression_bptc"),null!==t?p:null):p===jt?r?34042:(t=e.get("WEBGL_depth_texture"),null!==t?t.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class Hl extends Gs{constructor(t=[]){super(),this.cameras=t}}Hl.prototype.isArrayCamera=!0;class Gl extends Ar{constructor(){super(),this.type="Group"}}Gl.prototype.isGroup=!0;const kl={type:"move"};class Vl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Gl,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Gl,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new bi,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new bi),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Gl,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new bi,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new bi),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,o=null,l=null;const c=this._targetRay,h=this._grip,d=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==c&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(kl))),d&&t.hand){l=!0;for(const r of t.hand.values()){const t=e.getJointPose(r,n);if(void 0===d.joints[r.jointName]){const t=new Gl;t.matrixAutoUpdate=!1,t.visible=!1,d.joints[r.jointName]=t,d.add(t)}const o=d.joints[r.jointName];null!==t&&(o.matrix.fromArray(t.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.jointRadius=t.radius),o.visible=null!==t}const r=d.joints["index-finger-tip"],o=d.joints["thumb-tip"],c=r.position.distanceTo(o.position),h=.02,f=.005;d.inputState.pinching&&c>h+f?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!d.inputState.pinching&&c<=h-f&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==h&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),null!==o&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));return null!==c&&(c.visible=null!==r),null!==h&&(h.visible=null!==o),null!==d&&(d.visible=null!==l),this}}class Wl extends mi{constructor(t,e,n,r,o,l,c,h,d,f){if((f=void 0!==f?f:Kt)!==Kt&&f!==$t)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&f===Kt&&(n=Ft),void 0===n&&f===$t&&(n=jt),super(null,r,o,l,c,h,f,n,d),this.image={width:t,height:e},this.magFilter=void 0!==c?c:St,this.minFilter=void 0!==h?h:St,this.flipY=!1,this.generateMipmaps=!1}}Wl.prototype.isDepthTexture=!0;class jl extends jn{constructor(t,e){super();const n=this;let r=null,o=1,l=null,c="local-floor";const h=t.extensions.has("WEBGL_multisampled_render_to_texture");let d=null,f=null,m=null,v=null,y=!1,x=null;const _=e.getContextAttributes();let M=null,w=null;const S=[],T=new Map,E=new Gs;E.layers.enable(1),E.viewport=new vi;const A=new Gs;A.layers.enable(2),A.viewport=new vi;const L=[E,A],R=new Hl;R.layers.enable(1),R.layers.enable(2);let C=null,P=null;function D(t){const e=T.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function I(){T.forEach((function(t,e){t.disconnect(e)})),T.clear(),C=null,P=null,t.setRenderTarget(M),v=null,m=null,f=null,r=null,w=null,U.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function N(t){const e=r.inputSources;for(let i=0;i<S.length;i++)T.set(e[i],S[i]);for(let i=0;i<t.removed.length;i++){const e=t.removed[i],n=T.get(e);n&&(n.dispatchEvent({type:"disconnected",data:e}),T.delete(e))}for(let i=0;i<t.added.length;i++){const e=t.added[i],n=T.get(e);n&&n.dispatchEvent({type:"connected",data:e})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=S[t];return void 0===e&&(e=new Vl,S[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=S[t];return void 0===e&&(e=new Vl,S[t]=e),e.getGripSpace()},this.getHand=function(t){let e=S[t];return void 0===e&&(e=new Vl,S[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){c=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l},this.getBaseLayer=function(){return null!==m?m:v},this.getBinding=function(){return f},this.getFrame=function(){return x},this.getSession=function(){return r},this.setSession=async function(d){if(r=d,null!==r){if(M=t.getRenderTarget(),r.addEventListener("select",D),r.addEventListener("selectstart",D),r.addEventListener("selectend",D),r.addEventListener("squeeze",D),r.addEventListener("squeezestart",D),r.addEventListener("squeezeend",D),r.addEventListener("end",I),r.addEventListener("inputsourceschange",N),!0!==_.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers||!1===t.capabilities.isWebGL2){const t={antialias:void 0!==r.renderState.layers||_.antialias,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(r,e,t),r.updateRenderState({baseLayer:v}),w=new yi(v.framebufferWidth,v.framebufferHeight)}else{y=_.antialias;let t=null,n=null,l=null;_.depth&&(l=_.stencil?35056:33189,t=_.stencil?$t:Kt,n=_.stencil?jt:Ft);const c={colorFormat:_.alpha||y?32856:32849,depthFormat:l,scaleFactor:o};f=new XRWebGLBinding(r,e),m=f.createProjectionLayer(c),r.updateRenderState({layers:[m]}),w=y?new _i(m.textureWidth,m.textureHeight,{format:Jt,type:Nt,depthTexture:new Wl(m.textureWidth,m.textureHeight,n,void 0,void 0,void 0,void 0,void 0,void 0,t),stencilBuffer:_.stencil,ignoreDepth:m.ignoreDepthValues,useRenderToTexture:h}):new yi(m.textureWidth,m.textureHeight,{format:_.alpha?Jt:Xt,type:Nt,depthTexture:new Wl(m.textureWidth,m.textureHeight,n,void 0,void 0,void 0,void 0,void 0,void 0,t),stencilBuffer:_.stencil,ignoreDepth:m.ignoreDepthValues})}this.setFoveation(0),l=await r.requestReferenceSpace(c),U.setContext(r),U.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const z=new bi,B=new bi;function F(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;R.near=A.near=E.near=t.near,R.far=A.far=E.far=t.far,C===R.near&&P===R.far||(r.updateRenderState({depthNear:R.near,depthFar:R.far}),C=R.near,P=R.far);const e=t.parent,n=R.cameras;F(R,e);for(let i=0;i<n.length;i++)F(n[i],e);R.matrixWorld.decompose(R.position,R.quaternion,R.scale),t.position.copy(R.position),t.quaternion.copy(R.quaternion),t.scale.copy(R.scale),t.matrix.copy(R.matrix),t.matrixWorld.copy(R.matrixWorld);const o=t.children;for(let i=0,t=o.length;i<t;i++)o[i].updateMatrixWorld(!0);2===n.length?function(t,e,n){z.setFromMatrixPosition(e.matrixWorld),B.setFromMatrixPosition(n.matrixWorld);const r=z.distanceTo(B),o=e.projectionMatrix.elements,l=n.projectionMatrix.elements,c=o[14]/(o[10]-1),h=o[14]/(o[10]+1),d=(o[9]+1)/o[5],f=(o[9]-1)/o[5],m=(o[8]-1)/o[0],v=(l[8]+1)/l[0],y=c*m,x=c*v,_=r/(-m+v),M=_*-m;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(M),t.translateZ(_),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const w=c+_,S=h+_,T=y-M,E=x+(r-M),A=d*h/S*w,L=f*h/S*w;t.projectionMatrix.makePerspective(T,E,A,L,w,S)}(R,E,A):R.projectionMatrix.copy(E.projectionMatrix)},this.getCamera=function(){return R},this.getFoveation=function(){return null!==m?m.fixedFoveation:null!==v?v.fixedFoveation:void 0},this.setFoveation=function(t){null!==m&&(m.fixedFoveation=t),null!==v&&void 0!==v.fixedFoveation&&(v.fixedFoveation=t)};let O=null;const U=new $s;U.setAnimationLoop((function(time,e){if(d=e.getViewerPose(l),x=e,null!==d){const e=d.views;null!==v&&(t.setRenderTargetFramebuffer(w,v.framebuffer),t.setRenderTarget(w));let n=!1;e.length!==R.cameras.length&&(R.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const view=e[i];let r=null;if(null!==v)r=v.getViewport(view);else{const e=f.getViewSubImage(m,view);r=e.viewport,0===i&&(t.setRenderTargetTextures(w,e.colorTexture,m.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(w))}const o=L[i];o.matrix.fromArray(view.transform.matrix),o.projectionMatrix.fromArray(view.projectionMatrix),o.viewport.set(r.x,r.y,r.width,r.height),0===i&&R.matrix.copy(o.matrix),!0===n&&R.cameras.push(o)}}const n=r.inputSources;for(let i=0;i<S.length;i++){const t=S[i],r=n[i];t.update(r,e,l)}O&&O(time,e),x=null})),this.setAnimationLoop=function(t){O=t},this.dispose=function(){}}}function ql(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap),n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);const r=t.get(n).envMap;let o,l;r&&(e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,e.reflectivity.value=n.reflectivity,e.ior.value=n.ior,e.refractionRatio.value=n.refractionRatio),n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?o=n.map:n.specularMap?o=n.specularMap:n.displacementMap?o=n.displacementMap:n.normalMap?o=n.normalMap:n.bumpMap?o=n.bumpMap:n.roughnessMap?o=n.roughnessMap:n.metalnessMap?o=n.metalnessMap:n.alphaMap?o=n.alphaMap:n.emissiveMap?o=n.emissiveMap:n.clearcoatMap?o=n.clearcoatMap:n.clearcoatNormalMap?o=n.clearcoatNormalMap:n.clearcoatRoughnessMap?o=n.clearcoatRoughnessMap:n.specularIntensityMap?o=n.specularIntensityMap:n.specularColorMap?o=n.specularColorMap:n.transmissionMap?o=n.transmissionMap:n.thicknessMap?o=n.thicknessMap:n.sheenColorMap?o=n.sheenColorMap:n.sheenRoughnessMap&&(o=n.sheenRoughnessMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uvTransform.value.copy(o.matrix)),n.aoMap?l=n.aoMap:n.lightMap&&(l=n.lightMap),void 0!==l&&(l.isWebGLRenderTarget&&(l=l.texture),!0===l.matrixAutoUpdate&&l.updateMatrix(),e.uv2Transform.value.copy(l.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===M&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===M&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,o,l,c){r.isMeshBasicMaterial?e(t,r):r.isMeshLambertMaterial?(e(t,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,r)):r.isMeshToonMaterial?(e(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===M&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===M&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshPhongMaterial?(e(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===M&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===M&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshStandardMaterial?(e(t,r),r.isMeshPhysicalMaterial?function(t,e,r){n(t,e),t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===M&&t.clearcoatNormalScale.value.negate()));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=r.texture,t.transmissionSamplerSize.value.set(r.width,r.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap);e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,r,c):n(t,r)):r.isMeshMatcapMaterial?(e(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===M&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===M&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDepthMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDistanceMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?(e(t,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===M&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===M&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let o;e.map?o=e.map:e.alphaMap&&(o=e.alphaMap);void 0!==o&&(!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uvTransform.value.copy(o.matrix))}(t,r,o,l):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Xl(t={}){const e=void 0!==t.canvas?t.canvas:function(){const canvas=ui("canvas");return canvas.style.display="block",canvas}(),n=void 0!==t.context?t.context:null,o=void 0!==t.alpha&&t.alpha,l=void 0===t.depth||t.depth,c=void 0===t.stencil||t.stencil,h=void 0!==t.antialias&&t.antialias,d=void 0===t.premultipliedAlpha||t.premultipliedAlpha,f=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,m=void 0!==t.powerPreference?t.powerPreference:"default",v=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let y=null,x=null;const S=[],T=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=on,this.physicallyCorrectLights=!1,this.toneMapping=ot,this.toneMappingExposure=1;const E=this;let A=!1,L=0,R=0,C=null,P=-1,D=null;const I=new vi,N=new vi;let z=null,B=e.width,F=e.height,O=1,U=null,H=null;const G=new vi(0,0,B,F),k=new vi(0,0,B,F);let V=!1;const W=[],j=new Ks;let X=!1,J=!1,Y=null;const Z=new $i,Q=new bi,K={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function $(){return null===C?O:1}let tt,et,nt,it,st,at,lt,ct,ut,ht,pt,ft,mt,gt,vt,yt,xt,_t,Mt,wt,Tt,Et,At,Lt=n;function Rt(t,n){for(let i=0;i<t.length;i++){const r=t[i],o=e.getContext(r,n);if(null!==o)return o}return null}try{const t={alpha:o,depth:l,stencil:c,antialias:h,premultipliedAlpha:d,preserveDrawingBuffer:f,powerPreference:m,failIfMajorPerformanceCaveat:v};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${r}`),e.addEventListener("webglcontextlost",It,!1),e.addEventListener("webglcontextrestored",zt,!1),null===Lt){const e=["webgl2","webgl","experimental-webgl"];if(!0===E.isWebGL1Renderer&&e.shift(),Lt=Rt(e,t),null===Lt)throw Rt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Lt.getShaderPrecisionFormat&&(Lt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function Ct(){tt=new Fa(Lt),et=new la(Lt,tt,t),tt.init(et),Et=new Ul(Lt,tt,et),nt=new Fl(Lt,tt,et),W[0]=1029,it=new Ha(Lt),st=new wl,at=new Ol(Lt,tt,nt,st,et,Et,it),lt=new ua(E),ct=new Ba(E),ut=new ta(Lt,et),At=new aa(Lt,tt,ut,et),ht=new Oa(Lt,ut,it,At),pt=new qa(Lt,ht,ut,it),Mt=new ja(Lt,et,at),yt=new ca(st),ft=new bl(E,lt,ct,tt,et,At,yt),mt=new ql(st),gt=new Al(st),vt=new Il(tt,et),_t=new sa(E,lt,nt,pt,d),xt=new Bl(E,pt,et),wt=new oa(Lt,tt,it,et),Tt=new Ua(Lt,tt,it,et),it.programs=ft.programs,E.capabilities=et,E.extensions=tt,E.properties=st,E.renderLists=gt,E.shadowMap=xt,E.state=nt,E.info=it}Ct();const Pt=new jl(E,Lt);function It(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function zt(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const t=it.autoReset,e=xt.enabled,n=xt.autoUpdate,r=xt.needsUpdate,o=xt.type;Ct(),it.autoReset=t,xt.enabled=e,xt.autoUpdate=n,xt.needsUpdate=r,xt.type=o}function Bt(t){const e=t.target;e.removeEventListener("dispose",Bt),function(t){(function(t){const e=st.get(t).programs;void 0!==e&&e.forEach((function(t){ft.releaseProgram(t)}))})(t),st.remove(t)}(e)}this.xr=Pt,this.getContext=function(){return Lt},this.getContextAttributes=function(){return Lt.getContextAttributes()},this.forceContextLoss=function(){const t=tt.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=tt.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return O},this.setPixelRatio=function(t){void 0!==t&&(O=t,this.setSize(B,F,!1))},this.getSize=function(t){return t.set(B,F)},this.setSize=function(t,n,r){Pt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(B=t,F=n,e.width=Math.floor(t*O),e.height=Math.floor(n*O),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(B*O,F*O).floor()},this.setDrawingBufferSize=function(t,n,r){B=t,F=n,O=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(I)},this.getViewport=function(t){return t.copy(G)},this.setViewport=function(t,e,n,r){t.isVector4?G.set(t.x,t.y,t.z,t.w):G.set(t,e,n,r),nt.viewport(I.copy(G).multiplyScalar(O).floor())},this.getScissor=function(t){return t.copy(k)},this.setScissor=function(t,e,n,r){t.isVector4?k.set(t.x,t.y,t.z,t.w):k.set(t,e,n,r),nt.scissor(N.copy(k).multiplyScalar(O).floor())},this.getScissorTest=function(){return V},this.setScissorTest=function(t){nt.setScissorTest(V=t)},this.setOpaqueSort=function(t){U=t},this.setTransparentSort=function(t){H=t},this.getClearColor=function(t){return t.copy(_t.getClearColor())},this.setClearColor=function(){_t.setClearColor.apply(_t,arguments)},this.getClearAlpha=function(){return _t.getClearAlpha()},this.setClearAlpha=function(){_t.setClearAlpha.apply(_t,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),Lt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",It,!1),e.removeEventListener("webglcontextrestored",zt,!1),gt.dispose(),vt.dispose(),st.dispose(),lt.dispose(),ct.dispose(),pt.dispose(),At.dispose(),Pt.dispose(),Pt.removeEventListener("sessionstart",Ot),Pt.removeEventListener("sessionend",Ut),Y&&(Y.dispose(),Y=null),kt.stop()},this.renderBufferDirect=function(t,e,n,r,object,o){null===e&&(e=K);const l=object.isMesh&&object.matrixWorld.determinant()<0,c=function(t,e,n,r,object){!0!==e.isScene&&(e=K);at.resetTextureUnits();const o=e.fog,l=r.isMeshStandardMaterial?e.environment:null,c=null===C?E.outputEncoding:C.texture.encoding,h=(r.isMeshStandardMaterial?ct:lt).get(r.envMap||l),d=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,f=!!r.normalMap&&!!n.attributes.tangent,m=!!n.morphAttributes.position,v=!!n.morphAttributes.normal,y=n.morphAttributes.position?n.morphAttributes.position.length:0,_=st.get(r),M=x.state.lights;if(!0===X&&(!0===J||t!==D)){const e=t===D&&r.id===P;yt.setState(r,t,e)}let w=!1;r.version===_.__version?_.needsLights&&_.lightsStateVersion!==M.state.version||_.outputEncoding!==c||object.isInstancedMesh&&!1===_.instancing?w=!0:object.isInstancedMesh||!0!==_.instancing?object.isSkinnedMesh&&!1===_.skinning?w=!0:object.isSkinnedMesh||!0!==_.skinning?_.envMap!==h||r.fog&&_.fog!==o?w=!0:void 0===_.numClippingPlanes||_.numClippingPlanes===yt.numPlanes&&_.numIntersection===yt.numIntersection?(_.vertexAlphas!==d||_.vertexTangents!==f||_.morphTargets!==m||_.morphNormals!==v||!0===et.isWebGL2&&_.morphTargetsCount!==y)&&(w=!0):w=!0:w=!0:w=!0:(w=!0,_.__version=r.version);let S=_.currentProgram;!0===w&&(S=Xt(r,e,object));let T=!1,A=!1,L=!1;const R=S.getUniforms(),I=_.uniforms;nt.useProgram(S.program)&&(T=!0,A=!0,L=!0);r.id!==P&&(P=r.id,A=!0);if(T||D!==t){if(R.setValue(Lt,"projectionMatrix",t.projectionMatrix),et.logarithmicDepthBuffer&&R.setValue(Lt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),D!==t&&(D=t,A=!0,L=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const e=R.map.cameraPosition;void 0!==e&&e.setValue(Lt,Q.setFromMatrixPosition(t.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&R.setValue(Lt,"isOrthographic",!0===t.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||object.isSkinnedMesh)&&R.setValue(Lt,"viewMatrix",t.matrixWorldInverse)}if(object.isSkinnedMesh){R.setOptional(Lt,object,"bindMatrix"),R.setOptional(Lt,object,"bindMatrixInverse");const t=object.skeleton;t&&(et.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),R.setValue(Lt,"boneTexture",t.boneTexture,at),R.setValue(Lt,"boneTextureSize",t.boneTextureSize)):R.setOptional(Lt,t,"boneMatrices"))}!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||Mt.update(object,n,r,S);(A||_.receiveShadow!==object.receiveShadow)&&(_.receiveShadow=object.receiveShadow,R.setValue(Lt,"receiveShadow",object.receiveShadow));A&&(R.setValue(Lt,"toneMappingExposure",E.toneMappingExposure),_.needsLights&&(z=L,(N=I).ambientLightColor.needsUpdate=z,N.lightProbe.needsUpdate=z,N.directionalLights.needsUpdate=z,N.directionalLightShadows.needsUpdate=z,N.pointLights.needsUpdate=z,N.pointLightShadows.needsUpdate=z,N.spotLights.needsUpdate=z,N.spotLightShadows.needsUpdate=z,N.rectAreaLights.needsUpdate=z,N.hemisphereLights.needsUpdate=z),o&&r.fog&&mt.refreshFogUniforms(I,o),mt.refreshMaterialUniforms(I,r,O,F,Y),Ko.upload(Lt,_.uniformsList,I,at));var N,z;r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Ko.upload(Lt,_.uniformsList,I,at),r.uniformsNeedUpdate=!1);r.isSpriteMaterial&&R.setValue(Lt,"center",object.center);return R.setValue(Lt,"modelViewMatrix",object.modelViewMatrix),R.setValue(Lt,"normalMatrix",object.normalMatrix),R.setValue(Lt,"modelMatrix",object.matrixWorld),S}(t,e,n,r,object);nt.setMaterial(r,l);let h=n.index;const d=n.attributes.position;if(null===h){if(void 0===d||0===d.count)return}else if(0===h.count)return;let f,m=1;!0===r.wireframe&&(h=ht.getWireframeAttribute(n),m=2),At.setup(object,r,c,n,h);let v=wt;null!==h&&(f=ut.get(h),v=Tt,v.setIndex(f));const y=null!==h?h.count:d.count,_=n.drawRange.start*m,M=n.drawRange.count*m,w=null!==o?o.start*m:0,S=null!==o?o.count*m:1/0,T=Math.max(_,w),A=Math.min(y,_+M,w+S)-1,L=Math.max(0,A-T+1);if(0!==L){if(object.isMesh)!0===r.wireframe?(nt.setLineWidth(r.wireframeLinewidth*$()),v.setMode(1)):v.setMode(4);else if(object.isLine){let t=r.linewidth;void 0===t&&(t=1),nt.setLineWidth(t*$()),object.isLineSegments?v.setMode(1):object.isLineLoop?v.setMode(2):v.setMode(3)}else object.isPoints?v.setMode(0):object.isSprite&&v.setMode(4);if(object.isInstancedMesh)v.renderInstances(T,L,object.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);v.renderInstances(T,L,t)}else v.render(T,L)}},this.compile=function(t,e){x=vt.get(t),x.init(),T.push(x),t.traverseVisible((function(object){object.isLight&&object.layers.test(e.layers)&&(x.pushLight(object),object.castShadow&&x.pushShadow(object))})),x.setupLights(E.physicallyCorrectLights),t.traverse((function(object){const e=object.material;if(e)if(Array.isArray(e))for(let i=0;i<e.length;i++){Xt(e[i],t,object)}else Xt(e,t,object)})),T.pop(),x=null};let Ft=null;function Ot(){kt.stop()}function Ut(){kt.start()}const kt=new $s;function Vt(object,t,e,n){if(!1===object.visible)return;if(object.layers.test(t.layers))if(object.isGroup)e=object.renderOrder;else if(object.isLOD)!0===object.autoUpdate&&object.update(t);else if(object.isLight)x.pushLight(object),object.castShadow&&x.pushShadow(object);else if(object.isSprite){if(!object.frustumCulled||j.intersectsSprite(object)){n&&Q.setFromMatrixPosition(object.matrixWorld).applyMatrix4(Z);const t=pt.update(object),r=object.material;r.visible&&y.push(object,t,r,e,Q.z,null)}}else if((object.isMesh||object.isLine||object.isPoints)&&(object.isSkinnedMesh&&object.skeleton.frame!==it.render.frame&&(object.skeleton.update(),object.skeleton.frame=it.render.frame),!object.frustumCulled||j.intersectsObject(object))){n&&Q.setFromMatrixPosition(object.matrixWorld).applyMatrix4(Z);const t=pt.update(object),r=object.material;if(Array.isArray(r)){const n=t.groups;for(let i=0,o=n.length;i<o;i++){const o=n[i],l=r[o.materialIndex];l&&l.visible&&y.push(object,t,l,e,Q.z,o)}}else r.visible&&y.push(object,t,r,e,Q.z,null)}const r=object.children;for(let i=0,o=r.length;i<o;i++)Vt(r[i],t,e,n)}function Wt(t,e,n,r){const o=t.opaque,l=t.transmissive,c=t.transparent;x.setupLightsView(n),l.length>0&&function(t,e,n){if(null===Y){const t=!0===h&&!0===et.isWebGL2;Y=new(t?_i:yi)(1024,1024,{generateMipmaps:!0,type:null!==Et.convert(Gt)?Gt:Nt,minFilter:Dt,magFilter:St,wrapS:bt,wrapT:bt,useRenderToTexture:tt.has("WEBGL_multisampled_render_to_texture")})}const r=E.getRenderTarget();E.setRenderTarget(Y),E.clear();const o=E.toneMapping;E.toneMapping=ot,jt(t,e,n),E.toneMapping=o,at.updateMultisampleRenderTarget(Y),at.updateRenderTargetMipmap(Y),E.setRenderTarget(r)}(o,e,n),r&&nt.viewport(I.copy(r)),o.length>0&&jt(o,e,n),l.length>0&&jt(l,e,n),c.length>0&&jt(c,e,n)}function jt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,o=t.length;i<o;i++){const o=t[i],object=o.object,l=o.geometry,c=null===r?o.material:r,h=o.group;object.layers.test(n.layers)&&qt(object,e,n,l,c,h)}}function qt(object,t,e,n,r,o){object.onBeforeRender(E,t,e,n,r,o),object.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,object.matrixWorld),object.normalMatrix.getNormalMatrix(object.modelViewMatrix),r.onBeforeRender(E,t,e,n,object,o),!0===r.transparent&&r.side===w?(r.side=M,r.needsUpdate=!0,E.renderBufferDirect(e,t,n,r,object,o),r.side=_,r.needsUpdate=!0,E.renderBufferDirect(e,t,n,r,object,o),r.side=w):E.renderBufferDirect(e,t,n,r,object,o),object.onAfterRender(E,t,e,n,r,o)}function Xt(t,e,object){!0!==e.isScene&&(e=K);const n=st.get(t),r=x.state.lights,o=x.state.shadowsArray,l=r.state.version,c=ft.getParameters(t,r.state,o,e,object),h=ft.getProgramCacheKey(c);let d=n.programs;n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=(t.isMeshStandardMaterial?ct:lt).get(t.envMap||n.environment),void 0===d&&(t.addEventListener("dispose",Bt),d=new Map,n.programs=d);let f=d.get(h);if(void 0!==f){if(n.currentProgram===f&&n.lightsStateVersion===l)return Yt(t,c),f}else c.uniforms=ft.getUniforms(t),t.onBuild(object,c,E),t.onBeforeCompile(c,E),f=ft.acquireProgram(c,h),d.set(h,f),n.uniforms=c.uniforms;const m=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(m.clippingPlanes=yt.uniform),Yt(t,c),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=l,n.needsLights&&(m.ambientLightColor.value=r.state.ambient,m.lightProbe.value=r.state.probe,m.directionalLights.value=r.state.directional,m.directionalLightShadows.value=r.state.directionalShadow,m.spotLights.value=r.state.spot,m.spotLightShadows.value=r.state.spotShadow,m.rectAreaLights.value=r.state.rectArea,m.ltc_1.value=r.state.rectAreaLTC1,m.ltc_2.value=r.state.rectAreaLTC2,m.pointLights.value=r.state.point,m.pointLightShadows.value=r.state.pointShadow,m.hemisphereLights.value=r.state.hemi,m.directionalShadowMap.value=r.state.directionalShadowMap,m.directionalShadowMatrix.value=r.state.directionalShadowMatrix,m.spotShadowMap.value=r.state.spotShadowMap,m.spotShadowMatrix.value=r.state.spotShadowMatrix,m.pointShadowMap.value=r.state.pointShadowMap,m.pointShadowMatrix.value=r.state.pointShadowMatrix);const v=f.getUniforms(),y=Ko.seqWithValue(v.seq,m);return n.currentProgram=f,n.uniformsList=y,f}function Yt(t,e){const n=st.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents}kt.setAnimationLoop((function(time){Ft&&Ft(time)})),"undefined"!=typeof window&&kt.setContext(window),this.setAnimationLoop=function(t){Ft=t,Pt.setAnimationLoop(t),null===t?kt.stop():kt.start()},Pt.addEventListener("sessionstart",Ot),Pt.addEventListener("sessionend",Ut),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===A)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===Pt.enabled&&!0===Pt.isPresenting&&(!0===Pt.cameraAutoUpdate&&Pt.updateCamera(e),e=Pt.getCamera()),!0===t.isScene&&t.onBeforeRender(E,t,e,C),x=vt.get(t,T.length),x.init(),T.push(x),Z.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),j.setFromProjectionMatrix(Z),J=this.localClippingEnabled,X=yt.init(this.clippingPlanes,J,e),y=gt.get(t,S.length),y.init(),S.push(y),Vt(t,e,0,E.sortObjects),y.finish(),!0===E.sortObjects&&y.sort(U,H),!0===X&&yt.beginShadows();const n=x.state.shadowsArray;if(xt.render(n,t,e),!0===X&&yt.endShadows(),!0===this.info.autoReset&&this.info.reset(),_t.render(y,t),x.setupLights(E.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let i=0,e=n.length;i<e;i++){const e=n[i];Wt(y,t,e,e.viewport)}}else Wt(y,t,e);null!==C&&(at.updateMultisampleRenderTarget(C),at.updateRenderTargetMipmap(C)),!0===t.isScene&&t.onAfterRender(E,t,e),nt.buffers.depth.setTest(!0),nt.buffers.depth.setMask(!0),nt.buffers.color.setMask(!0),nt.setPolygonOffset(!1),At.resetDefaultState(),P=-1,D=null,T.pop(),x=T.length>0?T[T.length-1]:null,S.pop(),y=S.length>0?S[S.length-1]:null},this.getActiveCubeFace=function(){return L},this.getActiveMipmapLevel=function(){return R},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(t,e,n){st.get(t.texture).__webglTexture=e,st.get(t.depthTexture).__webglTexture=n;const r=st.get(t);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||t.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),t.useRenderToTexture=!1,t.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(t,e){const n=st.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){C=t,L=e,R=n;let r=!0;if(t){const e=st.get(t);void 0!==e.__useDefaultFramebuffer?(nt.bindFramebuffer(36160,null),r=!1):void 0===e.__webglFramebuffer?at.setupRenderTarget(t):e.__hasExternalTextures&&at.rebindTextures(t,st.get(t.texture).__webglTexture,st.get(t.depthTexture).__webglTexture)}let o=null,l=!1,c=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(c=!0);const r=st.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(o=r[e],l=!0):o=t.useRenderbuffer?st.get(t).__webglMultisampledFramebuffer:r,I.copy(t.viewport),N.copy(t.scissor),z=t.scissorTest}else I.copy(G).multiplyScalar(O).floor(),N.copy(k).multiplyScalar(O).floor(),z=V;if(nt.bindFramebuffer(36160,o)&&et.drawBuffers&&r){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const n=t.texture;if(W.length!==n.length||36064!==W[0]){for(let i=0,t=n.length;i<t;i++)W[i]=36064+i;W.length=n.length,e=!0}}else 1===W.length&&36064===W[0]||(W[0]=36064,W.length=1,e=!0);else 1===W.length&&1029===W[0]||(W[0]=1029,W.length=1,e=!0);e&&(et.isWebGL2?Lt.drawBuffers(W):tt.get("WEBGL_draw_buffers").drawBuffersWEBGL(W))}if(nt.viewport(I),nt.scissor(N),nt.setScissorTest(z),l){const r=st.get(t.texture);Lt.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(c){const r=st.get(t.texture),o=e||0;Lt.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,o)}P=-1},this.readRenderTargetPixels=function(t,e,n,r,o,l,c){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let h=st.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==c&&(h=h[c]),h){nt.bindFramebuffer(36160,h);try{const c=t.texture,h=c.format,d=c.type;if(h!==Jt&&Et.convert(h)!==Lt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const f=d===Gt&&(tt.has("EXT_color_buffer_half_float")||et.isWebGL2&&tt.has("EXT_color_buffer_float"));if(!(d===Nt||Et.convert(d)===Lt.getParameter(35738)||d===Ht&&(et.isWebGL2||tt.has("OES_texture_float")||tt.has("WEBGL_color_buffer_float"))||f))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===Lt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-o&&Lt.readPixels(e,n,r,o,Et.convert(h),Et.convert(d),l):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==C?st.get(C).__webglFramebuffer:null;nt.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const r=Math.pow(2,-n),o=Math.floor(e.image.width*r),l=Math.floor(e.image.height*r);let c=Et.convert(e.format);et.isWebGL2&&(6407===c&&(c=32849),6408===c&&(c=32856)),at.setTexture2D(e,0),Lt.copyTexImage2D(3553,n,c,t.x,t.y,o,l,0),nt.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const o=e.image.width,l=e.image.height,c=Et.convert(n.format),h=Et.convert(n.type);at.setTexture2D(n,0),Lt.pixelStorei(37440,n.flipY),Lt.pixelStorei(37441,n.premultiplyAlpha),Lt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?Lt.texSubImage2D(3553,r,t.x,t.y,o,l,c,h,e.image.data):e.isCompressedTexture?Lt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,c,e.mipmaps[0].data):Lt.texSubImage2D(3553,r,t.x,t.y,c,h,e.image),0===r&&n.generateMipmaps&&Lt.generateMipmap(3553),nt.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,o=0){if(E.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const l=t.max.x-t.min.x+1,c=t.max.y-t.min.y+1,h=t.max.z-t.min.z+1,d=Et.convert(r.format),f=Et.convert(r.type);let m;if(r.isDataTexture3D)at.setTexture3D(r,0),m=32879;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");at.setTexture2DArray(r,0),m=35866}Lt.pixelStorei(37440,r.flipY),Lt.pixelStorei(37441,r.premultiplyAlpha),Lt.pixelStorei(3317,r.unpackAlignment);const v=Lt.getParameter(3314),y=Lt.getParameter(32878),x=Lt.getParameter(3316),_=Lt.getParameter(3315),M=Lt.getParameter(32877),image=n.isCompressedTexture?n.mipmaps[0]:n.image;Lt.pixelStorei(3314,image.width),Lt.pixelStorei(32878,image.height),Lt.pixelStorei(3316,t.min.x),Lt.pixelStorei(3315,t.min.y),Lt.pixelStorei(32877,t.min.z),n.isDataTexture||n.isDataTexture3D?Lt.texSubImage3D(m,o,e.x,e.y,e.z,l,c,h,d,f,image.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Lt.compressedTexSubImage3D(m,o,e.x,e.y,e.z,l,c,h,d,image.data)):Lt.texSubImage3D(m,o,e.x,e.y,e.z,l,c,h,d,f,image),Lt.pixelStorei(3314,v),Lt.pixelStorei(32878,y),Lt.pixelStorei(3316,x),Lt.pixelStorei(3315,_),Lt.pixelStorei(32877,M),0===o&&r.generateMipmaps&&Lt.generateMipmap(m),nt.unbindTexture()},this.initTexture=function(t){at.setTexture2D(t,0),nt.unbindTexture()},this.resetState=function(){L=0,R=0,C=null,nt.reset(),At.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Xl.prototype.isWebGLRenderer=!0;class Jl extends Xl{}Jl.prototype.isWebGL1Renderer=!0;class Yl{constructor(t,e=25e-5){this.name="",this.color=new Xr(t),this.density=e}clone(){return new Yl(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Yl.prototype.isFogExp2=!0;class Zl{constructor(t,e=1,n=1e3){this.name="",this.color=new Xr(t),this.near=e,this.far=n}clone(){return new Zl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Zl.prototype.isFog=!0;class Ql extends Ar{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(source,t){return super.copy(source,t),null!==source.background&&(this.background=source.background.clone()),null!==source.environment&&(this.environment=source.environment.clone()),null!==source.fog&&(this.fog=source.fog.clone()),null!==source.overrideMaterial&&(this.overrideMaterial=source.overrideMaterial.clone()),this.autoUpdate=source.autoUpdate,this.matrixAutoUpdate=source.matrixAutoUpdate,this}toJSON(meta){const data=super.toJSON(meta);return null!==this.fog&&(data.object.fog=this.fog.toJSON()),data}}Ql.prototype.isScene=!0;class Kl{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Nn,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Zn()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(source){return this.array=new source.array.constructor(source.array),this.count=source.count,this.stride=source.stride,this.usage=source.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(data){void 0===data.arrayBuffers&&(data.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Zn()),void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]),e=new this.constructor(t,this.stride);return e.setUsage(this.usage),e}onUpload(t){return this.onUploadCallback=t,this}toJSON(data){return void 0===data.arrayBuffers&&(data.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Zn()),void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Kl.prototype.isInterleavedBuffer=!0;const $l=new bi;class tc{constructor(t,e,n,r=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let i=0,e=this.data.count;i<e;i++)$l.x=this.getX(i),$l.y=this.getY(i),$l.z=this.getZ(i),$l.applyMatrix4(t),this.setXYZ(i,$l.x,$l.y,$l.z);return this}applyNormalMatrix(t){for(let i=0,e=this.count;i<e;i++)$l.x=this.getX(i),$l.y=this.getY(i),$l.z=this.getZ(i),$l.applyNormalMatrix(t),this.setXYZ(i,$l.x,$l.y,$l.z);return this}transformDirection(t){for(let i=0,e=this.count;i<e;i++)$l.x=this.getX(i),$l.y=this.getY(i),$l.z=this.getZ(i),$l.transformDirection(t),this.setXYZ(i,$l.x,$l.y,$l.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,o){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=o,this}clone(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const e=i*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)t.push(this.data.array[e+n])}return new Qr(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===data.interleavedBuffers&&(data.interleavedBuffers={}),void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.clone(data)),new tc(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const e=i*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)t.push(this.data.array[e+n])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===data.interleavedBuffers&&(data.interleavedBuffers={}),void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}tc.prototype.isInterleavedBufferAttribute=!0;class ec extends Hr{constructor(t){super(),this.type="SpriteMaterial",this.color=new Xr(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.rotation=source.rotation,this.sizeAttenuation=source.sizeAttenuation,this}}let nc;ec.prototype.isSpriteMaterial=!0;const ic=new bi,rc=new bi,sc=new bi,ac=new ri,oc=new ri,lc=new $i,cc=new bi,uc=new bi,hc=new bi,dc=new ri,pc=new ri,fc=new ri;class mc extends Ar{constructor(t){if(super(),this.type="Sprite",void 0===nc){nc=new ms;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new Kl(t,5);nc.setIndex([0,1,2,0,2,3]),nc.setAttribute("position",new tc(e,3,0,!1)),nc.setAttribute("uv",new tc(e,2,3,!1))}this.geometry=nc,this.material=void 0!==t?t:new ec,this.center=new ri(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),rc.setFromMatrixScale(this.matrixWorld),lc.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),sc.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&rc.multiplyScalar(-sc.z);const n=this.material.rotation;let r,o;0!==n&&(o=Math.cos(n),r=Math.sin(n));const l=this.center;gc(cc.set(-.5,-.5,0),sc,l,rc,r,o),gc(uc.set(.5,-.5,0),sc,l,rc,r,o),gc(hc.set(.5,.5,0),sc,l,rc,r,o),dc.set(0,0),pc.set(1,0),fc.set(1,1);let c=t.ray.intersectTriangle(cc,uc,hc,!1,ic);if(null===c&&(gc(uc.set(-.5,.5,0),sc,l,rc,r,o),pc.set(0,1),c=t.ray.intersectTriangle(cc,hc,uc,!1,ic),null===c))return;const h=t.ray.origin.distanceTo(ic);h<t.near||h>t.far||e.push({distance:h,point:ic.clone(),uv:Or.getUV(ic,cc,uc,hc,dc,pc,fc,new ri),face:null,object:this})}copy(source){return super.copy(source),void 0!==source.center&&this.center.copy(source.center),this.material=source.material,this}}function gc(t,e,n,r,o,l){ac.subVectors(t,n).addScalar(.5).multiply(r),void 0!==o?(oc.x=l*ac.x-o*ac.y,oc.y=o*ac.x+l*ac.y):oc.copy(ac),t.copy(e),t.x+=oc.x,t.y+=oc.y,t.applyMatrix4(lc)}mc.prototype.isSprite=!0;const vc=new bi,yc=new bi;class xc extends Ar{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(source){super.copy(source,!1);const t=source.levels;for(let i=0,e=t.length;i<e;i++){const e=t[i];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=source.autoUpdate,this}addLevel(object,t=0){t=Math.abs(t);const e=this.levels;let n;for(n=0;n<e.length&&!(t<e[n].distance);n++);return e.splice(n,0,{distance:t,object:object}),this.add(object),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let i,n;for(i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object}return null}raycast(t,e){if(this.levels.length>0){vc.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(vc);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){vc.setFromMatrixPosition(t.matrixWorld),yc.setFromMatrixPosition(this.matrixWorld);const n=vc.distanceTo(yc)/t.zoom;let i,r;for(e[0].object.visible=!0,i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}}toJSON(meta){const data=super.toJSON(meta);!1===this.autoUpdate&&(data.object.autoUpdate=!1),data.object.levels=[];const t=this.levels;for(let i=0,e=t.length;i<e;i++){const e=t[i];data.object.levels.push({object:e.object.uuid,distance:e.distance})}return data}}const _c=new bi,Mc=new vi,bc=new vi,wc=new bi,Sc=new $i;class Tc extends Is{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new $i,this.bindMatrixInverse=new $i}copy(source){return super.copy(source),this.bindMode=source.bindMode,this.bindMatrix.copy(source.bindMatrix),this.bindMatrixInverse.copy(source.bindMatrixInverse),this.skeleton=source.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new vi,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.w=e.getW(i);const n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;Mc.fromBufferAttribute(r.attributes.skinIndex,t),bc.fromBufferAttribute(r.attributes.skinWeight,t),_c.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let i=0;i<4;i++){const t=bc.getComponent(i);if(0!==t){const r=Mc.getComponent(i);Sc.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(wc.copy(_c).applyMatrix4(Sc),t)}}return e.applyMatrix4(this.bindMatrixInverse)}}Tc.prototype.isSkinnedMesh=!0;class Ec extends Ar{constructor(){super(),this.type="Bone"}}Ec.prototype.isBone=!0;class Ac extends mi{constructor(data=null,t=1,e=1,n,r,o,l,c,h=St,d=St,f,m){super(null,o,l,c,h,d,n,r,f,m),this.image={data:data,width:t,height:e},this.magFilter=h,this.minFilter=d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Ac.prototype.isDataTexture=!0;const Lc=new $i,Rc=new $i;class Cc{constructor(t=[],e=[]){this.uuid=Zn(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,t=this.bones.length;i<t;i++)this.boneInverses.push(new $i)}}calculateInverses(){this.boneInverses.length=0;for(let i=0,t=this.bones.length;i<t;i++){const t=new $i;this.bones[i]&&t.copy(this.bones[i].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let i=0,t=this.bones.length;i<t;i++){const t=this.bones[i];t&&t.matrixWorld.copy(this.boneInverses[i]).invert()}for(let i=0,t=this.bones.length;i<t;i++){const t=this.bones[i];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let i=0,r=t.length;i<r;i++){const r=t[i]?t[i].matrixWorld:Rc;Lc.multiplyMatrices(r,e[i]),Lc.toArray(n,16*i)}null!==r&&(r.needsUpdate=!0)}clone(){return new Cc(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=ei(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new Ac(e,t,t,Jt,Ht);return this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let i=0,e=this.bones.length;i<e;i++){const e=this.bones[i];if(e.name===t)return e}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let i=0,n=t.bones.length;i<n;i++){const n=t.bones[i];let r=e[n];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),r=new Ec),this.bones.push(r),this.boneInverses.push((new $i).fromArray(t.boneInverses[i]))}return this.init(),this}toJSON(){const data={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};data.uuid=this.uuid;const t=this.bones,e=this.boneInverses;for(let i=0,n=t.length;i<n;i++){const n=t[i];data.bones.push(n.uuid);const r=e[i];data.boneInverses.push(r.toArray())}return data}}class Pc extends Qr{constructor(t,e,n,r=1){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=r}copy(source){return super.copy(source),this.meshPerAttribute=source.meshPerAttribute,this}toJSON(){const data=super.toJSON();return data.meshPerAttribute=this.meshPerAttribute,data.isInstancedBufferAttribute=!0,data}}Pc.prototype.isInstancedBufferAttribute=!0;const Dc=new $i,Ic=new $i,Nc=[],zc=new Is;class Bc extends Is{constructor(t,e,n){super(t,e),this.instanceMatrix=new Pc(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(source){return super.copy(source),this.instanceMatrix.copy(source.instanceMatrix),null!==source.instanceColor&&(this.instanceColor=source.instanceColor.clone()),this.count=source.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(zc.geometry=this.geometry,zc.material=this.material,void 0!==zc.material)for(let o=0;o<r;o++){this.getMatrixAt(o,Dc),Ic.multiplyMatrices(n,Dc),zc.matrixWorld=Ic,zc.raycast(t,Nc);for(let i=0,t=Nc.length;i<t;i++){const t=Nc[i];t.instanceId=o,t.object=this,e.push(t)}Nc.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Pc(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Bc.prototype.isInstancedMesh=!0;class Fc extends Hr{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Xr(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.linewidth=source.linewidth,this.linecap=source.linecap,this.linejoin=source.linejoin,this}}Fc.prototype.isLineBasicMaterial=!0;const Oc=new bi,Uc=new bi,Hc=new $i,Gc=new Ki,kc=new Wi;class Vc extends Ar{constructor(t=new ms,e=new Fc){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(source){return super.copy(source),this.material=source.material,this.geometry=source.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let i=1,t=e.count;i<t;i++)Oc.fromBufferAttribute(e,i-1),Uc.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Oc.distanceTo(Uc);t.setAttribute("lineDistance",new as(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),kc.copy(n.boundingSphere),kc.applyMatrix4(r),kc.radius+=o,!1===t.ray.intersectsSphere(kc))return;Hc.copy(r).invert(),Gc.copy(t.ray).applyMatrix4(Hc);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,d=new bi,f=new bi,m=new bi,v=new bi,y=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position;if(null!==r){for(let i=Math.max(0,l.start),n=Math.min(r.count,l.start+l.count)-1;i<n;i+=y){const a=r.getX(i),b=r.getX(i+1);d.fromBufferAttribute(o,a),f.fromBufferAttribute(o,b);if(Gc.distanceSqToSegment(d,f,v,m)>h)continue;v.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(v);n<t.near||n>t.far||e.push({distance:n,point:m.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else{for(let i=Math.max(0,l.start),n=Math.min(o.count,l.start+l.count)-1;i<n;i+=y){d.fromBufferAttribute(o,i),f.fromBufferAttribute(o,i+1);if(Gc.distanceSqToSegment(d,f,v,m)>h)continue;v.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(v);n<t.near||n>t.far||e.push({distance:n,point:m.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Vc.prototype.isLine=!0;const Wc=new bi,jc=new bi;class qc extends Vc{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let i=0,t=e.count;i<t;i+=2)Wc.fromBufferAttribute(e,i),jc.fromBufferAttribute(e,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+Wc.distanceTo(jc);t.setAttribute("lineDistance",new as(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}qc.prototype.isLineSegments=!0;class Xc extends Vc{constructor(t,e){super(t,e),this.type="LineLoop"}}Xc.prototype.isLineLoop=!0;class Jc extends Hr{constructor(t){super(),this.type="PointsMaterial",this.color=new Xr(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.size=source.size,this.sizeAttenuation=source.sizeAttenuation,this}}Jc.prototype.isPointsMaterial=!0;const Yc=new $i,Zc=new Ki,Qc=new Wi,Kc=new bi;class $c extends Ar{constructor(t=new ms,e=new Jc){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(source){return super.copy(source),this.material=source.material,this.geometry=source.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Qc.copy(n.boundingSphere),Qc.applyMatrix4(r),Qc.radius+=o,!1===t.ray.intersectsSphere(Qc))return;Yc.copy(r).invert(),Zc.copy(t.ray).applyMatrix4(Yc);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c;if(n.isBufferGeometry){const o=n.index,c=n.attributes.position;if(null!==o){for(let i=Math.max(0,l.start),n=Math.min(o.count,l.start+l.count);i<n;i++){const a=o.getX(i);Kc.fromBufferAttribute(c,a),tu(Kc,a,h,r,t,e,this)}}else{for(let i=Math.max(0,l.start),n=Math.min(c.count,l.start+l.count);i<n;i++)Kc.fromBufferAttribute(c,i),tu(Kc,i,h,r,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function tu(t,e,n,r,o,l,object){const c=Zc.distanceSqToPoint(t);if(c<n){const n=new bi;Zc.closestPointToPoint(t,n),n.applyMatrix4(r);const h=o.ray.origin.distanceTo(n);if(h<o.near||h>o.far)return;l.push({distance:h,distanceToRay:Math.sqrt(c),point:n,index:e,face:null,object:object})}}$c.prototype.isPoints=!0;class eu extends mi{constructor(video,t,e,n,r,o,l,c,h){super(video,t,e,n,r,o,l,c,h),this.format=void 0!==l?l:Xt,this.minFilter=void 0!==o?o:Rt,this.magFilter=void 0!==r?r:Rt,this.generateMipmaps=!1;const d=this;"requestVideoFrameCallback"in video&&video.requestVideoFrameCallback((function t(){d.needsUpdate=!0,video.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const video=this.image;!1==="requestVideoFrameCallback"in video&&video.readyState>=video.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}eu.prototype.isVideoTexture=!0;class nu extends mi{constructor(t,e,n,r,o,l,c,h,d,f,m,v){super(null,l,c,h,d,f,r,o,m,v),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}nu.prototype.isCompressedTexture=!0;class iu extends mi{constructor(canvas,t,e,n,r,o,l,c,h){super(canvas,t,e,n,r,o,l,c,h),this.needsUpdate=!0}}iu.prototype.isCanvasTexture=!0;class ru extends ms{constructor(t=1,e=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},e=Math.max(3,e);const o=[],l=[],c=[],h=[],d=new bi,f=new ri;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let s=0,i=3;s<=e;s++,i+=3){const o=n+s/e*r;d.x=t*Math.cos(o),d.y=t*Math.sin(o),l.push(d.x,d.y,d.z),c.push(0,0,1),f.x=(l[i]/t+1)/2,f.y=(l[i+1]/t+1)/2,h.push(f.x,f.y)}for(let i=1;i<=e;i++)o.push(i,i+1,0);this.setIndex(o),this.setAttribute("position",new as(l,3)),this.setAttribute("normal",new as(c,3)),this.setAttribute("uv",new as(h,2))}static fromJSON(data){return new ru(data.radius,data.segments,data.thetaStart,data.thetaLength)}}class su extends ms{constructor(t=1,e=1,n=1,r=8,o=1,l=!1,c=0,h=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const d=this;r=Math.floor(r),o=Math.floor(o);const f=[],m=[],v=[],y=[];let x=0;const _=[],M=n/2;let w=0;function S(n){const o=x,l=new ri,_=new bi;let S=0;const T=!0===n?t:e,E=!0===n?1:-1;for(let t=1;t<=r;t++)m.push(0,M*E,0),v.push(0,E,0),y.push(.5,.5),x++;const A=x;for(let t=0;t<=r;t++){const e=t/r*h+c,n=Math.cos(e),o=Math.sin(e);_.x=T*o,_.y=M*E,_.z=T*n,m.push(_.x,_.y,_.z),v.push(0,E,0),l.x=.5*n+.5,l.y=.5*o*E+.5,y.push(l.x,l.y),x++}for(let t=0;t<r;t++){const e=o+t,i=A+t;!0===n?f.push(i,i+1,e):f.push(i+1,i,e),S+=3}d.addGroup(w,S,!0===n?1:2),w+=S}!function(){const l=new bi,S=new bi;let T=0;const E=(e-t)/n;for(let d=0;d<=o;d++){const f=[],w=d/o,T=w*(e-t)+t;for(let t=0;t<=r;t++){const u=t/r,e=u*h+c,o=Math.sin(e),d=Math.cos(e);S.x=T*o,S.y=-w*n+M,S.z=T*d,m.push(S.x,S.y,S.z),l.set(o,E,d).normalize(),v.push(l.x,l.y,l.z),y.push(u,1-w),f.push(x++)}_.push(f)}for(let t=0;t<r;t++)for(let e=0;e<o;e++){const a=_[e][t],b=_[e+1][t],n=_[e+1][t+1],r=_[e][t+1];f.push(a,b,r),f.push(b,n,r),T+=6}d.addGroup(w,T,0),w+=T}(),!1===l&&(t>0&&S(!0),e>0&&S(!1)),this.setIndex(f),this.setAttribute("position",new as(m,3)),this.setAttribute("normal",new as(v,3)),this.setAttribute("uv",new as(y,2))}static fromJSON(data){return new su(data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength)}}class au extends su{constructor(t=1,e=1,n=8,r=1,o=!1,l=0,c=2*Math.PI){super(0,t,e,n,r,o,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:l,thetaLength:c}}static fromJSON(data){return new au(data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength)}}class ou extends ms{constructor(t=[],e=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const o=[],l=[];function c(a,b,t,e){const n=e+1,r=[];for(let i=0;i<=n;i++){r[i]=[];const e=a.clone().lerp(t,i/n),o=b.clone().lerp(t,i/n),l=n-i;for(let t=0;t<=l;t++)r[i][t]=0===t&&i===n?e:e.clone().lerp(o,t/l)}for(let i=0;i<n;i++)for(let t=0;t<2*(n-i)-1;t++){const e=Math.floor(t/2);t%2==0?(h(r[i][e+1]),h(r[i+1][e]),h(r[i][e])):(h(r[i][e+1]),h(r[i+1][e+1]),h(r[i+1][e]))}}function h(t){o.push(t.x,t.y,t.z)}function d(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function f(t,e,n,r){r<0&&1===t.x&&(l[e]=t.x-1),0===n.x&&0===n.z&&(l[e]=r/2/Math.PI+.5)}function m(t){return Math.atan2(t.z,-t.x)}!function(t){const a=new bi,b=new bi,n=new bi;for(let i=0;i<e.length;i+=3)d(e[i+0],a),d(e[i+1],b),d(e[i+2],n),c(a,b,n,t)}(r),function(t){const e=new bi;for(let i=0;i<o.length;i+=3)e.x=o[i+0],e.y=o[i+1],e.z=o[i+2],e.normalize().multiplyScalar(t),o[i+0]=e.x,o[i+1]=e.y,o[i+2]=e.z}(n),function(){const t=new bi;for(let i=0;i<o.length;i+=3){t.x=o[i+0],t.y=o[i+1],t.z=o[i+2];const u=m(t)/2/Math.PI+.5,n=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);l.push(u,1-n)}var e;(function(){const a=new bi,b=new bi,t=new bi,e=new bi,n=new ri,r=new ri,c=new ri;for(let i=0,h=0;i<o.length;i+=9,h+=6){a.set(o[i+0],o[i+1],o[i+2]),b.set(o[i+3],o[i+4],o[i+5]),t.set(o[i+6],o[i+7],o[i+8]),n.set(l[h+0],l[h+1]),r.set(l[h+2],l[h+3]),c.set(l[h+4],l[h+5]),e.copy(a).add(b).add(t).divideScalar(3);const d=m(e);f(n,h+0,a,d),f(r,h+2,b,d),f(c,h+4,t,d)}})(),function(){for(let i=0;i<l.length;i+=6){const t=l[i+0],e=l[i+2],n=l[i+4],r=Math.max(t,e,n),o=Math.min(t,e,n);r>.9&&o<.1&&(t<.2&&(l[i+0]+=1),e<.2&&(l[i+2]+=1),n<.2&&(l[i+4]+=1))}}()}(),this.setAttribute("position",new as(o,3)),this.setAttribute("normal",new as(o.slice(),3)),this.setAttribute("uv",new as(l,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(data){return new ou(data.vertices,data.indices,data.radius,data.details)}}class lu extends ou{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(data){return new lu(data.radius,data.detail)}}const cu=new bi,uu=new bi,hu=new bi,du=new Or;class pu extends ms{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,r=Math.pow(10,n),o=Math.cos(Jn*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,d=[0,0,0],f=["a","b","c"],m=new Array(3),v={},y=[];for(let i=0;i<h;i+=3){l?(d[0]=l.getX(i),d[1]=l.getX(i+1),d[2]=l.getX(i+2)):(d[0]=i,d[1]=i+1,d[2]=i+2);const{a:a,b:b,c:t}=du;if(a.fromBufferAttribute(c,d[0]),b.fromBufferAttribute(c,d[1]),t.fromBufferAttribute(c,d[2]),du.getNormal(hu),m[0]=`${Math.round(a.x*r)},${Math.round(a.y*r)},${Math.round(a.z*r)}`,m[1]=`${Math.round(b.x*r)},${Math.round(b.y*r)},${Math.round(b.z*r)}`,m[2]=`${Math.round(t.x*r)},${Math.round(t.y*r)},${Math.round(t.z*r)}`,m[0]!==m[1]&&m[1]!==m[2]&&m[2]!==m[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=m[t],r=m[e],l=du[f[t]],c=du[f[e]],h=`${n}_${r}`,x=`${r}_${n}`;x in v&&v[x]?(hu.dot(v[x].normal)<=o&&(y.push(l.x,l.y,l.z),y.push(c.x,c.y,c.z)),v[x]=null):h in v||(v[h]={index0:d[t],index1:d[e],normal:hu.clone()})}}for(const t in v)if(v[t]){const{index0:e,index1:n}=v[t];cu.fromBufferAttribute(c,e),uu.fromBufferAttribute(c,n),y.push(cu.x,cu.y,cu.z),y.push(uu.x,uu.y,uu.z)}this.setAttribute("position",new as(y,3))}}}class fu{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(u,t){const e=this.getUtoTmapping(u);return this.getPoint(e,t)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),o=0;e.push(0);for(let p=1;p<=t;p++)n=this.getPoint(p/t),o+=n.distanceTo(r),e.push(o),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(u,t){const e=this.getLengths();let i=0;const n=e.length;let r;r=t||u*e[n-1];let o,l=0,c=n-1;for(;l<=c;)if(i=Math.floor(l+(c-l)/2),o=e[i]-r,o<0)l=i+1;else{if(!(o>0)){c=i;break}c=i-1}if(i=c,e[i]===r)return i/(n-1);const h=e[i];return(i+(r-h)/(e[i+1]-h))/(n-1)}getTangent(t,e){const n=1e-4;let r=t-n,o=t+n;r<0&&(r=0),o>1&&(o=1);const l=this.getPoint(r),c=this.getPoint(o),h=e||(l.isVector2?new ri:new bi);return h.copy(c).sub(l).normalize(),h}getTangentAt(u,t){const e=this.getUtoTmapping(u);return this.getTangent(e,t)}computeFrenetFrames(t,e){const n=new bi,r=[],o=[],l=[],c=new bi,h=new $i;for(let i=0;i<=t;i++){const u=i/t;r[i]=this.getTangentAt(u,new bi)}o[0]=new bi,l[0]=new bi;let d=Number.MAX_VALUE;const f=Math.abs(r[0].x),m=Math.abs(r[0].y),v=Math.abs(r[0].z);f<=d&&(d=f,n.set(1,0,0)),m<=d&&(d=m,n.set(0,1,0)),v<=d&&n.set(0,0,1),c.crossVectors(r[0],n).normalize(),o[0].crossVectors(r[0],c),l[0].crossVectors(r[0],o[0]);for(let i=1;i<=t;i++){if(o[i]=o[i-1].clone(),l[i]=l[i-1].clone(),c.crossVectors(r[i-1],r[i]),c.length()>Number.EPSILON){c.normalize();const t=Math.acos(Qn(r[i-1].dot(r[i]),-1,1));o[i].applyMatrix4(h.makeRotationAxis(c,t))}l[i].crossVectors(r[i],o[i])}if(!0===e){let e=Math.acos(Qn(o[0].dot(o[t]),-1,1));e/=t,r[0].dot(c.crossVectors(o[0],o[t]))>0&&(e=-e);for(let i=1;i<=t;i++)o[i].applyMatrix4(h.makeRotationAxis(r[i],e*i)),l[i].crossVectors(r[i],o[i])}return{tangents:r,normals:o,binormals:l}}clone(){return(new this.constructor).copy(this)}copy(source){return this.arcLengthDivisions=source.arcLengthDivisions,this}toJSON(){const data={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return data.arcLengthDivisions=this.arcLengthDivisions,data.type=this.type,data}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class mu extends fu{constructor(t=0,e=0,n=1,r=1,o=0,l=2*Math.PI,c=!1,h=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e){const n=e||new ri,r=2*Math.PI;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=r;for(;o>r;)o-=r;o<Number.EPSILON&&(o=l?0:r),!0!==this.aClockwise||l||(o===r?o=-r:o-=r);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),d=this.aY+this.yRadius*Math.sin(c);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=h-this.aX,r=d-this.aY;h=n*t-r*e+this.aX,d=n*e+r*t+this.aY}return n.set(h,d)}copy(source){return super.copy(source),this.aX=source.aX,this.aY=source.aY,this.xRadius=source.xRadius,this.yRadius=source.yRadius,this.aStartAngle=source.aStartAngle,this.aEndAngle=source.aEndAngle,this.aClockwise=source.aClockwise,this.aRotation=source.aRotation,this}toJSON(){const data=super.toJSON();return data.aX=this.aX,data.aY=this.aY,data.xRadius=this.xRadius,data.yRadius=this.yRadius,data.aStartAngle=this.aStartAngle,data.aEndAngle=this.aEndAngle,data.aClockwise=this.aClockwise,data.aRotation=this.aRotation,data}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}mu.prototype.isEllipseCurve=!0;class gu extends mu{constructor(t,e,n,r,o,l){super(t,e,n,n,r,o,l),this.type="ArcCurve"}}function vu(){let t=0,e=0,n=0,r=0;function o(o,l,c,h){t=o,e=c,n=-3*o+3*l-2*c-h,r=2*o-2*l+c+h}return{initCatmullRom:function(t,e,n,r,l){o(e,n,l*(n-t),l*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,l,c,h){let d=(e-t)/l-(n-t)/(l+c)+(n-e)/c,f=(n-e)/c-(r-e)/(c+h)+(r-n)/h;d*=c,f*=c,o(e,n,d,f)},calc:function(o){const l=o*o;return t+e*o+n*l+r*(l*o)}}}gu.prototype.isArcCurve=!0;const yu=new bi,xu=new vu,_u=new vu,Mu=new vu;class bu extends fu{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new bi){const n=e,r=this.points,o=r.length,p=(o-(this.closed?0:1))*t;let l,c,h=Math.floor(p),d=p-h;this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/o)+1)*o:0===d&&h===o-1&&(h=o-2,d=1),this.closed||h>0?l=r[(h-1)%o]:(yu.subVectors(r[0],r[1]).add(r[0]),l=yu);const f=r[h%o],m=r[(h+1)%o];if(this.closed||h+2<o?c=r[(h+2)%o]:(yu.subVectors(r[o-1],r[o-2]).add(r[o-1]),c=yu),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(l.distanceToSquared(f),t),n=Math.pow(f.distanceToSquared(m),t),r=Math.pow(m.distanceToSquared(c),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),xu.initNonuniformCatmullRom(l.x,f.x,m.x,c.x,e,n,r),_u.initNonuniformCatmullRom(l.y,f.y,m.y,c.y,e,n,r),Mu.initNonuniformCatmullRom(l.z,f.z,m.z,c.z,e,n,r)}else"catmullrom"===this.curveType&&(xu.initCatmullRom(l.x,f.x,m.x,c.x,this.tension),_u.initCatmullRom(l.y,f.y,m.y,c.y,this.tension),Mu.initCatmullRom(l.z,f.z,m.z,c.z,this.tension));return n.set(xu.calc(d),_u.calc(d),Mu.calc(d)),n}copy(source){super.copy(source),this.points=[];for(let i=0,t=source.points.length;i<t;i++){const t=source.points[i];this.points.push(t.clone())}return this.closed=source.closed,this.curveType=source.curveType,this.tension=source.tension,this}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,t=this.points.length;i<t;i++){const t=this.points[i];data.points.push(t.toArray())}return data.closed=this.closed,data.curveType=this.curveType,data.tension=this.tension,data}fromJSON(t){super.fromJSON(t),this.points=[];for(let i=0,e=t.points.length;i<e;i++){const e=t.points[i];this.points.push((new bi).fromArray(e))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function wu(t,e,n,r,o){const l=.5*(r-e),c=.5*(o-n),h=t*t;return(2*n-2*r+l+c)*(t*h)+(-3*n+3*r-2*l-c)*h+l*t+n}function Su(t,e,n,r){return function(t,p){const e=1-t;return e*e*p}(t,e)+function(t,p){return 2*(1-t)*t*p}(t,n)+function(t,p){return t*t*p}(t,r)}function Tu(t,e,n,r,o){return function(t,p){const e=1-t;return e*e*e*p}(t,e)+function(t,p){const e=1-t;return 3*e*e*t*p}(t,n)+function(t,p){return 3*(1-t)*t*t*p}(t,r)+function(t,p){return t*t*t*p}(t,o)}bu.prototype.isCatmullRomCurve3=!0;class Eu extends fu{constructor(t=new ri,e=new ri,n=new ri,r=new ri){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new ri){const n=e,r=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Tu(t,r.x,o.x,l.x,c.x),Tu(t,r.y,o.y,l.y,c.y)),n}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Eu.prototype.isCubicBezierCurve=!0;class Au extends fu{constructor(t=new bi,e=new bi,n=new bi,r=new bi){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new bi){const n=e,r=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Tu(t,r.x,o.x,l.x,c.x),Tu(t,r.y,o.y,l.y,c.y),Tu(t,r.z,o.z,l.z,c.z)),n}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Au.prototype.isCubicBezierCurve3=!0;class Lu extends fu{constructor(t=new ri,e=new ri){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ri){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(u,t){return this.getPoint(u,t)}getTangent(t,e){const n=e||new ri;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(source){return super.copy(source),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Lu.prototype.isLineCurve=!0;class Ru extends fu{constructor(t=new bi,e=new bi){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new bi){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(u,t){return this.getPoint(u,t)}copy(source){return super.copy(source),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Cu extends fu{constructor(t=new ri,e=new ri,n=new ri){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ri){const n=e,r=this.v0,o=this.v1,l=this.v2;return n.set(Su(t,r.x,o.x,l.x),Su(t,r.y,o.y,l.y)),n}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Cu.prototype.isQuadraticBezierCurve=!0;class Pu extends fu{constructor(t=new bi,e=new bi,n=new bi){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new bi){const n=e,r=this.v0,o=this.v1,l=this.v2;return n.set(Su(t,r.x,o.x,l.x),Su(t,r.y,o.y,l.y),Su(t,r.z,o.z,l.z)),n}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Pu.prototype.isQuadraticBezierCurve3=!0;class Du extends fu{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new ri){const n=e,r=this.points,p=(r.length-1)*t,o=Math.floor(p),l=p-o,c=r[0===o?o:o-1],h=r[o],d=r[o>r.length-2?r.length-1:o+1],f=r[o>r.length-3?r.length-1:o+2];return n.set(wu(l,c.x,h.x,d.x,f.x),wu(l,c.y,h.y,d.y,f.y)),n}copy(source){super.copy(source),this.points=[];for(let i=0,t=source.points.length;i<t;i++){const t=source.points[i];this.points.push(t.clone())}return this}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,t=this.points.length;i<t;i++){const t=this.points[i];data.points.push(t.toArray())}return data}fromJSON(t){super.fromJSON(t),this.points=[];for(let i=0,e=t.points.length;i<e;i++){const e=t.points[i];this.points.push((new ri).fromArray(e))}return this}}Du.prototype.isSplineCurve=!0;var Iu=Object.freeze({__proto__:null,ArcCurve:gu,CatmullRomCurve3:bu,CubicBezierCurve:Eu,CubicBezierCurve3:Au,EllipseCurve:mu,LineCurve:Lu,LineCurve3:Ru,QuadraticBezierCurve:Cu,QuadraticBezierCurve3:Pu,SplineCurve:Du});class Nu extends fu{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Lu(e,t))}getPoint(t,e){const n=t*this.getLength(),r=this.getCurveLengths();let i=0;for(;i<r.length;){if(r[i]>=n){const t=r[i]-n,o=this.curves[i],l=o.getLength(),u=0===l?0:1-t/l;return o.getPointAt(u,e)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],l=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,c=o.getPoints(l);for(let t=0;t<c.length;t++){const r=c[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(source){super.copy(source),this.curves=[];for(let i=0,t=source.curves.length;i<t;i++){const t=source.curves[i];this.curves.push(t.clone())}return this.autoClose=source.autoClose,this}toJSON(){const data=super.toJSON();data.autoClose=this.autoClose,data.curves=[];for(let i=0,t=this.curves.length;i<t;i++){const t=this.curves[i];data.curves.push(t.toJSON())}return data}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let i=0,e=t.curves.length;i<e;i++){const e=t.curves[i];this.curves.push((new Iu[e.type]).fromJSON(e))}return this}}class zu extends Nu{constructor(t){super(),this.type="Path",this.currentPoint=new ri,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let i=1,e=t.length;i<e;i++)this.lineTo(t[i].x,t[i].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Lu(this.currentPoint.clone(),new ri(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const o=new Cu(this.currentPoint.clone(),new ri(t,e),new ri(n,r));return this.curves.push(o),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,o,l){const c=new Eu(this.currentPoint.clone(),new ri(t,e),new ri(n,r),new ri(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Du(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,r,o,l),this}absarc(t,e,n,r,o,l){return this.absellipse(t,e,n,n,r,o,l),this}ellipse(t,e,n,r,o,l,c,h){const d=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(t+d,e+f,n,r,o,l,c,h),this}absellipse(t,e,n,r,o,l,c,h){const d=new mu(t,e,n,r,o,l,c,h);if(this.curves.length>0){const t=d.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(d);const f=d.getPoint(1);return this.currentPoint.copy(f),this}copy(source){return super.copy(source),this.currentPoint.copy(source.currentPoint),this}toJSON(){const data=super.toJSON();return data.currentPoint=this.currentPoint.toArray(),data}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Bu extends zu{constructor(t){super(t),this.uuid=Zn(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(source){super.copy(source),this.holes=[];for(let i=0,t=source.holes.length;i<t;i++){const t=source.holes[i];this.holes.push(t.clone())}return this}toJSON(){const data=super.toJSON();data.uuid=this.uuid,data.holes=[];for(let i=0,t=this.holes.length;i<t;i++){const t=this.holes[i];data.holes.push(t.toJSON())}return data}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let i=0,e=t.holes.length;i<e;i++){const e=t.holes[i];this.holes.push((new zu).fromJSON(e))}return this}}const Fu=function(data,t,e=2){const n=t&&t.length,r=n?t[0]*e:data.length;let o=Ou(data,0,r,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,d,f,m,v,y;if(n&&(o=function(data,t,e,n){const r=[];let i,o,l,c,h;for(i=0,o=t.length;i<o;i++)l=t[i]*n,c=i<o-1?t[i+1]*n:data.length,h=Ou(data,l,c,n,!1),h===h.next&&(h.steiner=!0),r.push(Yu(h));for(r.sort(ju),i=0;i<r.length;i++)qu(r[i],e),e=Uu(e,e.next);return e}(data,t,o,e)),data.length>80*e){c=d=data[0],h=f=data[1];for(let i=e;i<r;i+=e)m=data[i],v=data[i+1],m<c&&(c=m),v<h&&(h=v),m>d&&(d=m),v>f&&(f=v);y=Math.max(d-c,f-h),y=0!==y?1/y:0}return Hu(o,l,e,c,h,y),l};function Ou(data,t,e,n,r){let i,o;if(r===function(data,t,e,n){let r=0;for(let i=t,o=e-n;i<e;i+=n)r+=(data[o]-data[i])*(data[i+1]+data[o+1]),o=i;return r}(data,t,e,n)>0)for(i=t;i<e;i+=n)o=sh(i,data[i],data[i+1],o);else for(i=e-n;i>=t;i-=n)o=sh(i,data[i],data[i+1],o);return o&&Ku(o,o.next)&&(ah(o),o=o.next),o}function Uu(t,e){if(!t)return t;e||(e=t);let n,p=t;do{if(n=!1,p.steiner||!Ku(p,p.next)&&0!==area(p.prev,p,p.next))p=p.next;else{if(ah(p),p=e=p.prev,p===p.next)break;n=!0}}while(n||p!==e);return e}function Hu(t,e,n,r,o,l,c){if(!t)return;!c&&l&&function(t,e,n,r){let p=t;do{null===p.z&&(p.z=Ju(p.x,p.y,e,n,r)),p.prevZ=p.prev,p.nextZ=p.next,p=p.next}while(p!==t);p.prevZ.nextZ=null,p.prevZ=null,function(t){let i,p,q,e,n,r,o,l,c=1;do{for(p=t,t=null,n=null,r=0;p;){for(r++,q=p,o=0,i=0;i<c&&(o++,q=q.nextZ,q);i++);for(l=c;o>0||l>0&&q;)0!==o&&(0===l||!q||p.z<=q.z)?(e=p,p=p.nextZ,o--):(e=q,q=q.nextZ,l--),n?n.nextZ=e:t=e,e.prevZ=n,n=e;p=q}n.nextZ=null,c*=2}while(r>1)}(p)}(t,r,o,l);let h,d,f=t;for(;t.prev!==t.next;)if(h=t.prev,d=t.next,l?ku(t,r,o,l):Gu(t))e.push(h.i/n),e.push(t.i/n),e.push(d.i/n),ah(t),t=d.next,f=d.next;else if((t=d)===f){c?1===c?Hu(t=Vu(Uu(t),e,n),e,n,r,o,l,2):2===c&&Wu(t,e,n,r,o,l):Hu(Uu(t),e,n,r,o,l,1);break}}function Gu(t){const a=t.prev,b=t,e=t.next;if(area(a,b,e)>=0)return!1;let p=t.next.next;for(;p!==t.prev;){if(Zu(a.x,a.y,b.x,b.y,e.x,e.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function ku(t,e,n,r){const a=t.prev,b=t,o=t.next;if(area(a,b,o)>=0)return!1;const l=a.x<b.x?a.x<o.x?a.x:o.x:b.x<o.x?b.x:o.x,c=a.y<b.y?a.y<o.y?a.y:o.y:b.y<o.y?b.y:o.y,h=a.x>b.x?a.x>o.x?a.x:o.x:b.x>o.x?b.x:o.x,d=a.y>b.y?a.y>o.y?a.y:o.y:b.y>o.y?b.y:o.y,f=Ju(l,c,e,n,r),m=Ju(h,d,e,n,r);let p=t.prevZ,v=t.nextZ;for(;p&&p.z>=f&&v&&v.z<=m;){if(p!==t.prev&&p!==t.next&&Zu(a.x,a.y,b.x,b.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,v!==t.prev&&v!==t.next&&Zu(a.x,a.y,b.x,b.y,o.x,o.y,v.x,v.y)&&area(v.prev,v,v.next)>=0)return!1;v=v.nextZ}for(;p&&p.z>=f;){if(p!==t.prev&&p!==t.next&&Zu(a.x,a.y,b.x,b.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;v&&v.z<=m;){if(v!==t.prev&&v!==t.next&&Zu(a.x,a.y,b.x,b.y,o.x,o.y,v.x,v.y)&&area(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function Vu(t,e,n){let p=t;do{const a=p.prev,b=p.next.next;!Ku(a,b)&&$u(a,p,p.next,b)&&ih(a,b)&&ih(b,a)&&(e.push(a.i/n),e.push(p.i/n),e.push(b.i/n),ah(p),ah(p.next),p=t=b),p=p.next}while(p!==t);return Uu(p)}function Wu(t,e,n,r,o,l){let a=t;do{let b=a.next.next;for(;b!==a.prev;){if(a.i!==b.i&&Qu(a,b)){let t=rh(a,b);return a=Uu(a,a.next),t=Uu(t,t.next),Hu(a,e,n,r,o,l),void Hu(t,e,n,r,o,l)}b=b.next}a=a.next}while(a!==t)}function ju(a,b){return a.x-b.x}function qu(t,e){if(e=function(t,e){let p=e;const n=t.x,r=t.y;let o,l=-1/0;do{if(r<=p.y&&r>=p.next.y&&p.next.y!==p.y){const t=p.x+(r-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(t<=n&&t>l){if(l=t,t===n){if(r===p.y)return p;if(r===p.next.y)return p.next}o=p.x<p.next.x?p:p.next}}p=p.next}while(p!==e);if(!o)return null;if(n===l)return o;const c=o,h=o.x,d=o.y;let f,m=1/0;p=o;do{n>=p.x&&p.x>=h&&n!==p.x&&Zu(r<d?n:l,r,h,d,r<d?l:n,r,p.x,p.y)&&(f=Math.abs(r-p.y)/(n-p.x),ih(p,t)&&(f<m||f===m&&(p.x>o.x||p.x===o.x&&Xu(o,p)))&&(o=p,m=f)),p=p.next}while(p!==c);return o}(t,e),e){const b=rh(e,t);Uu(e,e.next),Uu(b,b.next)}}function Xu(t,p){return area(t.prev,t,p.prev)<0&&area(p.next,t,t.next)<0}function Ju(t,e,n,r,o){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*o)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*o)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Yu(t){let p=t,e=t;do{(p.x<e.x||p.x===e.x&&p.y<e.y)&&(e=p),p=p.next}while(p!==t);return e}function Zu(t,e,n,r,o,l,c,h){return(o-c)*(e-h)-(t-c)*(l-h)>=0&&(t-c)*(r-h)-(n-c)*(e-h)>=0&&(n-c)*(l-h)-(o-c)*(r-h)>=0}function Qu(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!function(a,b){let p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&$u(p,p.next,a,b))return!0;p=p.next}while(p!==a);return!1}(a,b)&&(ih(a,b)&&ih(b,a)&&function(a,b){let p=a,t=!1;const e=(a.x+b.x)/2,n=(a.y+b.y)/2;do{p.y>n!=p.next.y>n&&p.next.y!==p.y&&e<(p.next.x-p.x)*(n-p.y)/(p.next.y-p.y)+p.x&&(t=!t),p=p.next}while(p!==a);return t}(a,b)&&(area(a.prev,a,b.prev)||area(a,b.prev,b))||Ku(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0)}function area(p,q,t){return(q.y-p.y)*(t.x-q.x)-(q.x-p.x)*(t.y-q.y)}function Ku(t,e){return t.x===e.x&&t.y===e.y}function $u(t,e,n,r){const o=nh(area(t,e,n)),l=nh(area(t,e,r)),c=nh(area(n,r,t)),h=nh(area(n,r,e));return o!==l&&c!==h||(!(0!==o||!eh(t,n,e))||(!(0!==l||!eh(t,r,e))||(!(0!==c||!eh(n,t,r))||!(0!==h||!eh(n,e,r)))))}function eh(p,q,t){return q.x<=Math.max(p.x,t.x)&&q.x>=Math.min(p.x,t.x)&&q.y<=Math.max(p.y,t.y)&&q.y>=Math.min(p.y,t.y)}function nh(t){return t>0?1:t<0?-1:0}function ih(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0}function rh(a,b){const t=new oh(a.i,a.x,a.y),e=new oh(b.i,b.x,b.y),n=a.next,r=b.prev;return a.next=b,b.prev=a,t.next=n,n.prev=t,e.next=t,t.prev=e,r.next=e,e.prev=r,e}function sh(i,t,e,n){const p=new oh(i,t,e);return n?(p.next=n.next,p.prev=n,n.next.prev=p,n.next=p):(p.prev=p,p.next=p),p}function ah(p){p.next.prev=p.prev,p.prev.next=p.next,p.prevZ&&(p.prevZ.nextZ=p.nextZ),p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function oh(i,t,e){this.i=i,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class lh{static area(t){const e=t.length;let a=0;for(let p=e-1,q=0;q<e;p=q++)a+=t[p].x*t[q].y-t[q].x*t[p].y;return.5*a}static isClockWise(t){return lh.area(t)<0}static triangulateShape(t,e){const n=[],r=[],o=[];ch(t),uh(n,t);let l=t.length;e.forEach(ch);for(let i=0;i<e.length;i++)r.push(l),l+=e[i].length,uh(n,e[i]);const c=Fu(n,r);for(let i=0;i<c.length;i+=3)o.push(c.slice(i,i+3));return o}}function ch(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function uh(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class hh extends ms{constructor(t=new Bu([new ri(.5,.5),new ri(-.5,.5),new ri(-.5,-.5),new ri(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],o=[];for(let i=0,e=t.length;i<e;i++){l(t[i])}function l(t){const l=[],c=void 0!==e.curveSegments?e.curveSegments:12,h=void 0!==e.steps?e.steps:1;let d=void 0!==e.depth?e.depth:1,f=void 0===e.bevelEnabled||e.bevelEnabled,m=void 0!==e.bevelThickness?e.bevelThickness:.2,v=void 0!==e.bevelSize?e.bevelSize:m-.1,y=void 0!==e.bevelOffset?e.bevelOffset:0,x=void 0!==e.bevelSegments?e.bevelSegments:3;const _=e.extrudePath,M=void 0!==e.UVGenerator?e.UVGenerator:dh;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=e.amount);let w,S,T,E,A,L=!1;_&&(w=_.getSpacedPoints(h),L=!0,f=!1,S=_.computeFrenetFrames(h,!1),T=new bi,E=new bi,A=new bi),f||(x=0,m=0,v=0,y=0);const R=t.extractPoints(c);let C=R.shape;const P=R.holes;if(!lh.isClockWise(C)){C=C.reverse();for(let t=0,e=P.length;t<e;t++){const e=P[t];lh.isClockWise(e)&&(P[t]=e.reverse())}}const D=lh.triangulateShape(C,P),I=C;for(let t=0,e=P.length;t<e;t++){const e=P[t];C=C.concat(e)}function N(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const z=C.length,B=D.length;function F(t,e,n){let r,o,l;const c=t.x-e.x,h=t.y-e.y,d=n.x-t.x,f=n.y-t.y,m=c*c+h*h,v=c*f-h*d;if(Math.abs(v)>Number.EPSILON){const v=Math.sqrt(m),y=Math.sqrt(d*d+f*f),x=e.x-h/v,_=e.y+c/v,M=((n.x-f/y-x)*f-(n.y+d/y-_)*d)/(c*f-h*d);r=x+c*M-t.x,o=_+h*M-t.y;const w=r*r+o*o;if(w<=2)return new ri(r,o);l=Math.sqrt(w/2)}else{let t=!1;c>Number.EPSILON?d>Number.EPSILON&&(t=!0):c<-Number.EPSILON?d<-Number.EPSILON&&(t=!0):Math.sign(h)===Math.sign(f)&&(t=!0),t?(r=-h,o=c,l=Math.sqrt(m)):(r=c,o=h,l=Math.sqrt(m/2))}return new ri(r/l,o/l)}const O=[];for(let i=0,t=I.length,e=t-1,n=i+1;i<t;i++,e++,n++)e===t&&(e=0),n===t&&(n=0),O[i]=F(I[i],I[e],I[n]);const U=[];let H,G=O.concat();for(let t=0,e=P.length;t<e;t++){const e=P[t];H=[];for(let i=0,t=e.length,n=t-1,r=i+1;i<t;i++,n++,r++)n===t&&(n=0),r===t&&(r=0),H[i]=F(e[i],e[n],e[r]);U.push(H),G=G.concat(H)}for(let b=0;b<x;b++){const t=b/x,e=m*Math.cos(t*Math.PI/2),n=v*Math.sin(t*Math.PI/2)+y;for(let i=0,t=I.length;i<t;i++){const t=N(I[i],O[i],n);W(t.x,t.y,-e)}for(let t=0,r=P.length;t<r;t++){const r=P[t];H=U[t];for(let i=0,t=r.length;i<t;i++){const t=N(r[i],H[i],n);W(t.x,t.y,-e)}}}const k=v+y;for(let i=0;i<z;i++){const t=f?N(C[i],G[i],k):C[i];L?(E.copy(S.normals[0]).multiplyScalar(t.x),T.copy(S.binormals[0]).multiplyScalar(t.y),A.copy(w[0]).add(E).add(T),W(A.x,A.y,A.z)):W(t.x,t.y,0)}for(let s=1;s<=h;s++)for(let i=0;i<z;i++){const t=f?N(C[i],G[i],k):C[i];L?(E.copy(S.normals[s]).multiplyScalar(t.x),T.copy(S.binormals[s]).multiplyScalar(t.y),A.copy(w[s]).add(E).add(T),W(A.x,A.y,A.z)):W(t.x,t.y,d/h*s)}for(let b=x-1;b>=0;b--){const t=b/x,e=m*Math.cos(t*Math.PI/2),n=v*Math.sin(t*Math.PI/2)+y;for(let i=0,t=I.length;i<t;i++){const t=N(I[i],O[i],n);W(t.x,t.y,d+e)}for(let t=0,r=P.length;t<r;t++){const r=P[t];H=U[t];for(let i=0,t=r.length;i<t;i++){const t=N(r[i],H[i],n);L?W(t.x,t.y+w[h-1].y,w[h-1].x+e):W(t.x,t.y,d+e)}}}function V(t,e){let i=t.length;for(;--i>=0;){const n=i;let r=i-1;r<0&&(r=t.length-1);for(let s=0,t=h+2*x;s<t;s++){const t=z*s,o=z*(s+1);X(e+n+t,e+r+t,e+r+o,e+n+o)}}}function W(t,e,n){l.push(t),l.push(e),l.push(n)}function j(a,b,t){J(a),J(b),J(t);const e=r.length/3,o=M.generateTopUV(n,r,e-3,e-2,e-1);Y(o[0]),Y(o[1]),Y(o[2])}function X(a,b,t,e){J(a),J(b),J(e),J(b),J(t),J(e);const o=r.length/3,l=M.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);Y(l[0]),Y(l[1]),Y(l[3]),Y(l[1]),Y(l[2]),Y(l[3])}function J(t){r.push(l[3*t+0]),r.push(l[3*t+1]),r.push(l[3*t+2])}function Y(t){o.push(t.x),o.push(t.y)}!function(){const t=r.length/3;if(f){let t=0,e=z*t;for(let i=0;i<B;i++){const t=D[i];j(t[2]+e,t[1]+e,t[0]+e)}t=h+2*x,e=z*t;for(let i=0;i<B;i++){const t=D[i];j(t[0]+e,t[1]+e,t[2]+e)}}else{for(let i=0;i<B;i++){const t=D[i];j(t[2],t[1],t[0])}for(let i=0;i<B;i++){const t=D[i];j(t[0]+z*h,t[1]+z*h,t[2]+z*h)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;V(I,e),e+=I.length;for(let t=0,n=P.length;t<n;t++){const n=P[t];V(n,e),e+=n.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new as(r,3)),this.setAttribute("uv",new as(o,2)),this.computeVertexNormals()}toJSON(){const data=super.toJSON();return function(t,e,data){if(data.shapes=[],Array.isArray(t))for(let i=0,e=t.length;i<e;i++){const e=t[i];data.shapes.push(e.uuid)}else data.shapes.push(t.uuid);void 0!==e.extrudePath&&(data.options.extrudePath=e.extrudePath.toJSON());return data}(this.parameters.shapes,this.parameters.options,data)}static fromJSON(data,t){const e=[];for(let n=0,r=data.shapes.length;n<r;n++){const r=t[data.shapes[n]];e.push(r)}const n=data.options.extrudePath;return void 0!==n&&(data.options.extrudePath=(new Iu[n.type]).fromJSON(n)),new hh(e,data.options)}}const dh={generateTopUV:function(t,e,n,r,o){const l=e[3*n],c=e[3*n+1],h=e[3*r],d=e[3*r+1],f=e[3*o],m=e[3*o+1];return[new ri(l,c),new ri(h,d),new ri(f,m)]},generateSideWallUV:function(t,e,n,r,o,l){const c=e[3*n],h=e[3*n+1],d=e[3*n+2],f=e[3*r],m=e[3*r+1],v=e[3*r+2],y=e[3*o],x=e[3*o+1],_=e[3*o+2],M=e[3*l],w=e[3*l+1],S=e[3*l+2];return Math.abs(h-m)<Math.abs(c-f)?[new ri(c,1-d),new ri(f,1-v),new ri(y,1-_),new ri(M,1-S)]:[new ri(h,1-d),new ri(m,1-v),new ri(x,1-_),new ri(w,1-S)]}};class ph extends ou{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(data){return new ph(data.radius,data.detail)}}class fh extends ms{constructor(t=[new ri(0,.5),new ri(.5,0),new ri(0,-.5)],e=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e),r=Qn(r,0,2*Math.PI);const o=[],l=[],c=[],h=1/e,d=new bi,f=new ri;for(let i=0;i<=e;i++){const o=n+i*h*r,m=Math.sin(o),v=Math.cos(o);for(let n=0;n<=t.length-1;n++)d.x=t[n].x*m,d.y=t[n].y,d.z=t[n].x*v,l.push(d.x,d.y,d.z),f.x=i/e,f.y=n/(t.length-1),c.push(f.x,f.y)}for(let i=0;i<e;i++)for(let e=0;e<t.length-1;e++){const base=e+i*t.length,a=base,b=base+t.length,n=base+t.length+1,r=base+1;o.push(a,b,r),o.push(b,n,r)}if(this.setIndex(o),this.setAttribute("position",new as(l,3)),this.setAttribute("uv",new as(c,2)),this.computeVertexNormals(),r===2*Math.PI){const n=this.attributes.normal.array,r=new bi,o=new bi,l=new bi,base=e*t.length*3;for(let i=0,e=0;i<t.length;i++,e+=3)r.x=n[e+0],r.y=n[e+1],r.z=n[e+2],o.x=n[base+e+0],o.y=n[base+e+1],o.z=n[base+e+2],l.addVectors(r,o).normalize(),n[e+0]=n[base+e+0]=l.x,n[e+1]=n[base+e+1]=l.y,n[e+2]=n[base+e+2]=l.z}}static fromJSON(data){return new fh(data.points,data.segments,data.phiStart,data.phiLength)}}class mh extends ou{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(data){return new mh(data.radius,data.detail)}}class gh extends ms{constructor(t=.5,e=1,n=8,r=1,o=0,l=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:o,thetaLength:l},n=Math.max(3,n);const c=[],h=[],d=[],f=[];let m=t;const v=(e-t)/(r=Math.max(1,r)),y=new bi,x=new ri;for(let t=0;t<=r;t++){for(let i=0;i<=n;i++){const t=o+i/n*l;y.x=m*Math.cos(t),y.y=m*Math.sin(t),h.push(y.x,y.y,y.z),d.push(0,0,1),x.x=(y.x/e+1)/2,x.y=(y.y/e+1)/2,f.push(x.x,x.y)}m+=v}for(let t=0;t<r;t++){const e=t*(n+1);for(let i=0;i<n;i++){const t=i+e,a=t,b=t+n+1,r=t+n+2,o=t+1;c.push(a,b,o),c.push(b,r,o)}}this.setIndex(c),this.setAttribute("position",new as(h,3)),this.setAttribute("normal",new as(d,3)),this.setAttribute("uv",new as(f,2))}static fromJSON(data){return new gh(data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength)}}class vh extends ms{constructor(t=new Bu([new ri(0,.5),new ri(-.5,-.5),new ri(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],o=[],l=[];let c=0,h=0;if(!1===Array.isArray(t))d(t);else for(let i=0;i<t.length;i++)d(t[i]),this.addGroup(c,h,i),c+=h,h=0;function d(t){const c=r.length/3,d=t.extractPoints(e);let f=d.shape;const m=d.holes;!1===lh.isClockWise(f)&&(f=f.reverse());for(let i=0,t=m.length;i<t;i++){const t=m[i];!0===lh.isClockWise(t)&&(m[i]=t.reverse())}const v=lh.triangulateShape(f,m);for(let i=0,t=m.length;i<t;i++){const t=m[i];f=f.concat(t)}for(let i=0,t=f.length;i<t;i++){const t=f[i];r.push(t.x,t.y,0),o.push(0,0,1),l.push(t.x,t.y)}for(let i=0,t=v.length;i<t;i++){const t=v[i],a=t[0]+c,b=t[1]+c,e=t[2]+c;n.push(a,b,e),h+=3}}this.setIndex(n),this.setAttribute("position",new as(r,3)),this.setAttribute("normal",new as(o,3)),this.setAttribute("uv",new as(l,2))}toJSON(){const data=super.toJSON();return function(t,data){if(data.shapes=[],Array.isArray(t))for(let i=0,e=t.length;i<e;i++){const e=t[i];data.shapes.push(e.uuid)}else data.shapes.push(t.uuid);return data}(this.parameters.shapes,data)}static fromJSON(data,t){const e=[];for(let n=0,r=data.shapes.length;n<r;n++){const r=t[data.shapes[n]];e.push(r)}return new vh(e,data.curveSegments)}}class yh extends ms{constructor(t=1,e=32,n=16,r=0,o=2*Math.PI,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let d=0;const f=[],m=new bi,v=new bi,y=[],x=[],_=[],M=[];for(let y=0;y<=n;y++){const w=[],S=y/n;let T=0;0==y&&0==l?T=.5/e:y==n&&h==Math.PI&&(T=-.5/e);for(let n=0;n<=e;n++){const u=n/e;m.x=-t*Math.cos(r+u*o)*Math.sin(l+S*c),m.y=t*Math.cos(l+S*c),m.z=t*Math.sin(r+u*o)*Math.sin(l+S*c),x.push(m.x,m.y,m.z),v.copy(m).normalize(),_.push(v.x,v.y,v.z),M.push(u+T,1-S),w.push(d++)}f.push(w)}for(let t=0;t<n;t++)for(let r=0;r<e;r++){const a=f[t][r+1],b=f[t][r],e=f[t+1][r],o=f[t+1][r+1];(0!==t||l>0)&&y.push(a,b,o),(t!==n-1||h<Math.PI)&&y.push(b,e,o)}this.setIndex(y),this.setAttribute("position",new as(x,3)),this.setAttribute("normal",new as(_,3)),this.setAttribute("uv",new as(M,2))}static fromJSON(data){return new yh(data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength)}}class xh extends ou{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(data){return new xh(data.radius,data.detail)}}class _h extends ms{constructor(t=1,e=.4,n=8,r=6,o=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:o},n=Math.floor(n),r=Math.floor(r);const l=[],c=[],h=[],d=[],f=new bi,m=new bi,v=new bi;for(let l=0;l<=n;l++)for(let i=0;i<=r;i++){const u=i/r*o,y=l/n*Math.PI*2;m.x=(t+e*Math.cos(y))*Math.cos(u),m.y=(t+e*Math.cos(y))*Math.sin(u),m.z=e*Math.sin(y),c.push(m.x,m.y,m.z),f.x=t*Math.cos(u),f.y=t*Math.sin(u),v.subVectors(m,f).normalize(),h.push(v.x,v.y,v.z),d.push(i/r),d.push(l/n)}for(let t=1;t<=n;t++)for(let i=1;i<=r;i++){const a=(r+1)*t+i-1,b=(r+1)*(t-1)+i-1,e=(r+1)*(t-1)+i,n=(r+1)*t+i;l.push(a,b,n),l.push(b,e,n)}this.setIndex(l),this.setAttribute("position",new as(c,3)),this.setAttribute("normal",new as(h,3)),this.setAttribute("uv",new as(d,2))}static fromJSON(data){return new _h(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc)}}class Mh extends ms{constructor(t=1,e=.4,n=64,r=8,p=2,q=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:p,q:q},n=Math.floor(n),r=Math.floor(r);const o=[],l=[],c=[],h=[],d=new bi,f=new bi,m=new bi,v=new bi,y=new bi,x=new bi,_=new bi;for(let i=0;i<=n;++i){const u=i/n*p*Math.PI*2;M(u,p,q,t,m),M(u+.01,p,q,t,v),x.subVectors(v,m),_.addVectors(v,m),y.crossVectors(x,_),_.crossVectors(y,x),y.normalize(),_.normalize();for(let t=0;t<=r;++t){const o=t/r*Math.PI*2,v=-e*Math.cos(o),x=e*Math.sin(o);d.x=m.x+(v*_.x+x*y.x),d.y=m.y+(v*_.y+x*y.y),d.z=m.z+(v*_.z+x*y.z),l.push(d.x,d.y,d.z),f.subVectors(d,m).normalize(),c.push(f.x,f.y,f.z),h.push(i/n),h.push(t/r)}}for(let t=1;t<=n;t++)for(let i=1;i<=r;i++){const a=(r+1)*(t-1)+(i-1),b=(r+1)*t+(i-1),e=(r+1)*t+i,n=(r+1)*(t-1)+i;o.push(a,b,n),o.push(b,e,n)}function M(u,p,q,t,e){const n=Math.cos(u),r=Math.sin(u),o=q/p*u,l=Math.cos(o);e.x=t*(2+l)*.5*n,e.y=t*(2+l)*r*.5,e.z=t*Math.sin(o)*.5}this.setIndex(o),this.setAttribute("position",new as(l,3)),this.setAttribute("normal",new as(c,3)),this.setAttribute("uv",new as(h,2))}static fromJSON(data){return new Mh(data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q)}}class bh extends ms{constructor(path=new Pu(new bi(-1,-1,0),new bi(-1,1,0),new bi(1,1,0)),t=64,e=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:path,tubularSegments:t,radius:e,radialSegments:n,closed:r};const o=path.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const l=new bi,c=new bi,h=new ri;let d=new bi;const f=[],m=[],v=[],y=[];function x(i){d=path.getPointAt(i/t,d);const r=o.normals[i],h=o.binormals[i];for(let t=0;t<=n;t++){const o=t/n*Math.PI*2,v=Math.sin(o),y=-Math.cos(o);c.x=y*r.x+v*h.x,c.y=y*r.y+v*h.y,c.z=y*r.z+v*h.z,c.normalize(),m.push(c.x,c.y,c.z),l.x=d.x+e*c.x,l.y=d.y+e*c.y,l.z=d.z+e*c.z,f.push(l.x,l.y,l.z)}}!function(){for(let i=0;i<t;i++)x(i);x(!1===r?t:0),function(){for(let i=0;i<=t;i++)for(let e=0;e<=n;e++)h.x=i/t,h.y=e/n,v.push(h.x,h.y)}(),function(){for(let e=1;e<=t;e++)for(let i=1;i<=n;i++){const a=(n+1)*(e-1)+(i-1),b=(n+1)*e+(i-1),t=(n+1)*e+i,r=(n+1)*(e-1)+i;y.push(a,b,r),y.push(b,t,r)}}()}(),this.setIndex(y),this.setAttribute("position",new as(f,3)),this.setAttribute("normal",new as(m,3)),this.setAttribute("uv",new as(v,2))}toJSON(){const data=super.toJSON();return data.path=this.parameters.path.toJSON(),data}static fromJSON(data){return new bh((new Iu[data.path.type]).fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed)}}class wh extends ms{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,r=new bi,o=new bi;if(null!==t.index){const l=t.attributes.position,c=t.index;let h=t.groups;0===h.length&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let t=0,ol=h.length;t<ol;++t){const d=h[t],f=d.start;for(let i=f,t=f+d.count;i<t;i+=3)for(let t=0;t<3;t++){const h=c.getX(i+t),d=c.getX(i+(t+1)%3);r.fromBufferAttribute(l,h),o.fromBufferAttribute(l,d),!0===Sh(r,o,n)&&(e.push(r.x,r.y,r.z),e.push(o.x,o.y,o.z))}}}else{const l=t.attributes.position;for(let i=0,t=l.count/3;i<t;i++)for(let t=0;t<3;t++){const c=3*i+t,h=3*i+(t+1)%3;r.fromBufferAttribute(l,c),o.fromBufferAttribute(l,h),!0===Sh(r,o,n)&&(e.push(r.x,r.y,r.z),e.push(o.x,o.y,o.z))}}this.setAttribute("position",new as(e,3))}}}function Sh(t,e,n){const r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,o=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(r)&&!0!==n.has(o)&&(n.add(r,o),!0)}var Th=Object.freeze({__proto__:null,BoxGeometry:zs,BoxBufferGeometry:zs,CircleGeometry:ru,CircleBufferGeometry:ru,ConeGeometry:au,ConeBufferGeometry:au,CylinderGeometry:su,CylinderBufferGeometry:su,DodecahedronGeometry:lu,DodecahedronBufferGeometry:lu,EdgesGeometry:pu,ExtrudeGeometry:hh,ExtrudeBufferGeometry:hh,IcosahedronGeometry:ph,IcosahedronBufferGeometry:ph,LatheGeometry:fh,LatheBufferGeometry:fh,OctahedronGeometry:mh,OctahedronBufferGeometry:mh,PlaneGeometry:ea,PlaneBufferGeometry:ea,PolyhedronGeometry:ou,PolyhedronBufferGeometry:ou,RingGeometry:gh,RingBufferGeometry:gh,ShapeGeometry:vh,ShapeBufferGeometry:vh,SphereGeometry:yh,SphereBufferGeometry:yh,TetrahedronGeometry:xh,TetrahedronBufferGeometry:xh,TorusGeometry:_h,TorusBufferGeometry:_h,TorusKnotGeometry:Mh,TorusKnotBufferGeometry:Mh,TubeGeometry:bh,TubeBufferGeometry:bh,WireframeGeometry:wh});class Eh extends Hr{constructor(t){super(),this.type="ShadowMaterial",this.color=new Xr(0),this.transparent=!0,this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this}}Eh.prototype.isShadowMaterial=!0;class Ah extends Hr{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Xr(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gn,this.normalScale=new ri(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(source){return super.copy(source),this.defines={STANDARD:""},this.color.copy(source.color),this.roughness=source.roughness,this.metalness=source.metalness,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.roughnessMap=source.roughnessMap,this.metalnessMap=source.metalnessMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.envMapIntensity=source.envMapIntensity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.flatShading=source.flatShading,this}}Ah.prototype.isMeshStandardMaterial=!0;class Lh extends Ah{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ri(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Qn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new Xr(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Xr(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Xr(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(source){return super.copy(source),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=source.clearcoat,this.clearcoatMap=source.clearcoatMap,this.clearcoatRoughness=source.clearcoatRoughness,this.clearcoatRoughnessMap=source.clearcoatRoughnessMap,this.clearcoatNormalMap=source.clearcoatNormalMap,this.clearcoatNormalScale.copy(source.clearcoatNormalScale),this.ior=source.ior,this.sheen=source.sheen,this.sheenColor.copy(source.sheenColor),this.sheenColorMap=source.sheenColorMap,this.sheenRoughness=source.sheenRoughness,this.sheenRoughnessMap=source.sheenRoughnessMap,this.transmission=source.transmission,this.transmissionMap=source.transmissionMap,this.thickness=source.thickness,this.thicknessMap=source.thicknessMap,this.attenuationDistance=source.attenuationDistance,this.attenuationColor.copy(source.attenuationColor),this.specularIntensity=source.specularIntensity,this.specularIntensityMap=source.specularIntensityMap,this.specularColor.copy(source.specularColor),this.specularColorMap=source.specularColorMap,this}}Lh.prototype.isMeshPhysicalMaterial=!0;class Rh extends Hr{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Xr(16777215),this.specular=new Xr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gn,this.normalScale=new ri(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=it,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.specular.copy(source.specular),this.shininess=source.shininess,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.flatShading=source.flatShading,this}}Rh.prototype.isMeshPhongMaterial=!0;class Ch extends Hr{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Xr(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gn,this.normalScale=new ri(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.gradientMap=source.gradientMap,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this}}Ch.prototype.isMeshToonMaterial=!0;class Ph extends Hr{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gn,this.normalScale=new ri(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(source){return super.copy(source),this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.flatShading=source.flatShading,this}}Ph.prototype.isMeshNormalMaterial=!0;class Dh extends Hr{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Xr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=it,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this}}Dh.prototype.isMeshLambertMaterial=!0;class Ih extends Hr{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Xr(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gn,this.normalScale=new ri(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(source){return super.copy(source),this.defines={MATCAP:""},this.color.copy(source.color),this.matcap=source.matcap,this.map=source.map,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.flatShading=source.flatShading,this}}Ih.prototype.isMeshMatcapMaterial=!0;class Nh extends Fc{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(source){return super.copy(source),this.scale=source.scale,this.dashSize=source.dashSize,this.gapSize=source.gapSize,this}}Nh.prototype.isLineDashedMaterial=!0;var zh=Object.freeze({__proto__:null,ShadowMaterial:Eh,SpriteMaterial:ec,RawShaderMaterial:da,ShaderMaterial:Us,PointsMaterial:Jc,MeshPhysicalMaterial:Lh,MeshStandardMaterial:Ah,MeshPhongMaterial:Rh,MeshToonMaterial:Ch,MeshNormalMaterial:Ph,MeshLambertMaterial:Dh,MeshDepthMaterial:Nl,MeshDistanceMaterial:zl,MeshBasicMaterial:Jr,MeshMatcapMaterial:Ih,LineDashedMaterial:Nh,LineBasicMaterial:Fc,Material:Hr});const Bh={arraySlice:function(t,e,n){return Bh.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort((function(i,e){return t[i]-t[e]})),n},sortedArray:function(t,e,n){const r=t.length,o=new t.constructor(r);for(let i=0,l=0;l!==r;++i){const r=n[i]*e;for(let n=0;n!==e;++n)o[l++]=t[r+n]}return o},flattenJSON:function(t,e,n,r){let i=1,o=t[0];for(;void 0!==o&&void 0===o[r];)o=t[i++];if(void 0===o)return;let l=o[r];if(void 0!==l)if(Array.isArray(l))do{l=o[r],void 0!==l&&(e.push(o.time),n.push.apply(n,l)),o=t[i++]}while(void 0!==o);else if(void 0!==l.toArray)do{l=o[r],void 0!==l&&(e.push(o.time),l.toArray(n,n.length)),o=t[i++]}while(void 0!==o);else do{l=o[r],void 0!==l&&(e.push(o.time),n.push(l)),o=t[i++]}while(void 0!==o)},subclip:function(t,e,n,r,o=30){const l=t.clone();l.name=e;const c=[];for(let i=0;i<l.tracks.length;++i){const track=l.tracks[i],t=track.getValueSize(),e=[],h=[];for(let l=0;l<track.times.length;++l){const c=track.times[l]*o;if(!(c<n||c>=r)){e.push(track.times[l]);for(let e=0;e<t;++e)h.push(track.values[l*t+e])}}0!==e.length&&(track.times=Bh.convertArray(e,track.times.constructor),track.values=Bh.convertArray(h,track.values.constructor),c.push(track))}l.tracks=c;let h=1/0;for(let i=0;i<l.tracks.length;++i)h>l.tracks[i].times[0]&&(h=l.tracks[i].times[0]);for(let i=0;i<l.tracks.length;++i)l.tracks[i].shift(-1*h);return l.resetDuration(),l},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const o=n.tracks.length,l=e/r;for(let i=0;i<o;++i){const e=n.tracks[i],r=e.ValueTypeName;if("bool"===r||"string"===r)continue;const o=t.tracks.find((function(track){return track.name===e.name&&track.ValueTypeName===r}));if(void 0===o)continue;let c=0;const h=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);let d=0;const f=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const m=e.times.length-1;let v;if(l<=e.times[0]){const t=c,n=h-c;v=Bh.arraySlice(e.values,t,n)}else if(l>=e.times[m]){const t=m*h+c,n=t+h-c;v=Bh.arraySlice(e.values,t,n)}else{const t=e.createInterpolant(),n=c,r=h-c;t.evaluate(l),v=Bh.arraySlice(t.resultBuffer,n,r)}if("quaternion"===r){(new Mi).fromArray(v).normalize().conjugate().toArray(v)}const y=o.times.length;for(let t=0;t<y;++t){const e=t*f+d;if("quaternion"===r)Mi.multiplyQuaternionsFlat(o.values,e,v,0,o.values,e);else{const t=f-2*d;for(let n=0;n<t;++n)o.values[e+n]-=v[n]}}}return t.blendMode=nn,t}};class Fh{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<r)){for(let l=n+2;;){if(void 0===r){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,o)}if(n===l)break;if(o=r,r=e[++n],t<r)break e}l=e.length;break n}if(t>=o)break t;{const c=e[1];t<c&&(n=2,o=c);for(let l=n-2;;){if(void 0===o)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===l)break;if(r=o,o=e[--n-1],t>=o)break e}l=n,n=0}}for(;n<l;){const r=n+l>>>1;t<e[r]?l=r:n=r+1}if(r=e[n],o=e[n-1],void 0===o)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,o,t)}this._cachedIndex=n,this.intervalChanged_(n,o,r)}return this.interpolate_(n,o,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,o=t*r;for(let i=0;i!==r;++i)e[i]=n[o+i];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Fh.prototype.beforeStart_=Fh.prototype.copySampleValue_,Fh.prototype.afterEnd_=Fh.prototype.copySampleValue_;class Oh extends Fh{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ke,endingEnd:Ke}}intervalChanged_(t,e,n){const r=this.parameterPositions;let o=t-2,l=t+1,c=r[o],h=r[l];if(void 0===c)switch(this.getSettings_().endingStart){case $e:o=t,c=2*e-n;break;case tn:o=r.length-2,c=e+r[o]-r[o+1];break;default:o=t,c=n}if(void 0===h)switch(this.getSettings_().endingEnd){case $e:l=t,h=2*n-e;break;case tn:l=1,h=n+r[1]-r[0];break;default:l=t-1,h=e}const d=.5*(n-e),f=this.valueSize;this._weightPrev=d/(e-c),this._weightNext=d/(h-n),this._offsetPrev=o*f,this._offsetNext=l*f}interpolate_(t,e,n,r){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,d=h-c,f=this._offsetPrev,m=this._offsetNext,v=this._weightPrev,y=this._weightNext,p=(n-e)/(r-e),x=p*p,_=x*p,M=-v*_+2*v*x-v*p,w=(1+v)*_+(-1.5-2*v)*x+(-.5+v)*p+1,S=(-1-y)*_+(1.5+y)*x+.5*p,T=y*_-y*x;for(let i=0;i!==c;++i)o[i]=M*l[f+i]+w*l[d+i]+S*l[h+i]+T*l[m+i];return o}}class Uh extends Fh{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,d=h-c,f=(n-e)/(r-e),m=1-f;for(let i=0;i!==c;++i)o[i]=l[d+i]*m+l[h+i]*f;return o}}class Hh extends Fh{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class Gh{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Bh.convertArray(e,this.TimeBufferType),this.values=Bh.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(track){const t=track.constructor;let e;if(t.toJSON!==this.toJSON)e=t.toJSON(track);else{e={name:track.name,times:Bh.convertArray(track.times,Array),values:Bh.convertArray(track.values,Array)};const t=track.getInterpolation();t!==track.DefaultInterpolation&&(e.interpolation=t)}return e.type=track.ValueTypeName,e}InterpolantFactoryMethodDiscrete(t){return new Hh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Uh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Oh(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Ye:e=this.InterpolantFactoryMethodDiscrete;break;case Ze:e=this.InterpolantFactoryMethodLinear;break;case Qe:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ye;case this.InterpolantFactoryMethodLinear:return Ze;case this.InterpolantFactoryMethodSmooth:return Qe}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const n=this.times,r=n.length;let o=0,l=r-1;for(;o!==r&&n[o]<t;)++o;for(;-1!==l&&n[l]>e;)--l;if(++l,0!==o||l!==r){o>=l&&(l=Math.max(l,1),o=l-1);const t=this.getValueSize();this.times=Bh.arraySlice(n,o,l),this.values=Bh.arraySlice(this.values,o*t,l*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,o=n.length;0===o&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let i=0;i!==o;i++){const e=n[i];if("number"==typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,e),t=!1;break}if(null!==l&&l>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,e,l),t=!1;break}l=e}if(void 0!==r&&Bh.isTypedArray(r))for(let i=0,e=r.length;i!==e;++i){const e=r[i];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,e),t=!1;break}}return t}optimize(){const t=Bh.arraySlice(this.times),e=Bh.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===Qe,o=t.length-1;let l=1;for(let i=1;i<o;++i){let o=!1;const time=t[i];if(time!==t[i+1]&&(1!==i||time!==t[0]))if(r)o=!0;else{const t=i*n,r=t-n,l=t+n;for(let c=0;c!==n;++c){const n=e[t+c];if(n!==e[r+c]||n!==e[l+c]){o=!0;break}}}if(o){if(i!==l){t[l]=t[i];const r=i*n,o=l*n;for(let t=0;t!==n;++t)e[o+t]=e[r+t]}++l}}if(o>0){t[l]=t[o];for(let t=o*n,r=l*n,c=0;c!==n;++c)e[r+c]=e[t+c];++l}return l!==t.length?(this.times=Bh.arraySlice(t,0,l),this.values=Bh.arraySlice(e,0,l*n)):(this.times=t,this.values=e),this}clone(){const t=Bh.arraySlice(this.times,0),e=Bh.arraySlice(this.values,0),track=new(0,this.constructor)(this.name,t,e);return track.createInterpolant=this.createInterpolant,track}}Gh.prototype.TimeBufferType=Float32Array,Gh.prototype.ValueBufferType=Float32Array,Gh.prototype.DefaultInterpolation=Ze;class kh extends Gh{}kh.prototype.ValueTypeName="bool",kh.prototype.ValueBufferType=Array,kh.prototype.DefaultInterpolation=Ye,kh.prototype.InterpolantFactoryMethodLinear=void 0,kh.prototype.InterpolantFactoryMethodSmooth=void 0;class Vh extends Gh{}Vh.prototype.ValueTypeName="color";class Wh extends Gh{}Wh.prototype.ValueTypeName="number";class jh extends Fh{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(r-e);let d=t*c;for(let t=d+c;d!==t;d+=4)Mi.slerpFlat(o,0,l,d-c,l,d,h);return o}}class qh extends Gh{InterpolantFactoryMethodLinear(t){return new jh(this.times,this.values,this.getValueSize(),t)}}qh.prototype.ValueTypeName="quaternion",qh.prototype.DefaultInterpolation=Ze,qh.prototype.InterpolantFactoryMethodSmooth=void 0;class Xh extends Gh{}Xh.prototype.ValueTypeName="string",Xh.prototype.ValueBufferType=Array,Xh.prototype.DefaultInterpolation=Ye,Xh.prototype.InterpolantFactoryMethodLinear=void 0,Xh.prototype.InterpolantFactoryMethodSmooth=void 0;class Jh extends Gh{}Jh.prototype.ValueTypeName="vector";class Yh{constructor(t,e=-1,n,r=en){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=Zn(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let i=0,t=n.length;i!==t;++i)e.push(Zh(n[i]).scale(r));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let i=0,t=n.length;i!==t;++i)e.push(Gh.toJSON(n[i]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const o=e.length,l=[];for(let i=0;i<o;i++){let t=[],c=[];t.push((i+o-1)%o,i,(i+1)%o),c.push(0,1,0);const h=Bh.getKeyframeOrder(t);t=Bh.sortedArray(t,1,h),c=Bh.sortedArray(c,1,h),r||0!==t[0]||(t.push(o),c.push(c[0])),l.push(new Wh(".morphTargetInfluences["+e[i].name+"]",t,c).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},pattern=/^([\w-]*?)([\d]+)$/;for(let i=0,e=t.length;i<e;i++){const e=t[i],n=e.name.match(pattern);if(n&&n.length>1){const t=n[1];let o=r[t];o||(r[t]=o=[]),o.push(e)}}const o=[];for(const t in r)o.push(this.CreateFromMorphTargetSequence(t,r[t],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,o){if(0!==n.length){const l=[],c=[];Bh.flattenJSON(n,l,c,r),0!==l.length&&o.push(new t(e,l,c))}},r=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const d=t.hierarchy||[];for(let t=0;t<d.length;t++){const o=d[t].keys;if(o&&0!==o.length)if(o[0].morphTargets){const t={};let e;for(e=0;e<o.length;e++)if(o[e].morphTargets)for(let n=0;n<o[e].morphTargets.length;n++)t[o[e].morphTargets[n]]=-1;for(const n in t){const t=[],l=[];for(let r=0;r!==o[e].morphTargets.length;++r){const r=o[e];t.push(r.time),l.push(r.morphTarget===n?1:0)}r.push(new Wh(".morphTargetInfluence["+n+"]",t,l))}h=t.length*(l||1)}else{const l=".bones["+e[t].name+"]";n(Jh,l+".position",o,"pos",r),n(qh,l+".quaternion",o,"rot",r),n(Jh,l+".scale",o,"scl",r)}}if(0===r.length)return null;return new this(o,h,r,c)}resetDuration(){let t=0;for(let i=0,e=this.tracks.length;i!==e;++i){const track=this.tracks[i];t=Math.max(t,track.times[track.times.length-1])}return this.duration=t,this}trim(){for(let i=0;i<this.tracks.length;i++)this.tracks[i].trim(0,this.duration);return this}validate(){let t=!0;for(let i=0;i<this.tracks.length;i++)t=t&&this.tracks[i].validate();return t}optimize(){for(let i=0;i<this.tracks.length;i++)this.tracks[i].optimize();return this}clone(){const t=[];for(let i=0;i<this.tracks.length;i++)t.push(this.tracks[i].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Zh(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Wh;case"vector":case"vector2":case"vector3":case"vector4":return Jh;case"color":return Vh;case"quaternion":return qh;case"bool":case"boolean":return kh;case"string":return Xh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Bh.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Qh={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Kh{constructor(t,e,n){const r=this;let o,l=!1,c=0,h=0;const d=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){h++,!1===l&&void 0!==r.onStart&&r.onStart(t,c,h),l=!0},this.itemEnd=function(t){c++,void 0!==r.onProgress&&r.onProgress(t,c,h),c===h&&(l=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return o?o(t):t},this.setURLModifier=function(t){return o=t,this},this.addHandler=function(t,e){return d.push(t,e),this},this.removeHandler=function(t){const e=d.indexOf(t);return-1!==e&&d.splice(e,2),this},this.getHandler=function(t){for(let i=0,e=d.length;i<e;i+=2){const e=d[i],n=d[i+1];if(e.global&&(e.lastIndex=0),e.test(t))return n}return null}}}const $h=new Kh;class ed{constructor(t){this.manager=void 0!==t?t:$h,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,o){n.load(t,r,e,o)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(path){return this.path=path,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const nd={};class id extends ed{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=Qh.get(t);if(void 0!==o)return this.manager.itemStart(t),setTimeout((()=>{e&&e(o),this.manager.itemEnd(t)}),0),o;if(void 0!==nd[t])return void nd[t].push({onLoad:e,onProgress:n,onError:r});nd[t]=[],nd[t].push({onLoad:e,onProgress:n,onError:r});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});fetch(l).then((e=>{if(200===e.status||0===e.status){0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");const n=nd[t],r=e.body.getReader(),o=e.headers.get("Content-Length"),l=o?parseInt(o):0,c=0!==l;let h=0;return new ReadableStream({start(t){!function e(){r.read().then((({done:r,value:o})=>{if(r)t.close();else{h+=o.byteLength;const r=new ProgressEvent("progress",{lengthComputable:c,loaded:h,total:l});for(let i=0,t=n.length;i<t;i++){const t=n[i];t.onProgress&&t.onProgress(r)}t.enqueue(o),e()}}))}()}})}throw Error(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`)})).then((t=>{const e=new Response(t);switch(this.responseType){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((text=>(new DOMParser).parseFromString(text,this.mimeType)));case"json":return e.json();default:return e.text()}})).then((data=>{Qh.add(t,data);const e=nd[t];delete nd[t];for(let i=0,t=e.length;i<t;i++){const t=e[i];t.onLoad&&t.onLoad(data)}this.manager.itemEnd(t)})).catch((e=>{const n=nd[t];delete nd[t];for(let i=0,t=n.length;i<t;i++){const t=n[i];t.onError&&t.onError(e)}this.manager.itemError(t),this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class rd extends ed{constructor(t){super(t)}load(t,e,n,r){const o=this,l=new id(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,(function(text){try{e(o.parse(JSON.parse(text)))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)}parse(t){const e=[];for(let i=0;i<t.length;i++){const n=Yh.parse(t[i]);e.push(n)}return e}}class sd extends ed{constructor(t){super(t)}load(t,e,n,r){const o=this,l=[],c=new nu,h=new id(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let d=0;function f(i){h.load(t[i],(function(t){const n=o.parse(t,!0);l[i]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},d+=1,6===d&&(1===n.mipmapCount&&(c.minFilter=Rt),c.image=l,c.format=n.format,c.needsUpdate=!0,e&&e(c))}),n,r)}if(Array.isArray(t))for(let i=0,e=t.length;i<e;++i)f(i);else h.load(t,(function(t){const n=o.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){l[e]={mipmaps:[]};for(let i=0;i<n.mipmapCount;i++)l[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+i]),l[e].format=n.format,l[e].width=n.width,l[e].height=n.height}c.image=l}else c.image.width=n.width,c.image.height=n.height,c.mipmaps=n.mipmaps;1===n.mipmapCount&&(c.minFilter=Rt),c.format=n.format,c.needsUpdate=!0,e&&e(c)}),n,r);return c}}class ad extends ed{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=Qh.get(t);if(void 0!==l)return o.manager.itemStart(t),setTimeout((function(){e&&e(l),o.manager.itemEnd(t)}),0),l;const image=ui("img");function c(){d(),Qh.add(t,this),e&&e(this),o.manager.itemEnd(t)}function h(e){d(),r&&r(e),o.manager.itemError(t),o.manager.itemEnd(t)}function d(){image.removeEventListener("load",c,!1),image.removeEventListener("error",h,!1)}return image.addEventListener("load",c,!1),image.addEventListener("error",h,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(image.crossOrigin=this.crossOrigin),o.manager.itemStart(t),image.src=t,image}}class od extends ed{constructor(t){super(t)}load(t,e,n,r){const o=new Ws,l=new ad(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(i){l.load(t[i],(function(image){o.images[i]=image,c++,6===c&&(o.needsUpdate=!0,e&&e(o))}),void 0,r)}for(let i=0;i<t.length;++i)h(i);return o}}class ld extends ed{constructor(t){super(t)}load(t,e,n,r){const o=this,l=new Ac,c=new id(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(o.withCredentials),c.load(t,(function(t){const n=o.parse(t);n&&(void 0!==n.image?l.image=n.image:void 0!==n.data&&(l.image.width=n.width,l.image.height=n.height,l.image.data=n.data),l.wrapS=void 0!==n.wrapS?n.wrapS:bt,l.wrapT=void 0!==n.wrapT?n.wrapT:bt,l.magFilter=void 0!==n.magFilter?n.magFilter:Rt,l.minFilter=void 0!==n.minFilter?n.minFilter:Rt,l.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(l.encoding=n.encoding),void 0!==n.flipY&&(l.flipY=n.flipY),void 0!==n.format&&(l.format=n.format),void 0!==n.type&&(l.type=n.type),void 0!==n.mipmaps&&(l.mipmaps=n.mipmaps,l.minFilter=Dt),1===n.mipmapCount&&(l.minFilter=Rt),void 0!==n.generateMipmaps&&(l.generateMipmaps=n.generateMipmaps),l.needsUpdate=!0,e&&e(l,n))}),n,r),l}}class cd extends ed{constructor(t){super(t)}load(t,e,n,r){const o=new mi,l=new ad(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,(function(image){o.image=image,o.needsUpdate=!0,void 0!==e&&e(o)}),n,r),o}}class ud extends Ar{constructor(t,e=1){super(),this.type="Light",this.color=new Xr(t),this.intensity=e}dispose(){}copy(source){return super.copy(source),this.color.copy(source.color),this.intensity=source.intensity,this}toJSON(meta){const data=super.toJSON(meta);return data.object.color=this.color.getHex(),data.object.intensity=this.intensity,void 0!==this.groundColor&&(data.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(data.object.distance=this.distance),void 0!==this.angle&&(data.object.angle=this.angle),void 0!==this.decay&&(data.object.decay=this.decay),void 0!==this.penumbra&&(data.object.penumbra=this.penumbra),void 0!==this.shadow&&(data.object.shadow=this.shadow.toJSON()),data}}ud.prototype.isLight=!0;class hd extends ud{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(Ar.DefaultUp),this.updateMatrix(),this.groundColor=new Xr(e)}copy(source){return ud.prototype.copy.call(this,source),this.groundColor.copy(source.groundColor),this}}hd.prototype.isHemisphereLight=!0;const pd=new $i,fd=new bi,md=new bi;class gd{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ri(512,512),this.map=null,this.mapPass=null,this.matrix=new $i,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ks,this._frameExtents=new ri(1,1),this._viewportCount=1,this._viewports=[new vi(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;fd.setFromMatrixPosition(t.matrixWorld),e.position.copy(fd),md.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(md),e.updateMatrixWorld(),pd.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(pd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(source){return this.camera=source.camera.clone(),this.bias=source.bias,this.radius=source.radius,this.mapSize.copy(source.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const object={};return 0!==this.bias&&(object.bias=this.bias),0!==this.normalBias&&(object.normalBias=this.normalBias),1!==this.radius&&(object.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(object.mapSize=this.mapSize.toArray()),object.camera=this.camera.toJSON(!1).object,delete object.camera.matrix,object}}class vd extends gd{constructor(){super(new Gs(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*Yn*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,o=t.distance||e.far;n===e.fov&&r===e.aspect&&o===e.far||(e.fov=n,e.aspect=r,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(source){return super.copy(source),this.focus=source.focus,this}}vd.prototype.isSpotLightShadow=!0;class yd extends ud{constructor(t,e,n=0,r=Math.PI/3,o=0,l=1){super(t,e),this.type="SpotLight",this.position.copy(Ar.DefaultUp),this.updateMatrix(),this.target=new Ar,this.distance=n,this.angle=r,this.penumbra=o,this.decay=l,this.shadow=new vd}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(source){return super.copy(source),this.distance=source.distance,this.angle=source.angle,this.penumbra=source.penumbra,this.decay=source.decay,this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}yd.prototype.isSpotLight=!0;const xd=new $i,_d=new bi,Md=new bi;class bd extends gd{constructor(){super(new Gs(90,1,.5,500)),this._frameExtents=new ri(4,2),this._viewportCount=6,this._viewports=[new vi(2,1,1,1),new vi(0,1,1,1),new vi(3,1,1,1),new vi(1,1,1,1),new vi(3,0,1,1),new vi(1,0,1,1)],this._cubeDirections=[new bi(1,0,0),new bi(-1,0,0),new bi(0,0,1),new bi(0,0,-1),new bi(0,1,0),new bi(0,-1,0)],this._cubeUps=[new bi(0,1,0),new bi(0,1,0),new bi(0,1,0),new bi(0,1,0),new bi(0,0,1),new bi(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),_d.setFromMatrixPosition(t.matrixWorld),n.position.copy(_d),Md.copy(n.position),Md.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Md),n.updateMatrixWorld(),r.makeTranslation(-_d.x,-_d.y,-_d.z),xd.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(xd)}}bd.prototype.isPointLightShadow=!0;class wd extends ud{constructor(t,e,n=0,r=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new bd}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(source){return super.copy(source),this.distance=source.distance,this.decay=source.decay,this.shadow=source.shadow.clone(),this}}wd.prototype.isPointLight=!0;class Sd extends gd{constructor(){super(new ha(-5,5,5,-5,.5,500))}}Sd.prototype.isDirectionalLightShadow=!0;class Td extends ud{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(Ar.DefaultUp),this.updateMatrix(),this.target=new Ar,this.shadow=new Sd}dispose(){this.shadow.dispose()}copy(source){return super.copy(source),this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}Td.prototype.isDirectionalLight=!0;class Ed extends ud{constructor(t,e){super(t,e),this.type="AmbientLight"}}Ed.prototype.isAmbientLight=!0;class Ad extends ud{constructor(t,e,n=10,r=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(source){return super.copy(source),this.width=source.width,this.height=source.height,this}toJSON(meta){const data=super.toJSON(meta);return data.object.width=this.width,data.object.height=this.height,data}}Ad.prototype.isRectAreaLight=!0;class Ld{constructor(){this.coefficients=[];for(let i=0;i<9;i++)this.coefficients.push(new bi)}set(t){for(let i=0;i<9;i++)this.coefficients[i].copy(t[i]);return this}zero(){for(let i=0;i<9;i++)this.coefficients[i].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*r),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],n*r*1.092548),e.addScaledVector(l[5],r*o*1.092548),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],n*o*1.092548),e.addScaledVector(l[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],1.023328*r),e.addScaledVector(l[2],1.023328*o),e.addScaledVector(l[3],1.023328*n),e.addScaledVector(l[4],.858086*n*r),e.addScaledVector(l[5],.858086*r*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],.858086*n*o),e.addScaledVector(l[8],.429043*(n*n-r*r)),e}add(t){for(let i=0;i<9;i++)this.coefficients[i].add(t.coefficients[i]);return this}addScaledSH(t,s){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],s);return this}scale(s){for(let i=0;i<9;i++)this.coefficients[i].multiplyScalar(s);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let i=0;i<9;i++)if(!this.coefficients[i].equals(t.coefficients[i]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,r=t.y,o=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-r*r)}}Ld.prototype.isSphericalHarmonics3=!0;class Rd extends ud{constructor(t=new Ld,e=1){super(void 0,e),this.sh=t}copy(source){return super.copy(source),this.sh.copy(source.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(meta){const data=super.toJSON(meta);return data.object.sh=this.sh.toArray(),data}}Rd.prototype.isLightProbe=!0;class Cd extends ed{constructor(t){super(t),this.textures={}}load(t,e,n,r){const o=this,l=new id(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,(function(text){try{e(o.parse(JSON.parse(text)))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=new zh[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=t.sheen),void 0!==t.sheenColor&&(r.sheenColor=(new Xr).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(r.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.specularIntensity&&(r.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.thickness&&(r.thickness=t.thickness),void 0!==t.attenuationDistance&&(r.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.format&&(r.format=t.format),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const o=t.uniforms[e];switch(r.uniforms[e]={},o.type){case"t":r.uniforms[e].value=n(o.value);break;case"c":r.uniforms[e].value=(new Xr).setHex(o.value);break;case"v2":r.uniforms[e].value=(new ri).fromArray(o.value);break;case"v3":r.uniforms[e].value=(new bi).fromArray(o.value);break;case"v4":r.uniforms[e].value=(new vi).fromArray(o.value);break;case"m3":r.uniforms[e].value=(new si).fromArray(o.value);break;case"m4":r.uniforms[e].value=(new $i).fromArray(o.value);break;default:r.uniforms[e].value=o.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)r.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new ri).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(r.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(r.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new ri).fromArray(t.clearcoatNormalScale)),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(r.thicknessMap=n(t.thicknessMap)),void 0!==t.sheenColorMap&&(r.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(r.sheenRoughnessMap=n(t.sheenRoughnessMap)),r}setTextures(t){return this.textures=t,this}}class Pd{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let s="";for(let i=0,e=t.length;i<e;i++)s+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(s))}catch(t){return s}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}static resolveURL(t,path){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(path)&&/^\//.test(t)&&(path=path.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:path+t)}}class Dd extends ms{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(source){return super.copy(source),this.instanceCount=source.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const data=super.toJSON(this);return data.instanceCount=this.instanceCount,data.isInstancedBufferGeometry=!0,data}}Dd.prototype.isInstancedBufferGeometry=!0;class Id extends ed{constructor(t){super(t)}load(t,e,n,r){const o=this,l=new id(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,(function(text){try{e(o.parse(JSON.parse(text)))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)}parse(t){const e={},n={};function r(t,r){if(void 0!==e[r])return e[r];const o=t.interleavedBuffers[r],l=function(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers[e],o=new Uint32Array(r).buffer;return n[e]=o,o}(t,o.buffer),c=ci(o.type,l),h=new Kl(c,o.stride);return h.uuid=o.uuid,e[r]=h,h}const o=t.isInstancedBufferGeometry?new Dd:new ms,l=t.data.index;if(void 0!==l){const t=ci(l.type,l.array);o.setIndex(new Qr(t,1))}const c=t.data.attributes;for(const e in c){const n=c[e];let l;if(n.isInterleavedBufferAttribute){const e=r(t.data,n.data);l=new tc(e,n.itemSize,n.offset,n.normalized)}else{const t=ci(n.type,n.array);l=new(n.isInstancedBufferAttribute?Pc:Qr)(t,n.itemSize,n.normalized)}void 0!==n.name&&(l.name=n.name),void 0!==n.usage&&l.setUsage(n.usage),void 0!==n.updateRange&&(l.updateRange.offset=n.updateRange.offset,l.updateRange.count=n.updateRange.count),o.setAttribute(e,l)}const h=t.data.morphAttributes;if(h)for(const e in h){const n=h[e],l=[];for(let i=0,e=n.length;i<e;i++){const e=n[i];let o;if(e.isInterleavedBufferAttribute){const n=r(t.data,e.data);o=new tc(n,e.itemSize,e.offset,e.normalized)}else{const t=ci(e.type,e.array);o=new Qr(t,e.itemSize,e.normalized)}void 0!==e.name&&(o.name=e.name),l.push(o)}o.morphAttributes[e]=l}t.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const d=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==d)for(let i=0,t=d.length;i!==t;++i){const t=d[i];o.addGroup(t.start,t.count,t.materialIndex)}const f=t.data.boundingSphere;if(void 0!==f){const t=new bi;void 0!==f.center&&t.fromArray(f.center),o.boundingSphere=new Wi(t,f.radius)}return t.name&&(o.name=t.name),t.userData&&(o.userData=t.userData),o}}class Nd extends ed{constructor(t){super(t)}load(t,e,n,r){const o=this,path=""===this.path?Pd.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||path;const l=new id(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,(function(text){let n=null;try{n=JSON.parse(text)}catch(e){return void 0!==r&&r(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const l=n.metadata;void 0!==l&&void 0!==l.type&&"geometry"!==l.type.toLowerCase()?o.parse(n,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,r)}async loadAsync(t,e){const path=""===this.path?Pd.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||path;const n=new id(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials);const text=await n.loadAsync(t,e),r=JSON.parse(text),o=r.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(r)}parse(t,e){const n=this.parseAnimations(t.animations),r=this.parseShapes(t.shapes),o=this.parseGeometries(t.geometries,r),l=this.parseImages(t.images,(function(){void 0!==e&&e(object)})),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),object=this.parseObject(t.object,o,h,c,n),d=this.parseSkeletons(t.skeletons,object);if(this.bindSkeletons(object,d),void 0!==e){let t=!1;for(const e in l)if(l[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(object)}return object}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,n),o=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,o),c=this.parseMaterials(t.materials,l),object=this.parseObject(t.object,r,c,l,e),h=this.parseSkeletons(t.skeletons,object);return this.bindSkeletons(object,h),object}parseShapes(t){const e={};if(void 0!==t)for(let i=0,n=t.length;i<n;i++){const n=(new Bu).fromJSON(t[i]);e[n.uuid]=n}return e}parseSkeletons(t,object){const e={},n={};if(object.traverse((function(t){t.isBone&&(n[t.uuid]=t)})),void 0!==t)for(let i=0,r=t.length;i<r;i++){const r=(new Cc).fromJSON(t[i],n);e[r.uuid]=r}return e}parseGeometries(t,e){const n={};if(void 0!==t){const r=new Id;for(let i=0,o=t.length;i<o;i++){let o;const data=t[i];switch(data.type){case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(data);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:data.type in Th?o=Th[data.type].fromJSON(data,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${data.type}"`)}o.uuid=data.uuid,void 0!==data.name&&(o.name=data.name),!0===o.isBufferGeometry&&void 0!==data.userData&&(o.userData=data.userData),n[data.uuid]=o}}return n}parseMaterials(t,e){const n={},r={};if(void 0!==t){const o=new Cd;o.setTextures(e);for(let i=0,e=t.length;i<e;i++){const data=t[i];if("MultiMaterial"===data.type){const t=[];for(let e=0;e<data.materials.length;e++){const r=data.materials[e];void 0===n[r.uuid]&&(n[r.uuid]=o.parse(r)),t.push(n[r.uuid])}r[data.uuid]=t}else void 0===n[data.uuid]&&(n[data.uuid]=o.parse(data)),r[data.uuid]=n[data.uuid]}}return r}parseAnimations(t){const e={};if(void 0!==t)for(let i=0;i<t.length;i++){const data=t[i],n=Yh.parse(data);e[n.uuid]=n}return e}parseImages(t,e){const n=this,r={};let o;function l(image){if("string"==typeof image){const t=image;return function(t){return n.manager.itemStart(t),o.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t)}return image.data?{data:ci(image.type,image.data),width:image.width,height:image.height}:null}if(void 0!==t&&t.length>0){const n=new Kh(e);o=new ad(n),o.setCrossOrigin(this.crossOrigin);for(let i=0,e=t.length;i<e;i++){const image=t[i],e=image.url;if(Array.isArray(e)){r[image.uuid]=[];for(let t=0,n=e.length;t<n;t++){const n=l(e[t]);null!==n&&(n instanceof HTMLImageElement?r[image.uuid].push(n):r[image.uuid].push(new Ac(n.data,n.width,n.height)))}}else{const t=l(image.url);null!==t&&(r[image.uuid]=t)}}}return r}async parseImagesAsync(t){const e=this,n={};let r;async function o(image){if("string"==typeof image){const t=image,path=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:e.resourcePath+t;return await r.loadAsync(path)}return image.data?{data:ci(image.type,image.data),width:image.width,height:image.height}:null}if(void 0!==t&&t.length>0){r=new ad(this.manager),r.setCrossOrigin(this.crossOrigin);for(let i=0,e=t.length;i<e;i++){const image=t[i],e=image.url;if(Array.isArray(e)){n[image.uuid]=[];for(let t=0,r=e.length;t<r;t++){const r=e[t],l=await o(r);null!==l&&(l instanceof HTMLImageElement?n[image.uuid].push(l):n[image.uuid].push(new Ac(l.data,l.width,l.height)))}}else{const t=await o(image.url);null!==t&&(n[image.uuid]=t)}}}return n}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const r={};if(void 0!==t)for(let i=0,o=t.length;i<o;i++){const data=t[i];let o;void 0===data.image&&console.warn('THREE.ObjectLoader: No "image" specified for',data.uuid),void 0===e[data.image]&&console.warn("THREE.ObjectLoader: Undefined image",data.image);const image=e[data.image];Array.isArray(image)?(o=new Ws(image),6===image.length&&(o.needsUpdate=!0)):(o=image&&image.data?new Ac(image.data,image.width,image.height):new mi(image),image&&(o.needsUpdate=!0)),o.uuid=data.uuid,void 0!==data.name&&(o.name=data.name),void 0!==data.mapping&&(o.mapping=n(data.mapping,zd)),void 0!==data.offset&&o.offset.fromArray(data.offset),void 0!==data.repeat&&o.repeat.fromArray(data.repeat),void 0!==data.center&&o.center.fromArray(data.center),void 0!==data.rotation&&(o.rotation=data.rotation),void 0!==data.wrap&&(o.wrapS=n(data.wrap[0],Bd),o.wrapT=n(data.wrap[1],Bd)),void 0!==data.format&&(o.format=data.format),void 0!==data.type&&(o.type=data.type),void 0!==data.encoding&&(o.encoding=data.encoding),void 0!==data.minFilter&&(o.minFilter=n(data.minFilter,Fd)),void 0!==data.magFilter&&(o.magFilter=n(data.magFilter,Fd)),void 0!==data.anisotropy&&(o.anisotropy=data.anisotropy),void 0!==data.flipY&&(o.flipY=data.flipY),void 0!==data.premultiplyAlpha&&(o.premultiplyAlpha=data.premultiplyAlpha),void 0!==data.unpackAlignment&&(o.unpackAlignment=data.unpackAlignment),void 0!==data.userData&&(o.userData=data.userData),r[data.uuid]=o}return r}parseObject(data,t,e,n,r){let object,o,l;function c(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function h(t){if(void 0!==t){if(Array.isArray(t)){const n=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];void 0===e[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),n.push(e[r])}return n}return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),e[t]}}function d(t){return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),n[t]}switch(data.type){case"Scene":object=new Ql,void 0!==data.background&&(Number.isInteger(data.background)?object.background=new Xr(data.background):object.background=d(data.background)),void 0!==data.environment&&(object.environment=d(data.environment)),void 0!==data.fog&&("Fog"===data.fog.type?object.fog=new Zl(data.fog.color,data.fog.near,data.fog.far):"FogExp2"===data.fog.type&&(object.fog=new Yl(data.fog.color,data.fog.density)));break;case"PerspectiveCamera":object=new Gs(data.fov,data.aspect,data.near,data.far),void 0!==data.focus&&(object.focus=data.focus),void 0!==data.zoom&&(object.zoom=data.zoom),void 0!==data.filmGauge&&(object.filmGauge=data.filmGauge),void 0!==data.filmOffset&&(object.filmOffset=data.filmOffset),void 0!==data.view&&(object.view=Object.assign({},data.view));break;case"OrthographicCamera":object=new ha(data.left,data.right,data.top,data.bottom,data.near,data.far),void 0!==data.zoom&&(object.zoom=data.zoom),void 0!==data.view&&(object.view=Object.assign({},data.view));break;case"AmbientLight":object=new Ed(data.color,data.intensity);break;case"DirectionalLight":object=new Td(data.color,data.intensity);break;case"PointLight":object=new wd(data.color,data.intensity,data.distance,data.decay);break;case"RectAreaLight":object=new Ad(data.color,data.intensity,data.width,data.height);break;case"SpotLight":object=new yd(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case"HemisphereLight":object=new hd(data.color,data.groundColor,data.intensity);break;case"LightProbe":object=(new Rd).fromJSON(data);break;case"SkinnedMesh":o=c(data.geometry),l=h(data.material),object=new Tc(o,l),void 0!==data.bindMode&&(object.bindMode=data.bindMode),void 0!==data.bindMatrix&&object.bindMatrix.fromArray(data.bindMatrix),void 0!==data.skeleton&&(object.skeleton=data.skeleton);break;case"Mesh":o=c(data.geometry),l=h(data.material),object=new Is(o,l);break;case"InstancedMesh":o=c(data.geometry),l=h(data.material);const t=data.count,e=data.instanceMatrix,n=data.instanceColor;object=new Bc(o,l,t),object.instanceMatrix=new Pc(new Float32Array(e.array),16),void 0!==n&&(object.instanceColor=new Pc(new Float32Array(n.array),n.itemSize));break;case"LOD":object=new xc;break;case"Line":object=new Vc(c(data.geometry),h(data.material));break;case"LineLoop":object=new Xc(c(data.geometry),h(data.material));break;case"LineSegments":object=new qc(c(data.geometry),h(data.material));break;case"PointCloud":case"Points":object=new $c(c(data.geometry),h(data.material));break;case"Sprite":object=new mc(h(data.material));break;case"Group":object=new Gl;break;case"Bone":object=new Ec;break;default:object=new Ar}if(object.uuid=data.uuid,void 0!==data.name&&(object.name=data.name),void 0!==data.matrix?(object.matrix.fromArray(data.matrix),void 0!==data.matrixAutoUpdate&&(object.matrixAutoUpdate=data.matrixAutoUpdate),object.matrixAutoUpdate&&object.matrix.decompose(object.position,object.quaternion,object.scale)):(void 0!==data.position&&object.position.fromArray(data.position),void 0!==data.rotation&&object.rotation.fromArray(data.rotation),void 0!==data.quaternion&&object.quaternion.fromArray(data.quaternion),void 0!==data.scale&&object.scale.fromArray(data.scale)),void 0!==data.castShadow&&(object.castShadow=data.castShadow),void 0!==data.receiveShadow&&(object.receiveShadow=data.receiveShadow),data.shadow&&(void 0!==data.shadow.bias&&(object.shadow.bias=data.shadow.bias),void 0!==data.shadow.normalBias&&(object.shadow.normalBias=data.shadow.normalBias),void 0!==data.shadow.radius&&(object.shadow.radius=data.shadow.radius),void 0!==data.shadow.mapSize&&object.shadow.mapSize.fromArray(data.shadow.mapSize),void 0!==data.shadow.camera&&(object.shadow.camera=this.parseObject(data.shadow.camera))),void 0!==data.visible&&(object.visible=data.visible),void 0!==data.frustumCulled&&(object.frustumCulled=data.frustumCulled),void 0!==data.renderOrder&&(object.renderOrder=data.renderOrder),void 0!==data.userData&&(object.userData=data.userData),void 0!==data.layers&&(object.layers.mask=data.layers),void 0!==data.children){const o=data.children;for(let i=0;i<o.length;i++)object.add(this.parseObject(o[i],t,e,n,r))}if(void 0!==data.animations){const t=data.animations;for(let i=0;i<t.length;i++){const e=t[i];object.animations.push(r[e])}}if("LOD"===data.type){void 0!==data.autoUpdate&&(object.autoUpdate=data.autoUpdate);const t=data.levels;for(let e=0;e<t.length;e++){const n=t[e],r=object.getObjectByProperty("uuid",n.object);void 0!==r&&object.addLevel(r,n.distance)}}return object}bindSkeletons(object,t){0!==Object.keys(t).length&&object.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const n=t[e.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(n,e.bindMatrix)}}))}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const zd={UVMapping:ft,CubeReflectionMapping:mt,CubeRefractionMapping:gt,EquirectangularReflectionMapping:vt,EquirectangularRefractionMapping:yt,CubeUVReflectionMapping:xt,CubeUVRefractionMapping:_t},Bd={RepeatWrapping:Mt,ClampToEdgeWrapping:bt,MirroredRepeatWrapping:wt},Fd={NearestFilter:St,NearestMipmapNearestFilter:Tt,NearestMipmapLinearFilter:At,LinearFilter:Rt,LinearMipmapNearestFilter:Ct,LinearMipmapLinearFilter:Dt};class Od extends ed{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=Qh.get(t);if(void 0!==l)return o.manager.itemStart(t),setTimeout((function(){e&&e(l),o.manager.itemEnd(t)}),0),l;const c={};c.credentials="anonymous"===this.crossOrigin?"same-origin":"include",c.headers=this.requestHeader,fetch(t,c).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(o.options,{colorSpaceConversion:"none"}))})).then((function(n){Qh.add(t,n),e&&e(n),o.manager.itemEnd(t)})).catch((function(e){r&&r(e),o.manager.itemError(t),o.manager.itemEnd(t)})),o.manager.itemStart(t)}}let Ud;Od.prototype.isImageBitmapLoader=!0;const Hd={getContext:function(){return void 0===Ud&&(Ud=new(window.AudioContext||window.webkitAudioContext)),Ud},setContext:function(t){Ud=t}};class Gd extends ed{constructor(t){super(t)}load(t,e,n,r){const o=this,l=new id(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,(function(n){try{const t=n.slice(0);Hd.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)}}class kd extends Rd{constructor(t,e,n=1){super(void 0,n);const r=(new Xr).set(t),o=(new Xr).set(e),l=new bi(r.r,r.g,r.b),c=new bi(o.r,o.g,o.b),h=Math.sqrt(Math.PI),d=h*Math.sqrt(.75);this.sh.coefficients[0].copy(l).add(c).multiplyScalar(h),this.sh.coefficients[1].copy(l).sub(c).multiplyScalar(d)}}kd.prototype.isHemisphereLightProbe=!0;class Vd extends Rd{constructor(t,e=1){super(void 0,e);const n=(new Xr).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Vd.prototype.isAmbientLightProbe=!0;const Wd=new $i,jd=new $i,qd=new $i;class Xd{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Gs,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Gs,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,qd.copy(t.projectionMatrix);const n=e.eyeSep/2,r=n*e.near/e.focus,o=e.near*Math.tan(Jn*e.fov*.5)/e.zoom;let l,c;jd.elements[12]=-n,Wd.elements[12]=n,l=-o*e.aspect+r,c=o*e.aspect+r,qd.elements[0]=2*e.near/(c-l),qd.elements[8]=(c+l)/(c-l),this.cameraL.projectionMatrix.copy(qd),l=-o*e.aspect-r,c=o*e.aspect-r,qd.elements[0]=2*e.near/(c-l),qd.elements[8]=(c+l)/(c-l),this.cameraR.projectionMatrix.copy(qd)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(jd),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Wd)}}class Jd{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Yd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Yd();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function Yd(){return("undefined"==typeof performance?Date:performance).now()}const Zd=new bi,Qd=new Mi,Kd=new bi,$d=new bi;class tp extends Ar{constructor(){super(),this.type="AudioListener",this.context=Hd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Jd}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Zd,Qd,Kd),$d.set(0,0,-1).applyQuaternion(Qd),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Zd.x,t),e.positionY.linearRampToValueAtTime(Zd.y,t),e.positionZ.linearRampToValueAtTime(Zd.z,t),e.forwardX.linearRampToValueAtTime($d.x,t),e.forwardY.linearRampToValueAtTime($d.y,t),e.forwardZ.linearRampToValueAtTime($d.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(Zd.x,Zd.y,Zd.z),e.setOrientation($d.x,$d.y,$d.z,n.x,n.y,n.z)}}class ep extends Ar{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const source=this.context.createBufferSource();return source.buffer=this.buffer,source.loop=this.loop,source.loopStart=this.loopStart,source.loopEnd=this.loopEnd,source.onended=this.onEnded.bind(this),source.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=source,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let i=1,t=this.filters.length;i<t;i++)this.filters[i-1].connect(this.filters[i]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let i=1,t=this.filters.length;i<t;i++)this.filters[i-1].disconnect(this.filters[i]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(filter){return this.setFilters(filter?[filter]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const np=new bi,ip=new Mi,sp=new bi,ap=new bi;class op extends ep{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(np,ip,sp),ap.set(0,0,1).applyQuaternion(ip);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(np.x,t),e.positionY.linearRampToValueAtTime(np.y,t),e.positionZ.linearRampToValueAtTime(np.z,t),e.orientationX.linearRampToValueAtTime(ap.x,t),e.orientationY.linearRampToValueAtTime(ap.y,t),e.orientationZ.linearRampToValueAtTime(ap.z,t)}else e.setPosition(np.x,np.y,np.z),e.setOrientation(ap.x,ap.y,ap.z)}}class lp{constructor(audio,t=2048){this.analyser=audio.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),audio.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const data=this.getFrequencyData();for(let i=0;i<data.length;i++)t+=data[i];return t/data.length}}class cp{constructor(t,e,n){let r,o,l;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,o=t*r+r;let l=this.cumulativeWeight;if(0===l){for(let i=0;i!==r;++i)n[o+i]=n[i];l=e}else{l+=e;const t=e/l;this._mixBufferRegion(n,o,0,t,r)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let i=e,t=e+e;i!==t;++i)if(n[i]!==n[i+e]){c.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let i=n,t=r;i!==t;++i)e[i]=e[r+i%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]}_select(t,e,n,r,o){if(r>=.5)for(let i=0;i!==o;++i)t[e+i]=t[n+i]}_slerp(t,e,n,r){Mi.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,o){const l=this._workIndex*o;Mi.multiplyQuaternionsFlat(t,l,t,e,t,n),Mi.slerpFlat(t,e,t,e,t,l,r)}_lerp(t,e,n,r,o){const s=1-r;for(let i=0;i!==o;++i){const o=e+i;t[o]=t[o]*s+t[n+i]*r}}_lerpAdditive(t,e,n,r,o){for(let i=0;i!==o;++i){const o=e+i;t[o]=t[o]+t[n+i]*r}}}const up="\\[\\]\\.:\\/",hp=new RegExp("[\\[\\]\\.:\\/]","g"),dp="[^\\[\\]\\.:\\/]",pp="[^"+up.replace("\\.","")+"]",fp=/((?:WC+[\/:])*)/.source.replace("WC",dp),mp=/(WCOD+)?/.source.replace("WCOD",pp),gp=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",dp),vp=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",dp),yp=new RegExp("^"+fp+mp+gp+vp+"$"),xp=["material","materials","bones"];class _p{constructor(t,path,e){this.path=path,this.parsedPath=e||_p.parseTrackName(path),this.node=_p.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,path,e){return t&&t.isAnimationObjectGroup?new _p.Composite(t,path,e):new _p(t,path,e)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(hp,"")}static parseTrackName(t){const e=yp.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==xp.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const o=n(r.children);if(o)return o}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const source=this.resolvedProperty;for(let i=0,n=source.length;i!==n;++i)t[e++]=source[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let o=e.propertyIndex;if(t||(t=_p.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let i=0;i<t.length;i++)if(t[i].name===r){r=i;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const l=t[r];if(void 0===l){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let c=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?c=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==o){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[o]&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else void 0!==l.fromArray&&void 0!==l.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=r;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}_p.Composite=class{constructor(t,path,e){const n=e||_p.parseTrackName(path);this._targetGroup=t,this._bindings=t.subscribe_(path,n)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,e=t.length;i!==e;++i)t[i].bind()}unbind(){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,e=t.length;i!==e;++i)t[i].unbind()}},_p.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},_p.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},_p.prototype.GetterByBindingType=[_p.prototype._getValue_direct,_p.prototype._getValue_array,_p.prototype._getValue_arrayElement,_p.prototype._getValue_toArray],_p.prototype.SetterByBindingTypeAndVersioning=[[_p.prototype._setValue_direct,_p.prototype._setValue_direct_setNeedsUpdate,_p.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[_p.prototype._setValue_array,_p.prototype._setValue_array_setNeedsUpdate,_p.prototype._setValue_array_setMatrixWorldNeedsUpdate],[_p.prototype._setValue_arrayElement,_p.prototype._setValue_arrayElement_setNeedsUpdate,_p.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[_p.prototype._setValue_fromArray,_p.prototype._setValue_fromArray_setNeedsUpdate,_p.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Mp{constructor(){this.uuid=Zn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let i=0,e=arguments.length;i!==e;++i)t[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,o=this._bindings,l=o.length;let c,h=t.length,d=this.nCachedObjects_;for(let i=0,f=arguments.length;i!==f;++i){const object=arguments[i],f=object.uuid;let m=e[f];if(void 0===m){m=h++,e[f]=m,t.push(object);for(let t=0,e=l;t!==e;++t)o[t].push(new _p(object,n[t],r[t]))}else if(m<d){c=t[m];const h=--d,v=t[h];e[v.uuid]=m,t[m]=v,e[f]=h,t[h]=object;for(let t=0,e=l;t!==e;++t){const e=o[t],l=e[h];let c=e[m];e[m]=l,void 0===c&&(c=new _p(object,n[t],r[t])),e[h]=c}}else t[m]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=d}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let o=this.nCachedObjects_;for(let i=0,l=arguments.length;i!==l;++i){const object=arguments[i],l=object.uuid,c=e[l];if(void 0!==c&&c>=o){const h=o++,d=t[h];e[d.uuid]=c,t[c]=d,e[l]=h,t[h]=object;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[h],o=e[c];e[c]=r,e[h]=o}}}this.nCachedObjects_=o}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let o=this.nCachedObjects_,l=t.length;for(let i=0,c=arguments.length;i!==c;++i){const c=arguments[i].uuid,h=e[c];if(void 0!==h)if(delete e[c],h<o){const c=--o,d=t[c],f=--l,m=t[f];e[d.uuid]=h,t[h]=d,e[m.uuid]=c,t[c]=m,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[c],o=e[f];e[h]=r,e[c]=o,e.pop()}}else{const o=--l,c=t[o];o>0&&(e[c.uuid]=h),t[h]=c,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[h]=e[o],e.pop()}}}this.nCachedObjects_=o}subscribe_(path,t){const e=this._bindingsIndicesByPath;let n=e[path];const r=this._bindings;if(void 0!==n)return r[n];const o=this._paths,l=this._parsedPaths,c=this._objects,h=c.length,d=this.nCachedObjects_,f=new Array(h);n=r.length,e[path]=n,o.push(path),l.push(t),r.push(f);for(let i=d,e=c.length;i!==e;++i){const object=c[i];f[i]=new _p(object,path,t)}return f}unsubscribe_(path){const t=this._bindingsIndicesByPath,e=t[path];if(void 0!==e){const n=this._paths,r=this._parsedPaths,o=this._bindings,l=o.length-1,c=o[l];t[path[l]]=e,o[e]=c,o.pop(),r[e]=r[l],r.pop(),n[e]=n[l],n.pop()}}}Mp.prototype.isAnimationObjectGroup=!0;class bp{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:Ke,endingEnd:Ke};for(let i=0;i!==l;++i){const t=o[i].createInterpolant(null);c[i]=t,t.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Xe,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(time){return this._startTime=time,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,o=r/n,l=n/r;t.warp(1,o,e),this.warp(l,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,o=r.time,l=this.timeScale;let c=this._timeScaleInterpolant;null===c&&(c=r._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,d=c.sampleValues;return h[0]=o,h[1]=o+n,d[0]=t/l,d[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(time,t,e,n){if(!this.enabled)return void this._updateWeight(time);const r=this._startTime;if(null!==r){const n=(time-r)*e;if(n<0||0===e)return;this._startTime=null,t=e*n}t*=this._updateTimeScale(time);const o=this._updateTime(t),l=this._updateWeight(time);if(l>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===nn)for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(o),e[n].accumulateAdditive(l);else for(let r=0,c=t.length;r!==c;++r)t[r].evaluate(o),e[r].accumulate(n,l)}}_updateWeight(time){let t=0;if(this.enabled){t=this.weight;const e=this._weightInterpolant;if(null!==e){const n=e.evaluate(time)[0];t*=n,time>e.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(time){let t=0;if(!this.paused){t=this.timeScale;const e=this._timeScaleInterpolant;if(null!==e){t*=e.evaluate(time)[0],time>e.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(t){const e=this._clip.duration,n=this.loop;let time=this.time+t,r=this._loopCount;const o=n===Je;if(0===t)return-1===r?time:o&&1==(1&r)?e-time:time;if(n===qe){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(time>=e)time=e;else{if(!(time<0)){this.time=time;break t}time=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),time>=e||time<0){const n=Math.floor(time/e);time-=e*n,r+=Math.abs(n);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,time=t>0?e:0,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===l){const e=t<0;this._setEndings(e,!e,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=time,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=time;if(o&&1==(1&r))return e-time}return time}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=$e,r.endingEnd=$e):(r.endingStart=t?this.zeroSlopeAtStart?$e:Ke:tn,r.endingEnd=e?this.zeroSlopeAtEnd?$e:Ke:tn)}_scheduleFading(t,e,n){const r=this._mixer,o=r.time;let l=this._weightInterpolant;null===l&&(l=r._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}class wp extends jn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,o=r.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,d=this._bindingsByRootAndName;let f=d[h];void 0===f&&(f={},d[h]=f);for(let i=0;i!==o;++i){const track=r[i],t=track.name;let o=f[t];if(void 0!==o)l[i]=o;else{if(o=l[i],void 0!==o){null===o._cacheIndex&&(++o.referenceCount,this._addInactiveBinding(o,h,t));continue}const path=e&&e._propertyBindings[i].binding.parsedPath;o=new cp(_p.create(n,t,path),track.ValueTypeName,track.getValueSize()),++o.referenceCount,this._addInactiveBinding(o,h,t),l[i]=o}c[i].resultBuffer=o.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==t.useCount++&&(this._lendBinding(t),t.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==--t.useCount&&(t.restoreOriginalState(),this._takeBackBinding(t))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,o=this._actionsByClip;let l=o[e];if(void 0===l)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const e=l.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,d=h[h.length-1],f=t._byClipCacheIndex;d._byClipCacheIndex=f,h[f]=d,h.pop(),t._byClipCacheIndex=null;delete c.actionByRoot[(t._localRoot||this._root).uuid],0===h.length&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==--t.referenceCount&&this._removeInactiveBinding(t)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,o=this._bindings;let l=r[e];void 0===l&&(l={},r[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[r],h=e[e.length-1],d=t._cacheIndex;h._cacheIndex=d,e[d]=h,e.pop(),delete c[o],0===Object.keys(c).length&&delete l[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new Uh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,o=e[r];t.__cacheIndex=r,e[r]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const r=e||this._root,o=r.uuid;let l="string"==typeof t?Yh.findByName(r,t):t;const c=null!==l?l.uuid:t,h=this._actionsByClip[c];let d=null;if(void 0===n&&(n=null!==l?l.blendMode:en),void 0!==h){const t=h.actionByRoot[o];if(void 0!==t&&t.blendMode===n)return t;d=h.knownActions[0],null===l&&(l=d._clip)}if(null===l)return null;const f=new bp(this,l,e,n);return this._bindAction(f,d),this._addInactiveAction(f,c,o),f}existingAction(t,e){const n=e||this._root,r=n.uuid,o="string"==typeof t?Yh.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return void 0!==c&&c.actionByRoot[r]||null}stopAllAction(){const t=this._actions;for(let i=this._nActiveActions-1;i>=0;--i)t[i].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,time=this.time+=t,r=Math.sign(t),o=this._accuIndex^=1;for(let i=0;i!==n;++i){e[i]._update(time,t,r,o)}const l=this._bindings,c=this._nActiveBindings;for(let i=0;i!==c;++i)l[i].apply(o);return this}setTime(t){this.time=0;for(let i=0;i<this._actions.length;i++)this._actions[i].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,o=r[n];if(void 0!==o){const t=o.knownActions;for(let i=0,n=t.length;i!==n;++i){const n=t[i];this._deactivateAction(n);const r=n._cacheIndex,o=e[e.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,o._cacheIndex=r,e[r]=o,e.pop(),this._removeInactiveBindingsForAction(n)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const r=n[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const t in r){const e=r[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}wp.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Sp{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Sp(void 0===this.value.clone?this.value:this.value.clone())}}class Tp extends Kl{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n}copy(source){return super.copy(source),this.meshPerAttribute=source.meshPerAttribute,this}clone(data){const t=super.clone(data);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(data){const t=super.toJSON(data);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}Tp.prototype.isInstancedInterleavedBuffer=!0;class Ep{constructor(t,e,n,r,o){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=o,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}Ep.prototype.isGLBufferAttribute=!0;class Ap{constructor(t,e,n=0,r=1/0){this.ray=new Ki(t,e),this.near=n,this.far=r,this.camera=null,this.layers=new dr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(object,t=!0,e=[]){return Rp(object,this,e,t),e.sort(Lp),e}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)Rp(t[i],this,n,e);return n.sort(Lp),n}}function Lp(a,b){return a.distance-b.distance}function Rp(object,t,e,n){if(object.layers.test(t.layers)&&object.raycast(t,e),!0===n){const n=object.children;for(let i=0,r=n.length;i<r;i++)Rp(n[i],t,e,!0)}}class Cp{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Qn(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Pp{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}const Dp=new ri;class Ip{constructor(t=new ri(1/0,1/0),e=new ri(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,e){const n=Dp.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Dp.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Ip.prototype.isBox2=!0;const Np=new bi,zp=new bi;class Bp{constructor(t=new bi,e=new bi){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(line){return this.start.copy(line.start),this.end.copy(line.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Np.subVectors(t,this.start),zp.subVectors(this.end,this.start);const n=zp.dot(zp);let r=zp.dot(Np)/n;return e&&(r=Qn(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(line){return line.start.equals(this.start)&&line.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Fp=new bi;class Op extends Ar{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new ms,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let i=0,t=1,e=32;i<e;i++,t++){const n=i/e*Math.PI*2,o=t/e*Math.PI*2;r.push(Math.cos(n),Math.sin(n),1,Math.cos(o),Math.sin(o),1)}n.setAttribute("position",new as(r,3));const o=new Fc({fog:!1,toneMapped:!1});this.cone=new qc(n,o),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Fp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Fp),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Up=new bi,Hp=new $i,Gp=new $i;class kp extends qc{constructor(object){const t=Vp(object),e=new ms,n=[],r=[],o=new Xr(0,0,1),l=new Xr(0,1,0);for(let i=0;i<t.length;i++){const e=t[i];e.parent&&e.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(o.r,o.g,o.b),r.push(l.r,l.g,l.b))}e.setAttribute("position",new as(n,3)),e.setAttribute("color",new as(r,3));super(e,new Fc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=object,this.bones=t,this.matrix=object.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");Gp.copy(this.root.matrixWorld).invert();for(let i=0,t=0;i<e.length;i++){const n=e[i];n.parent&&n.parent.isBone&&(Hp.multiplyMatrices(Gp,n.matrixWorld),Up.setFromMatrixPosition(Hp),r.setXYZ(t,Up.x,Up.y,Up.z),Hp.multiplyMatrices(Gp,n.parent.matrixWorld),Up.setFromMatrixPosition(Hp),r.setXYZ(t+1,Up.x,Up.y,Up.z),t+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function Vp(object){const t=[];object&&object.isBone&&t.push(object);for(let i=0;i<object.children.length;i++)t.push.apply(t,Vp(object.children[i]));return t}class Wp extends Is{constructor(t,e,n){super(new yh(e,4,2),new Jr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const jp=new bi,qp=new Xr,Xp=new Xr;class Jp extends Ar{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new mh(e);r.rotateY(.5*Math.PI),this.material=new Jr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const o=r.getAttribute("position"),l=new Float32Array(3*o.count);r.setAttribute("color",new Qr(l,3)),this.add(new Is(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");qp.copy(this.light.color),Xp.copy(this.light.groundColor);for(let i=0,t=e.count;i<t;i++){const n=i<t/2?qp:Xp;e.setXYZ(i,n.r,n.g,n.b)}e.needsUpdate=!0}t.lookAt(jp.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Yp extends qc{constructor(t=10,e=10,n=4473924,r=8947848){n=new Xr(n),r=new Xr(r);const o=e/2,l=t/e,c=t/2,h=[],d=[];for(let i=0,t=0,f=-c;i<=e;i++,f+=l){h.push(-c,0,f,c,0,f),h.push(f,0,-c,f,0,c);const e=i===o?n:r;e.toArray(d,t),t+=3,e.toArray(d,t),t+=3,e.toArray(d,t),t+=3,e.toArray(d,t),t+=3}const f=new ms;f.setAttribute("position",new as(h,3)),f.setAttribute("color",new as(d,3));super(f,new Fc({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class Zp extends qc{constructor(t=10,e=16,n=8,r=64,o=4473924,l=8947848){o=new Xr(o),l=new Xr(l);const c=[],h=[];for(let i=0;i<=e;i++){const n=i/e*(2*Math.PI),r=Math.sin(n)*t,d=Math.cos(n)*t;c.push(0,0,0),c.push(r,0,d);const f=1&i?o:l;h.push(f.r,f.g,f.b),h.push(f.r,f.g,f.b)}for(let i=0;i<=n;i++){const e=1&i?o:l,d=t-t/n*i;for(let t=0;t<r;t++){let n=t/r*(2*Math.PI),o=Math.sin(n)*d,l=Math.cos(n)*d;c.push(o,0,l),h.push(e.r,e.g,e.b),n=(t+1)/r*(2*Math.PI),o=Math.sin(n)*d,l=Math.cos(n)*d,c.push(o,0,l),h.push(e.r,e.g,e.b)}}const d=new ms;d.setAttribute("position",new as(c,3)),d.setAttribute("color",new as(h,3));super(d,new Fc({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const Qp=new bi,Kp=new bi,$p=new bi;class tf extends Ar{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let r=new ms;r.setAttribute("position",new as([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const o=new Fc({fog:!1,toneMapped:!1});this.lightPlane=new Vc(r,o),this.add(this.lightPlane),r=new ms,r.setAttribute("position",new as([0,0,0,0,0,1],3)),this.targetLine=new Vc(r,o),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Qp.setFromMatrixPosition(this.light.matrixWorld),Kp.setFromMatrixPosition(this.light.target.matrixWorld),$p.subVectors(Kp,Qp),this.lightPlane.lookAt(Kp),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Kp),this.targetLine.scale.z=$p.length()}}const ef=new bi,nf=new Hs;class rf extends qc{constructor(t){const e=new ms,n=new Fc({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],o=[],l={},c=new Xr(16755200),h=new Xr(16711680),d=new Xr(43775),f=new Xr(16777215),m=new Xr(3355443);function v(a,b,t){y(a,t),y(b,t)}function y(t,e){r.push(0,0,0),o.push(e.r,e.g,e.b),void 0===l[t]&&(l[t]=[]),l[t].push(r.length/3-1)}v("n1","n2",c),v("n2","n4",c),v("n4","n3",c),v("n3","n1",c),v("f1","f2",c),v("f2","f4",c),v("f4","f3",c),v("f3","f1",c),v("n1","f1",c),v("n2","f2",c),v("n3","f3",c),v("n4","f4",c),v("p","n1",h),v("p","n2",h),v("p","n3",h),v("p","n4",h),v("u1","u2",d),v("u2","u3",d),v("u3","u1",d),v("c","t",f),v("p","c",m),v("cn1","cn2",m),v("cn3","cn4",m),v("cf1","cf2",m),v("cf3","cf4",m),e.setAttribute("position",new as(r,3)),e.setAttribute("color",new as(o,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update()}update(){const t=this.geometry,e=this.pointMap;nf.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),sf("c",e,t,nf,0,0,-1),sf("t",e,t,nf,0,0,1),sf("n1",e,t,nf,-1,-1,-1),sf("n2",e,t,nf,1,-1,-1),sf("n3",e,t,nf,-1,1,-1),sf("n4",e,t,nf,1,1,-1),sf("f1",e,t,nf,-1,-1,1),sf("f2",e,t,nf,1,-1,1),sf("f3",e,t,nf,-1,1,1),sf("f4",e,t,nf,1,1,1),sf("u1",e,t,nf,.7,1.1,-1),sf("u2",e,t,nf,-.7,1.1,-1),sf("u3",e,t,nf,0,2,-1),sf("cf1",e,t,nf,-1,0,1),sf("cf2",e,t,nf,1,0,1),sf("cf3",e,t,nf,0,-1,1),sf("cf4",e,t,nf,0,1,1),sf("cn1",e,t,nf,-1,0,-1),sf("cn2",e,t,nf,1,0,-1),sf("cn3",e,t,nf,0,-1,-1),sf("cn4",e,t,nf,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function sf(t,e,n,r,o,l,c){ef.set(o,l,c).unproject(r);const h=e[t];if(void 0!==h){const t=n.getAttribute("position");for(let i=0,e=h.length;i<e;i++)t.setXYZ(h[i],ef.x,ef.y,ef.z)}}const af=new Ti;class of extends qc{constructor(object,t=16776960){const e=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new ms;r.setIndex(new Qr(e,1)),r.setAttribute("position",new Qr(n,3)),super(r,new Fc({color:t,toneMapped:!1})),this.object=object,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(object){if(void 0!==object&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&af.setFromObject(this.object),af.isEmpty())return;const t=af.min,e=af.max,n=this.geometry.attributes.position,r=n.array;r[0]=e.x,r[1]=e.y,r[2]=e.z,r[3]=t.x,r[4]=e.y,r[5]=e.z,r[6]=t.x,r[7]=t.y,r[8]=e.z,r[9]=e.x,r[10]=t.y,r[11]=e.z,r[12]=e.x,r[13]=e.y,r[14]=t.z,r[15]=t.x,r[16]=e.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=e.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(object){return this.object=object,this.update(),this}copy(source){return qc.prototype.copy.call(this,source),this.object=source.object,this}}class lf extends qc{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new ms;r.setIndex(new Qr(n,1)),r.setAttribute("position",new as([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Fc({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class cf extends Vc{constructor(t,e=1,n=16776960){const r=n,o=new ms;o.setAttribute("position",new as([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),o.computeBoundingSphere(),super(o,new Fc({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const l=new ms;l.setAttribute("position",new as([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),l.computeBoundingSphere(),this.add(new Is(l,new Jr({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?M:_,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const uf=new bi;let hf,df;class pf extends Ar{constructor(t=new bi(0,0,1),e=new bi(0,0,0),n=1,r=16776960,o=.2*n,l=.2*o){super(),this.type="ArrowHelper",void 0===hf&&(hf=new ms,hf.setAttribute("position",new as([0,0,0,0,1,0],3)),df=new su(0,.5,1,5,1),df.translate(0,-.5,0)),this.position.copy(e),this.line=new Vc(hf,new Fc({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Is(df,new Jr({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,o,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{uf.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(uf,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(source){return super.copy(source,!1),this.line.copy(source.line),this.cone.copy(source.cone),this}}class ff extends qc{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new ms;n.setAttribute("position",new as(e,3)),n.setAttribute("color",new as([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new Fc({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,n){const r=new Xr,o=this.geometry.attributes.color.array;return r.set(t),r.toArray(o,0),r.toArray(o,3),r.set(e),r.toArray(o,6),r.toArray(o,9),r.set(n),r.toArray(o,12),r.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class mf{constructor(){this.type="ShapePath",this.color=new Xr,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new zu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,o,l){return this.currentPath.bezierCurveTo(t,e,n,r,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i],r=new Bu;r.curves=n.curves,e.push(r)}return e}function r(t,e){const n=e.length;let r=!1;for(let p=n-1,q=0;q<n;p=q++){let n=e[p],o=e[q],l=o.x-n.x,c=o.y-n.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(n=e[q],l=-l,o=e[p],c=-c),t.y<n.y||t.y>o.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=c*(t.x-n.x)-l*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(o.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=o.x)return!0}}return r}const o=lh.isClockWise,l=this.subPaths;if(0===l.length)return[];if(!0===e)return n(l);let c,h,d;const f=[];if(1===l.length)return h=l[0],d=new Bu,d.curves=h.curves,f.push(d),f;let m=!o(l[0].getPoints());m=t?!m:m;const v=[],y=[];let x,_,M=[],w=0;y[w]=void 0,M[w]=[];for(let i=0,e=l.length;i<e;i++)h=l[i],x=h.getPoints(),c=o(x),c=t?!c:c,c?(!m&&y[w]&&w++,y[w]={s:new Bu,p:x},y[w].s.curves=h.curves,m&&w++,M[w]=[]):M[w].push({h:h,p:x[0]});if(!y[0])return n(l);if(y.length>1){let t=!1;const e=[];for(let t=0,e=y.length;t<e;t++)v[t]=[];for(let n=0,o=y.length;n<o;n++){const o=M[n];for(let l=0;l<o.length;l++){const c=o[l];let h=!0;for(let o=0;o<y.length;o++)r(c.p,y[o].p)&&(n!==o&&e.push({froms:n,tos:o,hole:l}),h?(h=!1,v[o].push(c)):t=!0);h&&v[n].push(c)}}e.length>0&&(t||(M=v))}for(let i=0,t=y.length;i<t;i++){d=y[i].s,f.push(d),_=M[i];for(let t=0,e=_.length;t<e;t++)d.holes.push(_[t].h)}return f}}const gf=new Float32Array(1),vf=new Int32Array(gf.buffer);class yf{static toHalfFloat(t){t>65504&&(console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."),t=65504),gf[0]=t;const e=vf[0];let n=e>>16&32768,r=e>>12&2047;const o=e>>23&255;return o<103?n:o>142?(n|=31744,n|=(255==o?0:1)&&8388607&e,n):o<113?(r|=2048,n|=(r>>114-o)+(r>>113-o&1),n):(n|=o-112<<10|r>>1,n+=1&r,n)}}const xf=0,_f=1,Mf=0,bf=1,wf=2;function Sf(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function Tf(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function Ef(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new $c(t,e)}function Af(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new mc(t)}function Lf(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new $c(t,e)}function Rf(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Jc(t)}function Cf(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Jc(t)}function Pf(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Jc(t)}function Df(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new bi(t,e,n)}function If(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Qr(t,e).setUsage(zn)}function Nf(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Kr(t,e)}function zf(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new $r(t,e)}function Bf(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ts(t,e)}function Ff(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new es(t,e)}function Of(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new ns(t,e)}function Uf(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new is(t,e)}function Hf(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new rs(t,e)}function Gf(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new as(t,e)}function kf(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new os(t,e)}function Vf(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new ff(t)}function Wf(object,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new of(object,t)}function jf(object,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new qc(new pu(object.geometry),new Fc({color:void 0!==t?t:16777215}))}function qf(object,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new qc(new wh(object.geometry),new Fc({color:void 0!==t?t:16777215}))}function Xf(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new id(t)}function Jf(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new ld(t)}function Yf(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new js(t,n)}function Zf(){console.error("THREE.CanvasRenderer has been removed")}function Qf(){console.error("THREE.JSONLoader has been removed.")}fu.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(fu.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},zu.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},Yp.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},kp.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},ed.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Pd.extractUrlBase(t)},ed.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Ip.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Ip.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ip.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Ip.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},Ti.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Ti.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ti.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Ti.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Ti.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},Wi.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ks.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Bp.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},si.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},si.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},si.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},si.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},si.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},si.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},$i.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},$i.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},$i.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new bi).setFromMatrixColumn(this,3)},$i.prototype.setRotationFromQuaternion=function(q){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(q)},$i.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},$i.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},$i.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},$i.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},$i.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},$i.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},$i.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},$i.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},$i.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},$i.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},$i.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},$i.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},$i.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},$i.prototype.makeFrustum=function(t,e,n,r,o,l){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,o,l)},$i.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Ys.prototype.isIntersectionLine=function(line){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(line)},Mi.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Mi.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Ki.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Ki.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Ki.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Or.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Or.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Or.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Or.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Or.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Or.barycoordFromPoint=function(t,a,b,e,n){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Or.getBarycoord(t,a,b,e,n)},Or.normal=function(a,b,t,e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Or.getNormal(a,b,t,e)},Bu.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},Bu.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new hh(this,t)},Bu.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new vh(this,t)},ri.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},ri.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},ri.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},bi.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},bi.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},bi.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},bi.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},bi.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},bi.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},bi.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},bi.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},bi.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},vi.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},vi.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ar.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},Ar.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Ar.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},Ar.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Ar.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Ar.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Is.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Is.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),rn},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Tc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Gs.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(ud.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Qr.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===zn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(zn)}}}),Qr.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?zn:Nn),this},Qr.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Qr.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ms.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},ms.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Qr(arguments[1],arguments[2])))},ms.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},ms.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},ms.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},ms.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},ms.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(ms.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Kl.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?zn:Nn),this},Kl.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},hh.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},hh.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},hh.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Ql.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Sp.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Hr.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Xr}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===S}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Us.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Xl.prototype.clearTarget=function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},Xl.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Xl.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Xl.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Xl.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Xl.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Xl.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Xl.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Xl.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Xl.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Xl.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Xl.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Xl.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Xl.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Xl.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Xl.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Xl.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Xl.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Xl.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Xl.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Xl.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Xl.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Xl.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Xl.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Xl.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Xl.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?ln:on}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Bl.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(yi.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),ep.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new Gd).load(t,(function(t){e.setBuffer(t)})),this},lp.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Vs.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Vs.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},pi.crossOrigin=void 0,pi.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const o=new cd;o.setCrossOrigin(this.crossOrigin);const l=o.load(t,n,void 0,r);return e&&(l.mapping=e),l},pi.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const o=new od;o.setCrossOrigin(this.crossOrigin);const l=o.load(t,n,void 0,r);return e&&(l.mapping=e),l},pi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},pi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Kf={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function $f(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}function tm(){return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),new ms}function nm(){return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),new ms}function im(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function rm(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function sm(){console.error("THREE.ImmediateRenderObject has been removed.")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)}}]);